{
 "exception":"invalid syntax (<unknown>, line 57)",
 "traceback":[
  "Traceback (most recent call last):",
  "  File \"/root/repo/cf-scripts/conda_forge_tick/audit.py\", line 67, in main",
  "    deps = audit_feedstock(fctx, ctx)",
  "  File \"/root/repo/cf-scripts/conda_forge_tick/audit.py\", line 33, in audit_feedstock",
  "    deps = simple_import_search(cb_work_dir, remap=True)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 336, in simple_import_search",
  "    for mod, path, catcher in catchers:",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 295, in iterate_over_library",
  "    yield parse_file(full_file_path)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 264, in parse_file",
  "    catcher = get_imported_libs(code)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 238, in get_imported_libs",
  "    tree = ast.parse(code)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/ast.py\", line 35, in parse",
  "    return compile(source, filename, mode, PyCF_ONLY_AST)",
  "  File \"<unknown>\", line 57",
  "    DEFAULT_TASK_LOG_FMT = \"\"\"[%(asctime)s: %(levelname)s/%(processName)s] \\",
  "",
  "DEFAULT_SECURITY_DIGEST = 'sha256'",
  "",
  "",
  "OLD_NS = {'celery_{0}'}",
  "OLD_NS_BEAT = {'celerybeat_{0}'}",
  "OLD_NS_WORKER = {'celeryd_{0}'}",
  "",
  "searchresult = namedtuple('searchresult', ('namespace', 'key', 'type'))",
  "",
  "",
  "def Namespace(__old__=None, **options):",
  "    if __old__ is not None:",
  "        for key, opt in items(options):",
  "            if not opt.old:",
  "                opt.old = {o.format(key) for o in __old__}",
  "    return options",
  "",
  "",
  "def old_ns(ns):",
  "    return {'{0}_{{0}}'.format(ns)}",
  "",
  "",
  "@python_2_unicode_compatible",
  "class Option(object):",
  "    \"\"\"Describes a Celery configuration option.\"\"\"",
  "                                                                            ",
  "",
  "                                  ",
  "",
  "",
  "                       ",
  "                                ",
  "                               ",
  "",
  "                                                                       ",
  "",
  "",
  "                                       ",
  "                           ",
  "                                       ",
  "                           ",
  "                                                          ",
  "                  ",
  "",
  "",
  "               ",
  "                                   ",
  "",
  "",
  "                            ",
  "                     ",
  "               ^",
  "SyntaxError: invalid syntax",
  ""
 ]
}