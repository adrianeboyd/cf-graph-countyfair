{
 "exception":"invalid syntax (<unknown>, line 802)",
 "traceback":[
  "Traceback (most recent call last):",
  "  File \"/root/repo/cf-scripts/conda_forge_tick/audit.py\", line 68, in main",
  "    deps = audit_feedstock(fctx, ctx)",
  "  File \"/root/repo/cf-scripts/conda_forge_tick/audit.py\", line 33, in audit_feedstock",
  "    deps = simple_import_search(cb_work_dir, remap=True)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 336, in simple_import_search",
  "    for mod, path, catcher in catchers:",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 295, in iterate_over_library",
  "    yield parse_file(full_file_path)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 264, in parse_file",
  "    catcher = get_imported_libs(code)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/depfinder/main.py\", line 238, in get_imported_libs",
  "    tree = ast.parse(code)",
  "  File \"/opt/conda/envs/run_env/lib/python3.7/ast.py\", line 35, in parse",
  "    return compile(source, filename, mode, PyCF_ONLY_AST)",
  "  File \"<unknown>\", line 802",
  "    latextext = r'''",
  "Hello % comment here",
  "  % more comments ",
  "",
  "New paragraph here.",
  "",
  "        lw = LatexWalker(latextext, tolerant_parsing=True)",
  "        parsing_state = lw.make_parsing_state()",
  "",
  "        self.assertEqual(",
  "            lw.get_latex_nodes(pos=0, parsing_state=parsing_state),",
  "            ([",
  "                LatexCharsNode(parsing_state=parsing_state,",
  "                               chars='Hello ',",
  "                               pos=0, len=6),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' comment here',",
  "                                 comment_post_space='\\n  ',",
  "                                 pos=6, len=20-6+1+2),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' more comments ',",
  "                                 comment_post_space='',",
  "                                 pos=21+2, len=18-2),",
  "                LatexCharsNode(parsing_state=parsing_state,",
  "                               chars='\\n\\nNew paragraph here.\\n',",
  "                               pos=21+18, len=1+1+19+1),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' comment at end',",
  "                                 comment_post_space='',",
  "                                 pos=21+18+2+20, len=16),",
  "             ],",
  "             0,len(latextext))",
  "        )",
  "",
  "        latextext = r\"\"\"",
  "Line with % a comment here",
  "",
  "",
  "Also a \\itshape% comment after a macro",
  "some italic text.\"\"\".lstrip()",
  "        ",
  "        lw = LatexWalker(latextext, tolerant_parsing=True)",
  "        parsing_state = lw.make_parsing_state()",
  "",
  "        self.assertEqual(",
  "            lw.get_latex_nodes(pos=0, parsing_state=parsing_state),",
  "            ([",
  "                LatexCharsNode(parsing_state=parsing_state,",
  "                               chars='Line with ',",
  "                               pos=0, len=10),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' a comment here',",
  "                                 comment_post_space='',",
  "                                 pos=10, len=26-10),",
  "                LatexCharsNode(parsing_state=parsing_state,",
  "                               chars='\\n\\n',",
  "                               pos=26, len=2),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' line comment on its own',",
  "                                 comment_post_space='\\n',",
  "                                 pos=27+1, len=25+1),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' and a second line',",
  "                                 comment_post_space='',",
  "                                 pos=27+1+26, len=19),",
  "                LatexCharsNode(parsing_state=parsing_state,",
  "                               chars='\\n\\nAlso a ',",
  "                               pos=27+1+26+19, len=2+7),",
  "                LatexMacroNode(parsing_state=parsing_state,",
  "                               macroname=r'itshape',",
  "                               macro_post_space='',",
  "                               nodeargd=macrospec.ParsedMacroArgs(argspec='',argnlist=[]),",
  "                               pos=27+1+26+20+1+7, len=15-7),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' comment after a macro',",
  "                                 comment_post_space='\\n',",
  "                                 pos=27+1+26+20+1+15, len=39-15),",
  "                LatexCommentNode(parsing_state=parsing_state,",
  "                                 comment=' and also a second line',",
  "                                 comment_post_space='\\n',",
  "                                 pos=27+1+26+20+1+39, len=25),",
  "                LatexCharsNode(parsing_state=parsing_state,",
  "                               chars='some italic text.',",
  "                               pos=27+1+26+20+1+39+25, len=17),",
  "",
  "             ],",
  "             0,len(latextext))",
  "        )",
  "",
  "",
  "    def test_get_latex_nodes_read_max_nodes(self):",
  "",
  "        latextext = r'''Text and \\`accent and \\textbf{bold text} and $\\vec b$ more stuff for Fran\\c cois",
  "                    ",
  "                    ",
  "                  ",
  "",
  "                   ",
  "",
  "                                                          ",
  "                                               ",
  "",
  "                         ",
  "                                                                   ",
  "              ",
  "                                                           ",
  "                                              ",
  "                                             ",
  "                                                             ",
  "                                                         ",
  "                                                           ",
  "                                                      ",
  "                                                             ",
  "                                                           ",
  "                                                       ",
  "                                                     ",
  "                                                           ",
  "                                                                 ",
  "                                                        ",
  "                                                             ",
  "                                                           ",
  "                                                       ",
  "                                                         ",
  "               ",
  "                              ",
  "         ",
  "",
  "                        ",
  "                          ",
  "",
  "",
  "                                      ",
  "                             ",
  "        ",
  "                                                          ",
  "                                               ",
  "",
  "                         ",
  "                                                                   ",
  "              ",
  "                                                           ",
  "                                                  ",
  "                                              ",
  "                                                             ",
  "                                                           ",
  "                                                       ",
  "                                                    ",
  "                                                           ",
  "                                            ",
  "                                              ",
  "                                                             ",
  "                                                                    ",
  "                                                         ",
  "                                                     ",
  "                                                             ",
  "                                                              ",
  "                                                       ",
  "                                                      ",
  "                                                           ",
  "                                                   ",
  "                                                        ",
  "                                                           ",
  "                                                    ",
  "                                                   ",
  "                                                                                          ",
  "                                                             ",
  "                                                             ",
  "                                                                  ",
  "                                                         ",
  "                                                                 ",
  "                                                             ",
  "                                                                   ",
  "                                                         ",
  "                                                              ",
  "                                                           ",
  "                                                         ",
  "                                                               ",
  "",
  "               ",
  "                              ",
  "         ",
  "",
  "",
  "                                                  ",
  "",
  "                           ^",
  "SyntaxError: invalid syntax",
  ""
 ]
}