{
 "bad":"Upstream: Error getting upstream version",
 "conda-forge.yml":{},
 "feedstock_name":"_openmp_mutex",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/conda-forge/openmp-feedstock",
   "license":"BSD-3-Clause",
   "license_file":"LICENSE",
   "summary":"OpenMP Implementation Mutex"
  },
  "build":{
   "always_include_files":[
    "lib/libgomp.so.1",
    "lib/libgomp.so.1",
    "lib/libgomp.so.1"
   ],
   "ignore_run_exports":[
    "_openmp_mutex",
    "_openmp_mutex",
    "_openmp_mutex"
   ],
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true,
   "string":"0_llvm",
   "track_features":[
    "llvm_openmp",
    "llvm_openmp",
    "llvm_openmp"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "isuruf",
    "beckermr",
    "isuruf",
    "beckermr",
    "isuruf",
    "beckermr"
   ]
  },
  "package":{
   "name":"_openmp_mutex",
   "version":"4.5"
  },
  "requirements":{
   "host":[
    "llvm-openmp >=9.0.1",
    "llvm-openmp >=9.0.1",
    "llvm-openmp >=9.0.1"
   ],
   "run":[
    "llvm-openmp >=9.0.1",
    "llvm-openmp >=9.0.1",
    "llvm-openmp >=9.0.1",
    "_libgcc_mutex"
   ]
  },
  "source":{
   "path":"."
  },
  "test":{
   "commands":[
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "ldd omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "ldd omp_hello"
   ],
   "files":[
    "omp_hello.c",
    "omp_hello.c",
    "omp_hello.c"
   ],
   "requires":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "name":"_openmp_mutex",
 "raw_meta_yaml":"{% set name = \"_openmp_mutex\" %}\n{% set version = \"4.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  path: .\n\nbuild:\n  string: 0_llvm\n  skip: true  # [not (linux64 or ppc64le)]\n  always_include_files:\n    # this major version has to match the libgomp version from gcc\n    - lib/libgomp.so.1\n  track_features:\n    - llvm_openmp\n  ignore_run_exports:\n    - _openmp_mutex\n  run_exports:\n    - {{ pin_subpackage('_openmp_mutex', max_pin=None) }}\n\nrequirements:\n  host:\n    - llvm-openmp >=9.0.1\n  run:\n    - llvm-openmp >=9.0.1\n    # the selector here serves no real purpose, but conda appears\n    # to error without it, so here we are\n    - _libgcc_mutex {{ _libgcc_mutex }}  # [linux]\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  commands:\n    - test -f $PREFIX/lib/libgomp.so.1\n    - if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi\n    - rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello\n    - ldd omp_hello  # [linux]\n    - rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello\n    - ldd omp_hello  # [linux]\n  files:\n    - omp_hello.c\n\nabout:\n  summary: OpenMP Implementation Mutex\n  license: BSD-3-Clause\n  license_file: LICENSE\n  home: https://github.com/conda-forge/openmp-feedstock\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - beckermr\n",
 "req":{
  "__set__":true,
  "elements":[
   "_libgcc_mutex",
   "llvm-openmp"
  ]
 },
 "url":null,
 "version":"4.5"
}