{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/419466736.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "hdf51106"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/419659384.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "9.0.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Variant configuration errors in ./feedstocks/abinit-feedstock/.ci_support/linux_64_c_compiler_version7cxx_compiler_version7fortran_compiler_version7.yaml:\n  zip fields in zip_key group ('cdt_name', 'docker_image') are not all the same length",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 937, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run",
   "    solvable, errors, _ = is_recipe_solvable(feedstock_dir)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 433, in is_recipe_solvable",
   "    additional_channels=additional_channels,",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 516, in _is_recipe_solvable_on_platform",
   "    cbc, _ = conda_build.variants.get_package_combined_spec(recipe_dir, config=config)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda_build/variants.py\", line 523, in get_package_combined_spec",
   "    validate_spec(f, spec)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda_build/variants.py\", line 171, in validate_spec",
   "    raise ValueError(\"Variant configuration errors in {}:\\n{}\".format(src, \"\\n\".join(errors)))",
   "ValueError: Variant configuration errors in ./feedstocks/abinit-feedstock/.ci_support/linux_64_c_compiler_version7cxx_compiler_version7fortran_compiler_version7.yaml:",
   "  zip fields in zip_key group ('cdt_name', 'docker_image') are not all the same length",
   ""
  ]
 },
 "conda-forge.yml": {},
 "feedstock_name": "abinit",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "ABINIT is a software suite to calculate the optical, mechanical,\nvibrational, and other observable properties of materials. Starting\nfrom the quantum equations of density functional theory, you can\nbuild up to advanced applications with perturbation theories based on\nDFT, and many-body Green's functions (GW and DMFT) ...\n",
   "dev_url": "https://github.com/abinit/abinit/",
   "doc_url": "https://wiki.abinit.org/doku.php",
   "home": "https://www.abinit.org",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "ABINIT is an atomic-scale simulation software suite."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "gmatteo",
    "jmbeuken"
   ]
  },
  "package": {
   "name": "abinit",
   "version": "9.0.4"
  },
  "requirements": {
   "build": [
    "m4",
    "autoconf",
    "automake",
    "make",
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "mpich",
    "libblas",
    "liblapack",
    "libxc <5.0",
    "zlib",
    "_openmp_mutex",
    "fftw",
    "fftw * mpi_mpich_*",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "libnetcdf",
    "libnetcdf * mpi_mpich_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_mpich_*"
   ],
   "run": [
    "mpich",
    "libxc <5.0",
    "fftw * mpi_mpich_*",
    "hdf5 * mpi_mpich_*",
    "libnetcdf * mpi_mpich_*",
    "netcdf-fortran * mpi_mpich_*"
   ]
  },
  "source": {
   "patches": [
    "optim.patch"
   ],
   "sha256": "fbea29f531f14f7a6c24c3103d362881995213a45077204a7eec84057b7bb6f5",
   "url": "https://github.com/abinit/abinit/archive/9.0.4.tar.gz"
  },
  "test": {
   "commands": [
    "abinit -b",
    "abinit < tbase1_1.files > tbase1_1.log"
   ],
   "files": [
    "01h.pspgth",
    "tbase1_1.files",
    "tbase1_1.in"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m4",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "fftw",
    "hdf5",
    "libblas",
    "liblapack",
    "libnetcdf",
    "libxc",
    "mpich",
    "netcdf-fortran",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw",
    "hdf5",
    "libnetcdf",
    "libxc",
    "mpich",
    "netcdf-fortran"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "ABINIT is a software suite to calculate the optical, mechanical,\nvibrational, and other observable properties of materials. Starting\nfrom the quantum equations of density functional theory, you can\nbuild up to advanced applications with perturbation theories based on\nDFT, and many-body Green's functions (GW and DMFT) ...\n",
   "dev_url": "https://github.com/abinit/abinit/",
   "doc_url": "https://wiki.abinit.org/doku.php",
   "home": "https://www.abinit.org",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "ABINIT is an atomic-scale simulation software suite."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "gmatteo",
    "jmbeuken"
   ]
  },
  "package": {
   "name": "abinit",
   "version": "9.0.4"
  },
  "requirements": {
   "build": [
    "m4",
    "autoconf",
    "automake",
    "make",
    "libtool",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "mpich",
    "libblas",
    "liblapack",
    "libxc <5.0",
    "zlib",
    "_openmp_mutex",
    "fftw",
    "fftw * mpi_mpich_*",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "libnetcdf",
    "libnetcdf * mpi_mpich_*",
    "netcdf-fortran",
    "netcdf-fortran * mpi_mpich_*"
   ],
   "run": [
    "mpich",
    "libxc <5.0",
    "fftw * mpi_mpich_*",
    "hdf5 * mpi_mpich_*",
    "libnetcdf * mpi_mpich_*",
    "netcdf-fortran * mpi_mpich_*"
   ]
  },
  "source": {
   "patches": [
    "optim.patch"
   ],
   "sha256": "fbea29f531f14f7a6c24c3103d362881995213a45077204a7eec84057b7bb6f5",
   "url": "https://github.com/abinit/abinit/archive/9.0.4.tar.gz"
  },
  "test": {
   "commands": [
    "abinit -b",
    "abinit < tbase1_1.files > tbase1_1.log"
   ],
   "files": [
    "01h.pspgth",
    "tbase1_1.files",
    "tbase1_1.in"
   ]
  }
 },
 "name": "abinit",
 "new_version": false,
 "new_version_attempts": {
  "9.0.4": 1
 },
 "new_version_errors": {},
 "pinning_version": "2020.05.18.14.31.44",
 "raw_meta_yaml": "{% set name = \"abinit\" %}\n{% set version = \"9.0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/abinit/abinit/archive/{{ version }}.tar.gz\n  sha256: fbea29f531f14f7a6c24c3103d362881995213a45077204a7eec84057b7bb6f5\n  patches:\n    - optim.patch\n\nbuild:\n  number: 2\n  skip: True  # [not linux]\n\n{% if mpi != 'nompi' %}\n{% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n{% set mpi_prefix = \"nompi\" %}\n{% endif %}\n  \nrequirements:\n  build:\n    - m4\n    - autoconf\n    - automake\n    - make\n    - libtool\n    - openmpi-mpifort  # [mpi == 'openmpi']\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - {{ mpi }}\n    - libblas\n    - liblapack\n    - libxc <5.0\n    - zlib\n    - _openmp_mutex\n    # need to list libnetcdf and netcdf-fortran twice to get version\n    # pinning from conda_build_config and build pinning from {{ mpi_prefix }}\n    - fftw\n    - fftw * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - libnetcdf\n    - libnetcdf * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - netcdf-fortran\n    - netcdf-fortran * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}\n    - libxc <5.0\n    - fftw * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - hdf5 * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - libnetcdf * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n    - netcdf-fortran * {{ mpi_prefix }}_*  # [mpi != 'nompi']\n\ntest:\n  files:\n    - 01h.pspgth\n    - tbase1_1.files\n    - tbase1_1.in\n  commands:\n    - abinit -b\n    - abinit < tbase1_1.files > tbase1_1.log\n\nabout:\n  home: https://www.abinit.org\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: COPYING\n  summary: 'ABINIT is an atomic-scale simulation software suite.'\n\n  description: |\n    ABINIT is a software suite to calculate the optical, mechanical, \n    vibrational, and other observable properties of materials. Starting \n    from the quantum equations of density functional theory, you can \n    build up to advanced applications with perturbation theories based on \n    DFT, and many-body Green's functions (GW and DMFT) ...\n  doc_url: https://wiki.abinit.org/doku.php\n  dev_url: https://github.com/abinit/abinit/\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - gmatteo\n    - jmbeuken\n",
 "req": {
  "__set__": true,
  "elements": [
   "_openmp_mutex",
   "autoconf",
   "automake",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "fftw",
   "fortran_compiler_stub",
   "hdf5",
   "libblas",
   "liblapack",
   "libnetcdf",
   "libtool",
   "libxc",
   "m4",
   "make",
   "mpich",
   "netcdf-fortran",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m4",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fftw",
    "fortran_compiler_stub",
    "hdf5",
    "libblas",
    "liblapack",
    "libnetcdf",
    "libxc",
    "mpich",
    "netcdf-fortran",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fftw",
    "fortran_compiler_stub",
    "hdf5",
    "libnetcdf",
    "libxc",
    "mpich",
    "netcdf-fortran"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libtool",
    "m4",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "fftw",
    "fftw * mpi_mpich_*",
    "hdf5",
    "hdf5 * mpi_mpich_*",
    "libblas",
    "liblapack",
    "libnetcdf",
    "libnetcdf * mpi_mpich_*",
    "libxc <5.0",
    "mpich",
    "netcdf-fortran",
    "netcdf-fortran * mpi_mpich_*",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fftw * mpi_mpich_*",
    "hdf5 * mpi_mpich_*",
    "libnetcdf * mpi_mpich_*",
    "libxc <5.0",
    "mpich",
    "netcdf-fortran * mpi_mpich_*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/abinit/abinit/archive/8.10.2.tar.gz",
 "version": "9.0.4"
}