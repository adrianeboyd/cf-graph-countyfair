{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/315152310.json"
   },
   "data":{
    "bot_rerun":1571548199.0100737,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/330010178.json"
   },
   "data":{
    "bot_rerun":1575349860.3470461,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/346351517.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":503,
  "exception":"HTTP Error 503: Backend is unhealthy",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 750, in main",
   "    dry_run=args.dry_run)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 503: Backend is unhealthy",
   ""
  ],
  "url":"https://pypi.org/packages/source/a/anyio/anyio-1.1.0.zip"
 },
 "conda-forge.yml":{},
 "feedstock_name":"anyio",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/agronholm/anyio",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"High level compatibility layer for multiple asynchronous event loop implementations on Python"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "CJ-Wright",
    "CJ-Wright",
    "CJ-Wright"
   ]
  },
  "package":{
   "name":"anyio",
   "version":"1.0.0"
  },
  "requirements":{
   "host":[
    "pip",
    "python >=3.6",
    "setuptools_scm",
    "pip",
    "python >=3.6",
    "setuptools_scm",
    "pip",
    "python >=3.6",
    "setuptools_scm"
   ],
   "run":[
    "python >=3.6",
    "sniffio",
    "curio",
    "trio",
    "python >=3.6",
    "sniffio",
    "curio",
    "trio",
    "python >=3.6",
    "sniffio",
    "curio",
    "trio"
   ]
  },
  "source":{
   "sha256":"0f47b5ea774cc9d403935c617ff27c7673f87cda0688cd1aab3137ac86283a68",
   "url":"https://pypi.io/packages/source/a/anyio/anyio-1.0.0.tar.gz"
  },
  "test":{
   "imports":[
    "anyio",
    "anyio",
    "anyio"
   ]
  }
 },
 "name":"anyio",
 "new_version":"1.1.0",
 "pinning_version":"2019.11.26",
 "raw_meta_yaml":"{% set name = \"anyio\" %}\n{% set version = \"1.0.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: 0f47b5ea774cc9d403935c617ff27c7673f87cda0688cd1aab3137ac86283a68\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  noarch: python\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools_scm\n  run:\n    - python >=3.6\n    - sniffio\n    - curio\n    - trio\n\ntest:\n  imports:\n    - anyio\n\nabout:\n  home: \"https://github.com/agronholm/anyio\"\n  license: \"MIT\"\n  license_family: \"MIT\"\n  license_file: \"LICENSE\"\n  summary: \"High level compatibility layer for multiple asynchronous event loop implementations on Python\"\n\nextra:\n  recipe-maintainers:\n    - CJ-Wright\n",
 "req":{
  "__set__":true,
  "elements":[
   "curio",
   "pip",
   "python",
   "setuptools_scm",
   "sniffio",
   "trio"
  ]
 },
 "smithy_version":"3.6.2",
 "url":"https://pypi.io/packages/source/a/anyio/anyio-1.0.0.tar.gz",
 "version":"1.0.0"
}