{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/209343314.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"18.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/209357127.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"18.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/241429383.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245444577.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335912204.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 223, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 532, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 642, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 564, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 504, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 756, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 532, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 642, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 564, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 504, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 756, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 532, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 642, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 570, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 504, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.6/urllib/request.py\", line 650, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/a/argon2_cffi/argon2_cffi-19.2.0.zip"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"argon2_cffi",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Argon2 won the Password Hashing Competition and argon2_cffi is the simplest\nway to use it in Python and PyPy\n",
   "dev_url":"https://github.com/hynek/argon2_cffi/",
   "doc_url":"https://argon2-cffi.readthedocs.io/en/stable/",
   "home":"https://argon2-cffi.readthedocs.org/",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"The secure Argon2 password hashing algorithm."
  },
  "build":{
   "number":"1000",
   "script":[
    " -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "ln -sf $RANLIB $BUILD_PREFIX/bin/ranlib",
    " -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "ln -sf $RANLIB $BUILD_PREFIX/bin/ranlib",
    " -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "stuertz",
    "stuertz",
    "stuertz"
   ]
  },
  "package":{
   "name":"argon2_cffi",
   "version":"19.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "setuptools",
    "six",
    "cffi >=1.0.0",
    "python",
    "pip",
    "setuptools",
    "six",
    "cffi >=1.0.0",
    "python",
    "pip",
    "setuptools",
    "six",
    "cffi >=1.0.0"
   ],
   "run":[
    "python",
    "six",
    "cffi >=1.0.0",
    "python",
    "six",
    "cffi >=1.0.0",
    "python",
    "six",
    "cffi >=1.0.0"
   ]
  },
  "source":{
   "fn":"argon2_cffi-19.1.0.tar.gz",
   "sha256":"81548a27b919861040cb928a350733f4f9455dd67c7d1ba92eb5960a1d7f8b26",
   "url":"https://pypi.io/packages/source/a/argon2_cffi/argon2_cffi-19.1.0.tar.gz"
  },
  "test":{
   "imports":[
    "argon2",
    "argon2",
    "argon2"
   ]
  }
 },
 "name":"argon2_cffi",
 "new_version":"19.2.0",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set name = \"argon2_cffi\" %}\n{% set version = \"19.1.0\" %}\n{% set sha256 = \"81548a27b919861040cb928a350733f4f9455dd67c7d1ba92eb5960a1d7f8b26\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1000\n  script:\n    - ln -sf $RANLIB $BUILD_PREFIX/bin/ranlib  # [unix]\n    - \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n\n  host:\n    - python\n    - pip\n    - setuptools\n    - six\n    - cffi >=1.0.0\n    - enum34  # [py27]\n\n  run:\n    - python\n    - six\n    - cffi >=1.0.0\n    - enum34  # [py27]\n\ntest:\n  imports:\n    - argon2\n\n\nabout:\n  home: https://argon2-cffi.readthedocs.org/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'The secure Argon2 password hashing algorithm.'\n  description: |\n    Argon2 won the Password Hashing Competition and argon2_cffi is the simplest\n    way to use it in Python and PyPy\n  doc_url: https://argon2-cffi.readthedocs.io/en/stable/\n  dev_url: https://github.com/hynek/argon2_cffi/\n\nextra:\n  recipe-maintainers:\n    - stuertz\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cffi",
   "pip",
   "python",
   "setuptools",
   "six"
  ]
 },
 "smithy_version":"3.6.1",
 "url":"https://pypi.io/packages/source/a/argon2_cffi/argon2_cffi-19.1.0.tar.gz",
 "version":"19.1.0"
}