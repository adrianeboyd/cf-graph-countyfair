{
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 674, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 139, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/a/autograd-gamma/autograd-gamma-0.4.2.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"autograd-gamma",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/CamDavidsonPilon/autograd-gamma",
   "home":"https://github.com/CamDavidsonPilon/autograd-gamma",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Autograd compatible approximations to the gamma family of functions"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra":{
   "recipe-maintainers":[
    "mariusvniekerk",
    "CamDavidsonPilon",
    "mariusvniekerk",
    "CamDavidsonPilon",
    "mariusvniekerk",
    "CamDavidsonPilon"
   ]
  },
  "package":{
   "name":"autograd-gamma",
   "version":"0.4.1"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run":[
    "python",
    "autograd >=1.2.0",
    "scipy >=1.2.0",
    "python",
    "autograd >=1.2.0",
    "scipy >=1.2.0",
    "python",
    "autograd >=1.2.0",
    "scipy >=1.2.0"
   ]
  },
  "source":{
   "sha256":"3b4349cb415bd6e28dd2fac5055e34de1b6c87fe711757a0e42a84bd650fba35",
   "url":"https://pypi.io/packages/source/a/autograd-gamma/autograd-gamma-0.4.1.tar.gz"
  },
  "test":{
   "imports":[
    "autograd_gamma",
    "autograd_gamma",
    "autograd_gamma"
   ]
  }
 },
 "name":"autograd-gamma",
 "new_version":"0.4.2",
 "raw_meta_yaml":"{% set name = \"autograd-gamma\" %}\n{% set version = \"0.4.1\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: \"3b4349cb415bd6e28dd2fac5055e34de1b6c87fe711757a0e42a84bd650fba35\"\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - python\n    - autograd >=1.2.0\n    - scipy >=1.2.0\n\ntest:\n  imports:\n    - autograd_gamma\n\nabout:\n  home: \"https://github.com/CamDavidsonPilon/autograd-gamma\"\n  license: \"MIT\"\n  license_family: \"MIT\"\n  license_file: \"LICENSE\"\n  summary: \"Autograd compatible approximations to the gamma family of functions\"\n  dev_url: \"https://github.com/CamDavidsonPilon/autograd-gamma\"\n\nextra:\n  recipe-maintainers:\n    - mariusvniekerk\n    - CamDavidsonPilon\n",
 "req":{
  "__set__":true,
  "elements":[
   "autograd",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "autograd",
    "python",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "autograd >=1.2.0",
    "python",
    "scipy >=1.2.0"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/a/autograd-gamma/autograd-gamma-0.4.1.tar.gz",
 "version":"0.4.1"
}