{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/240031943.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308292412.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339408640.json"
   },
   "data":{
    "bot_rerun":1573492232.678092,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339538910.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/346597614.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"camb",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Code for Anisotropies in the Microwave Background\nby Antony Lewis and Anthony Challinor\n\nFeatures:\n  - Support for closed, open and flat models\n  - Scalar, vector and tensor modes including polarization\n  - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n  - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n  - Relatively structured and easily extendable Fortran 90 code\n  - Efficient support for massive neutrinos\n  - Absolute computations from correctly normalized initial power spectra\n  - Computation of lensed CMB power spectra and lensing potential power spectrum\n  - Internally parallelized for fast execution on multi-processor machines\n  - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n  - Constant equation of state quintessence (or variable PPF)\n  - Support for general correlated adiabatic/isocurvature initial conditions\n  - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n  - Integrated interface to HALOFIT for non-linear fitting\n  - support for arbitrary neutrino mass splittings\n  - For 21cm, lensing and number count power spectra see this extension\n  - For perturbed recombination and effect on small-scale baryons see this extension\n  - Calculation of local primordial and CMB lensing bispectra\n  - Easy-to-use Python wrapper\n",
   "dev_url":"https://github.com/cmbant/CAMB",
   "doc_url":"https://camb.info/readme.html",
   "home":"https://camb.info/",
   "license":"modified LGPL",
   "license_family":"LGPL",
   "license_file":"/LICENSE",
   "summary":"Code for Anisotropies in the Microwave Background"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "beckermr",
    "cmbant",
    "beckermr",
    "cmbant",
    "beckermr",
    "cmbant"
   ]
  },
  "outputs":[
   {
    "name":"camb",
    "requirements":{
     "build":null,
     "host":[
      "python",
      "pip",
      "setuptools"
     ],
     "run":[
      "python",
      "numpy",
      "matplotlib",
      "six",
      "mock",
      "sympy >=1.0",
      "scipy >=1.0"
     ]
    },
    "script":"install-pycamb.bat",
    "test":{
     "imports":[
      "camb"
     ]
    }
   },
   {
    "name":"pycamb",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "python",
      "subpackage_stub"
     ]
    },
    "test":{
     "imports":[
      "camb"
     ]
    }
   },
   {
    "name":"camb",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host":[
      "python",
      "pip",
      "setuptools"
     ],
     "run":[
      "python",
      "numpy",
      "matplotlib",
      "six",
      "mock",
      "sympy >=1.0",
      "scipy >=1.0",
      "fortran_compiler_stub"
     ]
    },
    "script":"install-pycamb.sh",
    "test":{
     "imports":[
      "camb"
     ]
    }
   },
   {
    "name":"pycamb",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "python",
      "subpackage_stub"
     ]
    },
    "test":{
     "imports":[
      "camb"
     ]
    }
   },
   {
    "name":"camb",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host":[
      "python",
      "pip",
      "setuptools"
     ],
     "run":[
      "python",
      "numpy",
      "matplotlib",
      "six",
      "mock",
      "sympy >=1.0",
      "scipy >=1.0",
      "fortran_compiler_stub"
     ]
    },
    "script":"install-pycamb.sh",
    "test":{
     "imports":[
      "camb"
     ]
    }
   },
   {
    "name":"pycamb",
    "requirements":{
     "host":[
      "python"
     ],
     "run":[
      "python",
      "subpackage_stub"
     ]
    },
    "test":{
     "imports":[
      "camb"
     ]
    }
   }
  ],
  "package":{
   "name":"camb",
   "version":"1.0.10"
  },
  "requirements":{
   "build":[
    "m2w64-toolchain",
    "m2-git",
    "m2-make",
    "python",
    "setuptools",
    "pip",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "git",
    "make",
    "python",
    "setuptools",
    "pip",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "git",
    "make",
    "python",
    "setuptools",
    "pip"
   ]
  },
  "source":{
   "sha256":"ce888ae66b168579dcd2b28302f927af6d9f7a14f84591fc943bb1462d5dfa8a",
   "url":"https://github.com/cmbant/CAMB/archive/1.0.10.tar.gz"
  },
  "test":{
   "files":[
    "params.ini",
    "test_pycamb.py",
    "run_test.sh",
    "params.ini",
    "test_pycamb.py",
    "params.ini",
    "test_pycamb.py"
   ],
   "imports":[
    "camb",
    "camb",
    "camb"
   ]
  }
 },
 "name":"camb",
 "new_version":"1.0.12",
 "outputs_names":[
  "camb",
  "pycamb"
 ],
 "pinning_version":"2019.11.26",
 "raw_meta_yaml":"{% set name = \"camb\" %}\n{% set version = \"1.0.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cmbant/CAMB/archive/{{ version }}.tar.gz\n  sha256: ce888ae66b168579dcd2b28302f927af6d9f7a14f84591fc943bb1462d5dfa8a\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n    - m2w64-toolchain  # [win]\n    - git  # [not win]\n    - m2-git  # [win]\n    - make  # [not win]\n    - m2-make  # [win]\n    - python\n    - setuptools\n    - pip\n\ntest:\n  imports:\n    - camb\n  files:\n    - params.ini\n    - test_pycamb.py\n    - run_test.sh  # [win]\n\noutputs:\n  - name: camb\n    script: install-pycamb.sh  # [not win]\n    script: install-pycamb.bat  # [win]\n    requirements:\n      build:\n        # these are needed to convince conda-build to pin the requirements\n        - {{ compiler('c') }}  # [not win]\n        - {{ compiler('fortran') }}  # [not win]\n      host:\n        - python\n        - pip\n        - setuptools\n      run:\n        - python\n        - numpy\n        - matplotlib\n        - six\n        - mock\n        - sympy >=1.0\n        - scipy >=1.0\n        - {{ compiler('fortran') }}  # [not win]\n    test:\n      imports:\n        - camb\n\n  - name: pycamb\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('camb', exact=True) }}\n    test:\n      imports:\n        - camb\n\nabout:\n  home: https://camb.info/\n  license: modified LGPL\n  license_family: LGPL\n  license_file: {{ RECIPE_DIR }}/LICENSE\n  summary: Code for Anisotropies in the Microwave Background\n  description: |\n    Code for Anisotropies in the Microwave Background\n    by Antony Lewis and Anthony Challinor\n\n    Features:\n      - Support for closed, open and flat models\n      - Scalar, vector and tensor modes including polarization\n      - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n      - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n      - Relatively structured and easily extendable Fortran 90 code\n      - Efficient support for massive neutrinos\n      - Absolute computations from correctly normalized initial power spectra\n      - Computation of lensed CMB power spectra and lensing potential power spectrum\n      - Internally parallelized for fast execution on multi-processor machines\n      - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n      - Constant equation of state quintessence (or variable PPF)\n      - Support for general correlated adiabatic/isocurvature initial conditions\n      - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n      - Integrated interface to HALOFIT for non-linear fitting\n      - support for arbitrary neutrino mass splittings\n      - For 21cm, lensing and number count power spectra see this extension\n      - For perturbed recombination and effect on small-scale baryons see this extension\n      - Calculation of local primordial and CMB lensing bispectra\n      - Easy-to-use Python wrapper\n  doc_url: https://camb.info/readme.html\n  dev_url: https://github.com/cmbant/CAMB\n\nextra:\n  recipe-maintainers:\n    - beckermr\n    - cmbant\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "fortran_compiler_stub",
   "git",
   "m2-git",
   "m2-make",
   "m2w64-toolchain",
   "make",
   "matplotlib",
   "mock",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools",
   "six",
   "subpackage_stub",
   "sympy"
  ]
 },
 "smithy_version":"3.6.3",
 "time":1568135296.5952687,
 "url":"https://github.com/cmbant/CAMB/archive/1.0.10.tar.gz",
 "version":"1.0.10"
}