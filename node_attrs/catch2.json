{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/259475136.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/268315396.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/272511340.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/282397137.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/288611482.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/288806379.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/305553796.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"catch2",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\nfor C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\nheader file, although certain extensions may require additional headers.\n",
   "dev_url":"https://github.com/catchorg/Catch2",
   "doc_url":"https://github.com/catchorg/Catch2/blob/master/docs/Readme.md",
   "home":"https://github.com/catchorg/Catch2/",
   "license":"BSL-1.0",
   "license_file":"LICENSE.txt",
   "summary":"A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\nC++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n"
  },
  "build":{
   "ignore_run_exports":[
    "cxx_compiler_stub",
    "vc",
    "cxx_compiler_stub",
    "libcxx",
    "cxx_compiler_stub",
    "libstdcxx-ng"
   ],
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "mjscosta",
    "mjscosta",
    "mjscosta"
   ]
  },
  "package":{
   "name":"catch2",
   "version":"2.9.2"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  },
  "source":{
   "fn":"catch2-2.9.2.tgz",
   "sha256":"54bea6d80a388a80f895cd0e2343fca72b0d9093a776af40904aefce49c13bda",
   "url":"https://github.com/catchorg/Catch2/archive/v2.9.2.tar.gz"
  },
  "test":{
   "requires":[
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ]
  }
 },
 "name":"catch2",
 "new_version":"2.9.2",
 "pinning_version":"2019.07.26",
 "raw_meta_yaml":"{% set version = \"2.9.2\" %}\n{% set name = \"catch2\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tgz\n  url: https://github.com/catchorg/Catch2/archive/v{{ version }}.tar.gz\n  sha256: 54bea6d80a388a80f895cd0e2343fca72b0d9093a776af40904aefce49c13bda\n\nbuild:\n  skip: true  # [win and vc<14]\n  number: 0\n\n  ignore_run_exports:\n    - {{ compiler('cxx') }}\n    - libstdcxx-ng  # [linux]\n    - libcxx  # [osx]\n    - vc  # [win]\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n\nabout:\n  home: https://github.com/catchorg/Catch2/\n  license: BSL-1.0\n  license_file: LICENSE.txt\n  summary: |\n    A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\n    C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n  description: |\n    Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\n    for C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\n    header file, although certain extensions may require additional headers.\n  doc_url: https://github.com/catchorg/Catch2/blob/master/docs/Readme.md\n  dev_url: https://github.com/catchorg/Catch2\n\nextra:\n  recipe-maintainers:\n    - mjscosta\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "ninja"
  ]
 },
 "smithy_version":"3.4.1",
 "time":1568050640.075378,
 "url":"https://github.com/catchorg/Catch2/archive/v2.9.2.tar.gz",
 "version":"2.9.2"
}