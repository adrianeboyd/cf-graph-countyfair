{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/206246506.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/212181183.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/254706014.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"while constructing a mapping\n  in \"<unicode string>\", line 27, column 3:\n      imports:\n      ^ (line: 27)\nfound duplicate key \"commands\" with value \"['pip check']\" (original value: \"['compliance-checker --list-tests | grep -q gliderdac']\")\n  in \"<unicode string>\", line 31, column 3:\n      commands:\n      ^ (line: 31)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 901, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 166, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 373, in migrate",
   "    cmeta = CondaMetaYAML(fp.read())",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 358, in __init__",
   "    self.meta = YAML_JINJA2.load(\"\".join(lines))",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/main.py\", line 341, in load",
   "    return constructor.get_single_data()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data",
   "    return self.construct_document(node)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document",
   "    for _dummy in generator:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map",
   "    self.construct_mapping(node, data, deep=True)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1468, in construct_mapping",
   "    value = self.construct_object(value_node, deep=deep)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object",
   "    data = self.construct_non_recursive_object(node)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object",
   "    for _dummy in generator:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map",
   "    self.construct_mapping(node, data, deep=True)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping",
   "    if self.check_mapping_key(node, key_node, maptyp, key, value):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key",
   "    raise DuplicateKeyError(*args)",
   "ruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping",
   "  in \"<unicode string>\", line 27, column 3:",
   "      imports:",
   "      ^ (line: 27)",
   "found duplicate key \"commands\" with value \"['pip check']\" (original value: \"['compliance-checker --list-tests | grep -q gliderdac']\")",
   "  in \"<unicode string>\", line 31, column 3:",
   "      commands:",
   "      ^ (line: 31)",
   "",
   "To suppress this check see:",
   "    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys",
   "",
   "Duplicate keys will become an error in future releases, and are errors",
   "by default when using the new API.",
   "",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"cc-plugin-glider",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/ioos/cc-plugin-glider",
   "license":"Apache-2.0",
   "license_file":"LICENSE.txt",
   "summary":"Compliance Checker Glider DAC plugin"
  },
  "build":{
   "entry_points":[
    "gliderdac = cc_plugin_glider.glider_dac:GliderCheck",
    "gliderdac = cc_plugin_glider.glider_dac:GliderCheck",
    "gliderdac = cc_plugin_glider.glider_dac:GliderCheck"
   ],
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "benjwadams",
    "daf",
    "kwilcox",
    "lukecampbell",
    "ocefpaf",
    "benjwadams",
    "daf",
    "kwilcox",
    "lukecampbell",
    "ocefpaf",
    "benjwadams",
    "daf",
    "kwilcox",
    "lukecampbell",
    "ocefpaf"
   ]
  },
  "package":{
   "name":"cc-plugin-glider",
   "version":"2.0.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "compliance-checker >=4.0.0",
    "python",
    "compliance-checker >=4.0.0",
    "python",
    "compliance-checker >=4.0.0"
   ]
  },
  "source":{
   "sha256":"f3df72bd605cc776253bab6b586f66d8fd161cdbdd17616232e5c15c7d683b19",
   "url":"https://github.com/ioos/cc-plugin-glider/archive/2.0.1.tar.gz"
  },
  "test":{
   "commands":[
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports":[
    "cc_plugin_glider",
    "cc_plugin_glider",
    "cc_plugin_glider"
   ],
   "requires":[
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name":"cc-plugin-glider",
 "new_version":"2.0.2",
 "pinning_version":"2019.02.15",
 "raw_meta_yaml":"{% set version = \"2.0.1\" %}\n\npackage:\n  name: cc-plugin-glider\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ioos/cc-plugin-glider/archive/{{ version }}.tar.gz\n  sha256: f3df72bd605cc776253bab6b586f66d8fd161cdbdd17616232e5c15c7d683b19\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - gliderdac = cc_plugin_glider.glider_dac:GliderCheck\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - compliance-checker >=4.0.0\n\ntest:\n  imports:\n    - cc_plugin_glider\n  commands:\n    - compliance-checker --list-tests | grep -q gliderdac  # [not win]\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/ioos/cc-plugin-glider\n  license: Apache-2.0\n  license_file: LICENSE.txt\n  summary: Compliance Checker Glider DAC plugin\n\nextra:\n  recipe-maintainers:\n    - benjwadams\n    - daf\n    - kwilcox\n    - lukecampbell\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "compliance-checker",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "compliance-checker",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pip"
   ]
  }
 },
 "smithy_version":"3.2.13",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "compliance-checker >=4.0.0",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pip"
   ]
  }
 },
 "url":"https://github.com/ioos/cc-plugin-glider/archive/2.0.0.tar.gz",
 "version":"2.0.1"
}