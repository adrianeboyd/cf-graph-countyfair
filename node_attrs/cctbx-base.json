{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/b9daf36e-58f4-468d-8070-75667287b55e.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/491922926.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"boost_cpp1740"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived":false,
 "bad":"Upstream: unknown source or URL not in YAML",
 "conda-forge.yml":{},
 "feedstock_name":"cctbx-base",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "description":"The Computational Crystallography Toolbox (cctbx) is being developed\nas the open source component of the Phenix system. The goal of the\nPhenix project is to advance automation of macromolecular structure\ndetermination. Phenix depends on the cctbx, but not vice versa. This\nhierarchical approach enforces a clean design as a reusable library.\nThe cctbx is therefore also useful for small-molecule crystallography\nand even general scientific applications.\n",
   "dev_url":"https://github.com/cctbx/cctbx_project",
   "doc_url":"https://cctbx.github.io/",
   "home":"https://github.com/cctbx/cctbx_project",
   "license":"BSD-3-Clause-LBNL AND BSD-3-Clause AND BSL-1.0 AND LGPL-2.0-only AND LGPL-2.1-only AND LGPL-3.0-only AND MIT AND LGPL-2.0-or-later WITH WxWindows-exception-3.1",
   "license_family":"Other",
   "license_file":[
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt"
   ],
   "summary":"The Computational Crystallography Toolbox"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "bkpoon",
    "bkpoon",
    "bkpoon"
   ]
  },
  "outputs":[
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libglu",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libglu",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libglu",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   }
  ],
  "package":{
   "name":"cctbx-base",
   "version":"2020.8"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub"
   ],
   "host":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes"
   ]
  },
  "source":{
   "patches":[
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch"
   ],
   "sha256":"38b41bb5e3b968e499a35c30de81147abb946c8de2728e90676f24843348b033",
   "url":"https://github.com/cctbx/cctbx_project/releases/download/v2020.8/cctbx-2020.8.tar.gz"
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "biopython",
    "boost",
    "boost-cpp",
    "cctbx-base",
    "future",
    "ipython",
    "libglu",
    "libsvm",
    "matplotlib-base",
    "mrcfile",
    "numpy",
    "pillow",
    "psutil",
    "pyside2",
    "python",
    "reportlab",
    "six",
    "wxpython"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "description":"The Computational Crystallography Toolbox (cctbx) is being developed\nas the open source component of the Phenix system. The goal of the\nPhenix project is to advance automation of macromolecular structure\ndetermination. Phenix depends on the cctbx, but not vice versa. This\nhierarchical approach enforces a clean design as a reusable library.\nThe cctbx is therefore also useful for small-molecule crystallography\nand even general scientific applications.\n",
   "dev_url":"https://github.com/cctbx/cctbx_project",
   "doc_url":"https://cctbx.github.io/",
   "home":"https://github.com/cctbx/cctbx_project",
   "license":"BSD-3-Clause-LBNL AND BSD-3-Clause AND BSL-1.0 AND LGPL-2.0-only AND LGPL-2.1-only AND LGPL-3.0-only AND MIT AND LGPL-2.0-or-later WITH WxWindows-exception-3.1",
   "license_family":"Other",
   "license_file":[
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt"
   ],
   "summary":"The Computational Crystallography Toolbox"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "bkpoon",
    "bkpoon",
    "bkpoon",
    "bkpoon",
    "bkpoon",
    "bkpoon",
    "bkpoon",
    "bkpoon",
    "bkpoon"
   ]
  },
  "outputs":[
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libglu",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libglu",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libglu",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "python.app",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "python.app",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "python.app",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   }
  ],
  "package":{
   "name":"cctbx-base",
   "version":"2020.8"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "cdt_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six"
   ]
  },
  "source":{
   "patches":[
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch"
   ],
   "sha256":"38b41bb5e3b968e499a35c30de81147abb946c8de2728e90676f24843348b033",
   "url":"https://github.com/cctbx/cctbx_project/releases/download/v2020.8/cctbx-2020.8.tar.gz"
  }
 },
 "name":"cctbx-base",
 "new_version":"2020.8",
 "osx_64_meta_yaml":{
  "about":{
   "description":"The Computational Crystallography Toolbox (cctbx) is being developed\nas the open source component of the Phenix system. The goal of the\nPhenix project is to advance automation of macromolecular structure\ndetermination. Phenix depends on the cctbx, but not vice versa. This\nhierarchical approach enforces a clean design as a reusable library.\nThe cctbx is therefore also useful for small-molecule crystallography\nand even general scientific applications.\n",
   "dev_url":"https://github.com/cctbx/cctbx_project",
   "doc_url":"https://cctbx.github.io/",
   "home":"https://github.com/cctbx/cctbx_project",
   "license":"BSD-3-Clause-LBNL AND BSD-3-Clause AND BSL-1.0 AND LGPL-2.0-only AND LGPL-2.1-only AND LGPL-3.0-only AND MIT AND LGPL-2.0-or-later WITH WxWindows-exception-3.1",
   "license_family":"Other",
   "license_file":[
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt"
   ],
   "summary":"The Computational Crystallography Toolbox"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "bkpoon",
    "bkpoon",
    "bkpoon"
   ]
  },
  "outputs":[
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "python.app",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "python.app",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "python.app",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   }
  ],
  "package":{
   "name":"cctbx-base",
   "version":"2020.8"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six"
   ]
  },
  "source":{
   "patches":[
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch"
   ],
   "sha256":"38b41bb5e3b968e499a35c30de81147abb946c8de2728e90676f24843348b033",
   "url":"https://github.com/cctbx/cctbx_project/releases/download/v2020.8/cctbx-2020.8.tar.gz"
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "biopython",
    "boost",
    "boost-cpp",
    "cctbx-base",
    "future",
    "ipython",
    "libsvm",
    "matplotlib-base",
    "mrcfile",
    "numpy",
    "pillow",
    "psutil",
    "pyside2",
    "python",
    "python.app",
    "reportlab",
    "six",
    "wxpython"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "outputs_names":[
  "cctbx",
  "cctbx-base"
 ],
 "pinning_version":"2020.09.23.12.58.01",
 "raw_meta_yaml":"{% set version = \"2020.8\" %}\n\npackage:\n  name: cctbx-base\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cctbx/cctbx_project/releases/download/v{{ version }}/cctbx-{{ version }}.tar.gz\n  sha256: 38b41bb5e3b968e499a35c30de81147abb946c8de2728e90676f24843348b033\n  patches:\n    - crys3d.patch\n    - cbf.patch\n    - dxtbx.patch\n    - libtbx.patch\n    - pytest.patch\n    - rstbx.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n    - {{ cdt('libxext') }}     # [linux]\n  host:\n    - boost\n    - boost-cpp\n    - eigen\n    - future\n    - libglu  # [linux]\n    - numpy\n    - python\n    - python.app  # [osx]\n    - scons\n    - setuptools\n    - six\n    - xorg-libxfixes  # [linux]\n\noutputs:\n  - name: cctbx-base\n    requirements:\n      run:\n        - biopython\n        - {{ pin_compatible('boost') }}\n        - boost-cpp\n        - future\n        - {{ pin_compatible('libglu') }}  # [linux]\n        - libsvm\n        - matplotlib-base\n        - mrcfile\n        - {{ pin_compatible('numpy') }}\n        - pillow\n        - psutil\n        - python\n        - python.app  # [osx]\n        - reportlab\n        - six\n    test:\n      imports:\n        - scitbx.array_family.flex\n        - gltbx.gl\n        - gltbx.glu\n      commands:\n        - libtbx.show_commands\n\n  - name: cctbx\n    build:\n    requirements:\n      run:\n        - {{ pin_subpackage('cctbx-base', max_pin=\"x.x.x\") }}\n        - ipython\n        - pyside2\n        - wxpython\n    test:\n      imports:\n        - scitbx.array_family.flex\n        - gltbx.gl\n        - gltbx.glu\n      commands:\n        - libtbx.show_commands\n\nabout:\n  home: https://github.com/cctbx/cctbx_project\n  license: BSD-3-Clause-LBNL AND BSD-3-Clause AND BSL-1.0 AND LGPL-2.0-only AND LGPL-2.1-only AND LGPL-3.0-only AND MIT AND LGPL-2.0-or-later WITH WxWindows-exception-3.1\n  license_family: Other\n  license_file:\n    - ./licenses/LICENSE.txt\n    - ./licenses/Boost_LICENSE_1_0.txt\n    - ./licenses/bsd_3_clause.txt\n    - ./licenses/gpl-3.0.txt\n    - ./licenses/lgpl-2.0.txt\n    - ./licenses/lgpl-2.1.txt\n    - ./licenses/lgpl-3.0.txt\n    - ./licenses/mit.txt\n    - ./licenses/wxWindows_3.1.txt\n\n  summary: 'The Computational Crystallography Toolbox'\n  description: |\n    The Computational Crystallography Toolbox (cctbx) is being developed\n    as the open source component of the Phenix system. The goal of the\n    Phenix project is to advance automation of macromolecular structure\n    determination. Phenix depends on the cctbx, but not vice versa. This\n    hierarchical approach enforces a clean design as a reusable library.\n    The cctbx is therefore also useful for small-molecule crystallography\n    and even general scientific applications.\n  doc_url: https://cctbx.github.io/\n  dev_url: https://github.com/cctbx/cctbx_project\n\nextra:\n  recipe-maintainers:\n    - bkpoon\n",
 "req":{
  "__set__":true,
  "elements":[
   "biopython",
   "boost",
   "boost-cpp",
   "c_compiler_stub",
   "cctbx-base",
   "cdt_stub",
   "cxx_compiler_stub",
   "eigen",
   "future",
   "ipython",
   "libglu",
   "libsvm",
   "matplotlib-base",
   "mrcfile",
   "numpy",
   "pillow",
   "psutil",
   "pyside2",
   "python",
   "python.app",
   "reportlab",
   "scons",
   "setuptools",
   "six",
   "wxpython",
   "xorg-libxfixes"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "biopython",
    "boost",
    "boost-cpp",
    "cctbx-base",
    "future",
    "ipython",
    "libglu",
    "libsvm",
    "matplotlib-base",
    "mrcfile",
    "numpy",
    "pillow",
    "psutil",
    "pyside2",
    "python",
    "python.app",
    "reportlab",
    "six",
    "wxpython"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "libglu",
    "numpy",
    "python",
    "python.app",
    "scons",
    "setuptools",
    "six",
    "xorg-libxfixes"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "biopython",
    "boost",
    "boost-cpp",
    "cctbx-base",
    "future",
    "ipython",
    "libglu",
    "libsvm",
    "matplotlib-base",
    "mrcfile",
    "numpy",
    "pillow",
    "psutil",
    "pyside2",
    "python",
    "python.app",
    "reportlab",
    "six",
    "wxpython"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/cctbx/cctbx_project/releases/download/v2020.8/cctbx-2020.8.tar.gz",
 "version":"2020.8",
 "win_64_meta_yaml":{
  "about":{
   "description":"The Computational Crystallography Toolbox (cctbx) is being developed\nas the open source component of the Phenix system. The goal of the\nPhenix project is to advance automation of macromolecular structure\ndetermination. Phenix depends on the cctbx, but not vice versa. This\nhierarchical approach enforces a clean design as a reusable library.\nThe cctbx is therefore also useful for small-molecule crystallography\nand even general scientific applications.\n",
   "dev_url":"https://github.com/cctbx/cctbx_project",
   "doc_url":"https://cctbx.github.io/",
   "home":"https://github.com/cctbx/cctbx_project",
   "license":"BSD-3-Clause-LBNL AND BSD-3-Clause AND BSL-1.0 AND LGPL-2.0-only AND LGPL-2.1-only AND LGPL-3.0-only AND MIT AND LGPL-2.0-or-later WITH WxWindows-exception-3.1",
   "license_family":"Other",
   "license_file":[
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt",
    "./licenses/LICENSE.txt",
    "./licenses/Boost_LICENSE_1_0.txt",
    "./licenses/bsd_3_clause.txt",
    "./licenses/gpl-3.0.txt",
    "./licenses/lgpl-2.0.txt",
    "./licenses/lgpl-2.1.txt",
    "./licenses/lgpl-3.0.txt",
    "./licenses/mit.txt",
    "./licenses/wxWindows_3.1.txt"
   ],
   "summary":"The Computational Crystallography Toolbox"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "bkpoon",
    "bkpoon",
    "bkpoon"
   ]
  },
  "outputs":[
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "name":"cctbx-base",
    "requirements":{
     "run":[
      "biopython",
      "boost",
      "boost-cpp",
      "future",
      "libsvm",
      "matplotlib-base",
      "mrcfile",
      "numpy",
      "pillow",
      "psutil",
      "python",
      "reportlab",
      "six"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   },
   {
    "build":null,
    "name":"cctbx",
    "requirements":{
     "run":[
      "cctbx-base",
      "ipython",
      "pyside2",
      "wxpython"
     ]
    },
    "test":{
     "commands":[
      "libtbx.show_commands"
     ],
     "imports":[
      "scitbx.array_family.flex",
      "gltbx.gl",
      "gltbx.glu"
     ]
    }
   }
  ],
  "package":{
   "name":"cctbx-base",
   "version":"2020.8"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six",
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six"
   ]
  },
  "source":{
   "patches":[
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch",
    "crys3d.patch",
    "cbf.patch",
    "dxtbx.patch",
    "libtbx.patch",
    "pytest.patch",
    "rstbx.patch"
   ],
   "sha256":"38b41bb5e3b968e499a35c30de81147abb946c8de2728e90676f24843348b033",
   "url":"https://github.com/cctbx/cctbx_project/releases/download/v2020.8/cctbx-2020.8.tar.gz"
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "eigen",
    "future",
    "numpy",
    "python",
    "scons",
    "setuptools",
    "six"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "biopython",
    "boost",
    "boost-cpp",
    "cctbx-base",
    "future",
    "ipython",
    "libsvm",
    "matplotlib-base",
    "mrcfile",
    "numpy",
    "pillow",
    "psutil",
    "pyside2",
    "python",
    "reportlab",
    "six",
    "wxpython"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}