{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/294352170.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/296901553.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308399257.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/375468327.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 654, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 139, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/CGNS/CGNS/tar.gz/v40"
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"cgns",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The CFD General Notation System (CGNS) provides a standard for\nrecording and recovering computer data associated with the\nnumerical solution of fluid dynamics equations.\n",
   "dev_url":"https://github.com/CGNS/CGNS",
   "doc_url":"http://cgns.github.io/CGNS_docs_current/index.html",
   "home":"http://cgns.org",
   "license":"Zlib",
   "license_file":"LICENSE",
   "summary":"CFD General Notation System (CGNS)"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "mdpiper",
    "mdpiper",
    "mdpiper"
   ]
  },
  "package":{
   "name":"cgns",
   "version":"3.4.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cmake",
    "make"
   ],
   "host":[
    "zlib",
    "hdf5",
    "zlib",
    "hdf5",
    "zlib",
    "hdf5"
   ]
  },
  "source":{
   "sha256":"d32595e7737b9332243bd3de1eb8c018a272f620f09b289dea8292eba1365994",
   "url":"https://github.com/CGNS/CGNS/archive/v3.4.1.tar.gz"
  },
  "test":{
   "commands":[
    "cgnscheck",
    "cgnscheck",
    "cgnscheck"
   ]
  }
 },
 "name":"cgns",
 "new_version":"40",
 "pinning_version":"2020.02.12",
 "raw_meta_yaml":"{% set name = \"cgns\" %}\n{% set version = \"3.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name|upper }}/{{ name|upper }}/archive/v{{ version }}.tar.gz\n  sha256: d32595e7737b9332243bd3de1eb8c018a272f620f09b289dea8292eba1365994\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n  run_exports:\n    - {{ pin_subpackage('cgns', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake\n    - make  # [unix]\n  host:\n    - zlib\n    - hdf5\n\ntest:\n  commands:\n    - cgnscheck\n\nabout:\n  home: http://cgns.org\n  license: Zlib\n  license_file: LICENSE\n  summary: 'CFD General Notation System (CGNS)'\n  description: |\n    The CFD General Notation System (CGNS) provides a standard for\n    recording and recovering computer data associated with the\n    numerical solution of fluid dynamics equations.\n  doc_url: http://cgns.github.io/CGNS_docs_current/index.html\n  dev_url: https://github.com/CGNS/CGNS\n\nextra:\n  recipe-maintainers:\n    - mdpiper\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "hdf5",
   "make",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "hdf5",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "hdf5",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/CGNS/CGNS/archive/v3.4.0.tar.gz",
 "version":"3.4.1"
}