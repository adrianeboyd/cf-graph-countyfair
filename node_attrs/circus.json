{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.15.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/220697644.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335845496.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 748, in main",
   "    migrator_uid, pr_json = run(attrs=attrs, migrator=migrator, gh=gh,",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 473, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 389, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/c/circus/circus-0.16.0.tar.gz"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"circus",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/circus-tent/circus",
   "license":"Apache-2.0",
   "license_file":"LICENSE",
   "summary":"Circus is a program that will let you run and watch multiple processes and sockets."
  },
  "build":{
   "entry_points":[
    "circusd = circus.circusd:main",
    "circusd-stats = circus.stats:main",
    "circusctl = circus.circusctl:main",
    "circus-top = circus.stats.client:main",
    "circus-plugin = circus.plugins:main",
    "circusd = circus.circusd:main",
    "circusd-stats = circus.stats:main",
    "circusctl = circus.circusctl:main",
    "circus-top = circus.stats.client:main",
    "circus-plugin = circus.plugins:main",
    "circusd = circus.circusd:main",
    "circusd-stats = circus.stats:main",
    "circusctl = circus.circusctl:main",
    "circus-top = circus.stats.client:main",
    "circus-plugin = circus.plugins:main"
   ],
   "number":"0",
   "script":" -m pip install . --no-deps -vv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "vamega",
    "carlodri",
    "ltalirz",
    "vamega",
    "carlodri",
    "ltalirz",
    "vamega",
    "carlodri",
    "ltalirz"
   ]
  },
  "package":{
   "name":"circus",
   "version":"0.15.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "six",
    "psutil",
    "pyzmq >=13.1.0,<17.0",
    "tornado >=3.0,<5.0",
    "python",
    "six",
    "psutil",
    "pyzmq >=13.1.0,<17.0",
    "tornado >=3.0,<5.0",
    "python",
    "six",
    "psutil",
    "pyzmq >=13.1.0,<17.0",
    "tornado >=3.0,<5.0"
   ]
  },
  "source":{
   "sha256":"d1603cf4c4f620ce6593d3d2a67fad25bf0242183ea24110d8bb1c8079c55d1b",
   "url":"https://pypi.io/packages/source/c/circus/circus-0.15.0.tar.gz"
  },
  "test":{
   "commands":[
    "circusd --help",
    "circusd-stats --help",
    "circusctl --help",
    "circus-top --help",
    "circus-plugin --help",
    "circusd --help",
    "circusd-stats --help",
    "circusctl --help",
    "circus-top --help",
    "circus-plugin --help",
    "circusd --help",
    "circusd-stats --help",
    "circusctl --help",
    "circus-top --help",
    "circus-plugin --help"
   ],
   "imports":[
    "circus",
    "circus.commands",
    "circus.green",
    "circus.plugins",
    "circus.stats",
    "circus.stream",
    "circus.tests",
    "circus",
    "circus.commands",
    "circus.green",
    "circus.plugins",
    "circus.stats",
    "circus.stream",
    "circus.tests",
    "circus",
    "circus.commands",
    "circus.green",
    "circus.plugins",
    "circus.stats",
    "circus.stream",
    "circus.tests"
   ]
  }
 },
 "name":"circus",
 "new_version":"0.16.0",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set name = \"circus\" %}\n{% set version = \"0.15.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d1603cf4c4f620ce6593d3d2a67fad25bf0242183ea24110d8bb1c8079c55d1b\n\nbuild:\n  number: 0\n  entry_points:\n    - circusd = circus.circusd:main\n    - circusd-stats = circus.stats:main\n    - circusctl = circus.circusctl:main\n    - circus-top = circus.stats.client:main\n    - circus-plugin = circus.plugins:main\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n  skip: True  # [win or py>36]\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - six\n    - psutil\n    - pyzmq >=13.1.0,<17.0\n    - tornado >=3.0,<5.0\n\ntest:\n  imports:\n    - circus\n    - circus.commands\n    - circus.green\n    - circus.plugins\n    - circus.stats\n    - circus.stream\n    - circus.tests\n  commands:\n    - circusd --help\n    - circusd-stats --help\n    - circusctl --help\n    - circus-top --help\n    - circus-plugin --help\n\nabout:\n  home: https://github.com/circus-tent/circus\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: Circus is a program that will let you run and watch multiple processes and sockets.\n\nextra:\n  recipe-maintainers:\n    - vamega\n    - carlodri\n    - ltalirz\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "psutil",
   "python",
   "pyzmq",
   "six",
   "tornado"
  ]
 },
 "smithy_version":"3.6.1",
 "url":"https://pypi.io/packages/source/c/circus/circus-0.15.0.tar.gz",
 "version":"0.15.0"
}