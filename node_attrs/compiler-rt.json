{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/216600552.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/228102445.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238893981.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/263060543.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"8.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/271384111.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 748, in main",
   "    migrator_uid, pr_json = run(attrs=attrs, migrator=migrator, gh=gh,",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 473, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 389, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"http://releases.llvm.org/10-init/compiler-rt-10-init.src.tar.xz"
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"compiler-rt",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
   "home":"http://llvm.org/",
   "license":"NCSA",
   "license_file":"LICENSE.TXT",
   "summary":"compiler-rt runtime libraries"
  },
  "build":{
   "number":"2",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf",
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf"
   ]
  },
  "outputs":[
   {
    "build":{
     "noarch":"generic"
    },
    "files":[
     "lib/clang/9.0.0/lib"
    ],
    "name":"compiler-rt_",
    "requirements":{
     "build":[
      "cxx_compiler_stub"
     ],
     "run":[
      "clang 9.0.0",
      "clangxx 9.0.0"
     ],
     "run_constrained":[
      "compiler-rt 9.0.0"
     ]
    }
   },
   {
    "files":[
     "lib/clang/9.0.0/share",
     "lib/clang/9.0.0/include"
    ],
    "name":"compiler-rt",
    "requirements":[
     "clang 9.0.0",
     "clangxx 9.0.0",
     "compiler-rt_ 9.0.0"
    ]
   },
   {
    "build":{
     "noarch":"generic"
    },
    "files":[
     "lib/clang/9.0.0/lib"
    ],
    "name":"compiler-rt_",
    "requirements":{
     "build":[
      "cxx_compiler_stub"
     ],
     "run":[
      "libcxx >=",
      "clang 9.0.0",
      "clangxx 9.0.0"
     ],
     "run_constrained":[
      "compiler-rt 9.0.0"
     ]
    }
   },
   {
    "files":[
     "lib/clang/9.0.0/share",
     "lib/clang/9.0.0/include"
    ],
    "name":"compiler-rt",
    "requirements":[
     "libcxx >=",
     "clang 9.0.0",
     "clangxx 9.0.0",
     "compiler-rt_ 9.0.0"
    ]
   },
   {
    "build":{
     "noarch":"generic"
    },
    "files":[
     "lib/clang/9.0.0/lib"
    ],
    "name":"compiler-rt_",
    "requirements":{
     "build":[
      "cxx_compiler_stub"
     ],
     "run":[
      "clang 9.0.0",
      "clangxx 9.0.0"
     ],
     "run_constrained":[
      "compiler-rt 9.0.0"
     ]
    }
   },
   {
    "files":[
     "lib/clang/9.0.0/share",
     "lib/clang/9.0.0/include"
    ],
    "name":"compiler-rt",
    "requirements":[
     "clang 9.0.0",
     "clangxx 9.0.0",
     "compiler-rt_ 9.0.0"
    ]
   }
  ],
  "package":{
   "name":"compiler-rt-packages",
   "version":"9.0.0"
  },
  "requirements":{
   "build":[
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "python",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "python",
    "cmake >=3.4.3",
    "cxx_compiler_stub",
    "python"
   ],
   "host":[
    "clangdev 9.0.0",
    "llvmdev 9.0.0",
    "clangdev 9.0.0",
    "llvmdev 9.0.0",
    "libcxx",
    "clangdev 9.0.0",
    "llvmdev 9.0.0"
   ]
  },
  "source":{
   "patches":[
    "no_codesign.diff",
    "macosx_10_9.patch",
    "no_codesign.diff",
    "macosx_10_9.patch",
    "no_codesign.diff",
    "macosx_10_9.patch"
   ],
   "sha256":"56e4cd96dd1d8c346b07b4d6b255f976570c6f2389697347a6c3dcb9e820d10e",
   "url":"http://releases.llvm.org/9.0.0/compiler-rt-9.0.0.src.tar.xz"
  },
  "test":{
   "commands":[
    "sed \"s/@MACOSX_DEPLOYMENT_TARGET@/10.14/g\" test.c.in > test.c",
    "sed \"s/@MACOSX_DEPLOYMENT_TARGET@/10.14/g\" test.c.in > test.c",
    "clang -mmacosx-version-min= test.c",
    "test -f $PREFIX/lib/clang/9.0.0/include/sanitizer/asan_interface.h",
    "sed \"s/@MACOSX_DEPLOYMENT_TARGET@/10.14/g\" test.c.in > test.c",
    "test -f $PREFIX/lib/clang/9.0.0/include/sanitizer/asan_interface.h"
   ],
   "files":[
    "test.c.in",
    "test.c.in",
    "test.c.in"
   ]
  }
 },
 "name":"compiler-rt-packages",
 "new_version":"10-init",
 "outputs_names":[
  "compiler-rt",
  "compiler-rt_"
 ],
 "pinning_version":"2019.04.12",
 "raw_meta_yaml":"{% set name = \"compiler-rt-packages\" %}\n{% set version = \"9.0.0\" %}\n{% set build_number = 2 %}\n{% set sha256 = \"56e4cd96dd1d8c346b07b4d6b255f976570c6f2389697347a6c3dcb9e820d10e\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: http://releases.llvm.org/{{ version }}/compiler-rt-{{ version }}.src.tar.xz\n  sha256: {{ sha256 }}\n  patches:\n    - no_codesign.diff\n    - macosx_10_9.patch\n\nbuild:\n  number: {{ build_number }}\n  # https://groups.google.com/forum/#!msg/llvm-dev/cQogF7NZcSw/gOVQDXWmCgAJ\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - cmake >=3.4.3\n    - {{ compiler('cxx') }}\n    - python\n  host:\n    - clangdev {{ version }}\n    - llvmdev {{ version }}\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n\ntest:\n  files:\n    - test.c.in\n  commands:\n  {% set NEW_TARGET=\"10.\" ~ (((MACOSX_DEPLOYMENT_TARGET|default(\"10.13\")).split(\".\")[1])|int + 1) %}\n    - sed \"s/@MACOSX_DEPLOYMENT_TARGET@/{{ NEW_TARGET }}/g\" test.c.in > test.c\n    - clang -mmacosx-version-min={{ MACOSX_DEPLOYMENT_TARGET }} test.c  # [osx]\n    - test -f $PREFIX/lib/clang/{{ version }}/include/sanitizer/asan_interface.h  # [unix]\n\noutputs:\n  - name: compiler-rt_{{ target_platform }}\n    build:\n      noarch: generic\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n      run:\n        - libcxx >={{ cxx_compiler_version }}  # [osx]\n        - clang {{ version }}\n        - clangxx {{ version }}\n      run_constrained:\n        - compiler-rt {{ version }}\n    files:\n      - lib/clang/{{ version }}/lib\n\n  - name: compiler-rt\n    requirements:\n      - libcxx >={{ cxx_compiler_version }}  # [osx]\n      - clang {{ version }}\n      - clangxx {{ version }}\n      - compiler-rt_{{ target_platform }} {{ version }}\n    files:\n      - lib/clang/{{ version }}/share\n      - lib/clang/{{ version }}/include\n\nabout:\n  home: http://llvm.org/\n  license: NCSA\n  license_file: LICENSE.TXT\n  summary: compiler-rt runtime libraries\n  description: |\n    builtins - low-level target-specific hooks required by code generation and other\n      runtime components\n    sanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n      MemorySanitizer, LeakSanitizer, DataFlowSanitizer\n    profile - library which is used to collect coverage information\n    BlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n      interfaces\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - inducer\n    - jakirkham\n    - isuruf\n",
 "req":{
  "__set__":true,
  "elements":[
   "clang",
   "clangdev",
   "clangxx",
   "cmake",
   "compiler-rt_",
   "cxx_compiler_stub",
   "libcxx",
   "llvmdev",
   "python"
  ]
 },
 "smithy_version":"3.3.2",
 "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/compiler-rt-8.0.1.src.tar.xz",
 "version":"9.0.0"
}