{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 579, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 97, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/Arello-Mobile/confluence-publisher/tar.gz/1.2.1"
 },
 "conda-forge.yml":{},
 "feedstock_name":"confluence-publisher",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"This tools are written as part of our Documentation Toolkit which\nwe use in our job daily. The main idea of toolkit is to make a process\nof creating and updating documentation able to be automated.\n",
   "dev_url":"https://github.com/Arello-Mobile/confluence-publisher",
   "doc_url":"https://github.com/Arello-Mobile/confluence-publisher",
   "home":"https://github.com/Arello-Mobile/confluence-publisher",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Set of tools to help publish documentation to Confluence."
  },
  "build":{
   "entry_points":[
    "conf_page_dumper = conf_publisher.page_dumper:main",
    "conf_page_maker = conf_publisher.page_maker:main",
    "conf_publisher = conf_publisher.publish:main",
    "conf_page_dumper = conf_publisher.page_dumper:main",
    "conf_page_maker = conf_publisher.page_maker:main",
    "conf_publisher = conf_publisher.publish:main",
    "conf_page_dumper = conf_publisher.page_dumper:main",
    "conf_page_maker = conf_publisher.page_maker:main",
    "conf_publisher = conf_publisher.publish:main"
   ],
   "noarch":"python",
   "number":"2",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package":{
   "name":"confluence-publisher",
   "version":"v1.2.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "pyyaml >=3.11",
    "requests >=2.4.3",
    "python",
    "pyyaml >=3.11",
    "requests >=2.4.3",
    "python",
    "pyyaml >=3.11",
    "requests >=2.4.3"
   ]
  },
  "source":{
   "sha256":"1c6a5fd6a2190121761208535723f6fcedbc88d66244c93aa5a4a676dc7216fd",
   "url":"https://github.com/Arello-Mobile/confluence-publisher/archive/v1.2.1.tar.gz"
  },
  "test":{
   "commands":[
    "conf_page_dumper --help",
    "conf_page_maker --help",
    "conf_publisher --help",
    "conf_page_dumper --help",
    "conf_page_maker --help",
    "conf_publisher --help",
    "conf_page_dumper --help",
    "conf_page_maker --help",
    "conf_publisher --help"
   ],
   "imports":[
    "conf_publisher",
    "conf_publisher.page_dumper",
    "conf_publisher.page_maker",
    "conf_publisher.publish",
    "conf_publisher",
    "conf_publisher.page_dumper",
    "conf_publisher.page_maker",
    "conf_publisher.publish",
    "conf_publisher",
    "conf_publisher.page_dumper",
    "conf_publisher.page_maker",
    "conf_publisher.publish"
   ]
  }
 },
 "name":"confluence-publisher",
 "new_version":"1.2.1",
 "pinning_version":"2018.07.01",
 "raw_meta_yaml":"{% set name = \"confluence-publisher\" %}\n{% set version = \"v1.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Arello-Mobile/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: 1c6a5fd6a2190121761208535723f6fcedbc88d66244c93aa5a4a676dc7216fd\n\nbuild:\n  noarch: python\n  noarch: python\n  number: 2\n  entry_points:\n    - conf_page_dumper = conf_publisher.page_dumper:main\n    - conf_page_maker = conf_publisher.page_maker:main\n    - conf_publisher = conf_publisher.publish:main\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pyyaml >=3.11\n    - requests >=2.4.3\n\ntest:\n  imports:\n    - conf_publisher\n    - conf_publisher.page_dumper\n    - conf_publisher.page_maker\n    - conf_publisher.publish\n  commands:\n    - conf_page_dumper --help\n    - conf_page_maker --help\n    - conf_publisher --help\n\nabout:\n  home: https://github.com/Arello-Mobile/confluence-publisher\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Set of tools to help publish documentation to Confluence.'\n\n  description: |\n    This tools are written as part of our Documentation Toolkit which\n    we use in our job daily. The main idea of toolkit is to make a process\n    of creating and updating documentation able to be automated.\n  doc_url: https://github.com/Arello-Mobile/confluence-publisher\n  dev_url: https://github.com/Arello-Mobile/confluence-publisher\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python",
   "pyyaml",
   "requests"
  ]
 },
 "smithy_version":"3.1.6",
 "time":1568131697.1223733,
 "url":"https://github.com/Arello-Mobile/confluence-publisher/archive/v1.2.1.tar.gz",
 "version":"v1.2.1"
}