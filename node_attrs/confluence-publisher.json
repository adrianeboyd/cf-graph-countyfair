{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 257, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 83, in run",
   "    gh=gh)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.xsh\", line 119, in get_repo",
   "    fork_repo = gh.repository($USERNAME, feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"confluence-publisher",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"This tools are written as part of our Documentation Toolkit which\nwe use in our job daily. The main idea of toolkit is to make a process\nof creating and updating documentation able to be automated.\n",
   "dev_url":"https://github.com/Arello-Mobile/confluence-publisher",
   "doc_url":"https://github.com/Arello-Mobile/confluence-publisher",
   "home":"https://github.com/Arello-Mobile/confluence-publisher",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Set of tools to help publish documentation to Confluence."
  },
  "build":{
   "entry_points":[
    "conf_page_dumper = conf_publisher.page_dumper:main",
    "conf_page_maker = conf_publisher.page_maker:main",
    "conf_publisher = conf_publisher.publish:main",
    "conf_page_dumper = conf_publisher.page_dumper:main",
    "conf_page_maker = conf_publisher.page_maker:main",
    "conf_publisher = conf_publisher.publish:main",
    "conf_page_dumper = conf_publisher.page_dumper:main",
    "conf_page_maker = conf_publisher.page_maker:main",
    "conf_publisher = conf_publisher.publish:main"
   ],
   "noarch":"python",
   "number":"2",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package":{
   "name":"confluence-publisher",
   "version":"v1.2.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "pyyaml >=3.11",
    "requests >=2.4.3",
    "python",
    "pyyaml >=3.11",
    "requests >=2.4.3",
    "python",
    "pyyaml >=3.11",
    "requests >=2.4.3"
   ]
  },
  "source":{
   "sha256":"1c6a5fd6a2190121761208535723f6fcedbc88d66244c93aa5a4a676dc7216fd",
   "url":"https://github.com/Arello-Mobile/confluence-publisher/archive/v1.2.1.tar.gz"
  },
  "test":{
   "commands":[
    "conf_page_dumper --help",
    "conf_page_maker --help",
    "conf_publisher --help",
    "conf_page_dumper --help",
    "conf_page_maker --help",
    "conf_publisher --help",
    "conf_page_dumper --help",
    "conf_page_maker --help",
    "conf_publisher --help"
   ],
   "imports":[
    "conf_publisher",
    "conf_publisher.page_dumper",
    "conf_publisher.page_maker",
    "conf_publisher.publish",
    "conf_publisher",
    "conf_publisher.page_dumper",
    "conf_publisher.page_maker",
    "conf_publisher.publish",
    "conf_publisher",
    "conf_publisher.page_dumper",
    "conf_publisher.page_maker",
    "conf_publisher.publish"
   ]
  }
 },
 "name":"confluence-publisher",
 "new_version":"1.2.1",
 "pinning_version":"2018.07.01",
 "raw_meta_yaml":"{% set name = \"confluence-publisher\" %}\n{% set version = \"v1.2.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Arello-Mobile/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: 1c6a5fd6a2190121761208535723f6fcedbc88d66244c93aa5a4a676dc7216fd\n\nbuild:\n  noarch: python\n  noarch: python\n  number: 2\n  entry_points:\n    - conf_page_dumper = conf_publisher.page_dumper:main\n    - conf_page_maker = conf_publisher.page_maker:main\n    - conf_publisher = conf_publisher.publish:main\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pyyaml >=3.11\n    - requests >=2.4.3\n\ntest:\n  imports:\n    - conf_publisher\n    - conf_publisher.page_dumper\n    - conf_publisher.page_maker\n    - conf_publisher.publish\n  commands:\n    - conf_page_dumper --help\n    - conf_page_maker --help\n    - conf_publisher --help\n\nabout:\n  home: https://github.com/Arello-Mobile/confluence-publisher\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Set of tools to help publish documentation to Confluence.'\n\n  description: |\n    This tools are written as part of our Documentation Toolkit which\n    we use in our job daily. The main idea of toolkit is to make a process\n    of creating and updating documentation able to be automated.\n  doc_url: https://github.com/Arello-Mobile/confluence-publisher\n  dev_url: https://github.com/Arello-Mobile/confluence-publisher\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python",
   "pyyaml",
   "requests"
  ]
 },
 "smithy_version":"3.1.6",
 "time":1568135293.405039,
 "url":"https://github.com/Arello-Mobile/confluence-publisher/archive/v1.2.1.tar.gz",
 "version":"v1.2.1"
}