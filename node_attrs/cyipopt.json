{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/196872644.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217478666.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217671310.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.9"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/234984208.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"cyipopt",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Ipopt (Interior Point OPTimizer, pronounced eye-pea-Opt) is a software\npackage for large-scale nonlinear optimization. cyipopt is a python wrapper\naround Ipopt. It enables using Ipopt from the comfort of the great Python\nscripting language. Ipopt is available from the COIN-OR initiative, under\nthe Eclipse Public License (EPL).\n",
   "dev_url":"https://github.com/matthias-k/cyipopt",
   "doc_url":"http://pythonhosted.org/ipopt/",
   "home":"https://github.com/matthias-k/cyipopt",
   "license":"EPL-1.0",
   "summary":"A Cython wrapper to the IPOPT optimization package"
  },
  "build":{
   "number":"1000",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "moorepants",
    "moorepants",
    "moorepants"
   ]
  },
  "package":{
   "name":"cyipopt",
   "version":"0.1.9"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "pkg-config",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "pip",
    "python",
    "ipopt",
    "setuptools",
    "cython",
    "numpy",
    "scipy",
    "six",
    "pip",
    "python",
    "ipopt",
    "setuptools",
    "cython",
    "numpy",
    "scipy",
    "six",
    "pip",
    "python",
    "ipopt",
    "setuptools",
    "cython",
    "numpy",
    "scipy",
    "six"
   ],
   "run":[
    "python",
    "ipopt",
    "compatible_pin_stub",
    "scipy",
    "six",
    "future",
    "python",
    "ipopt",
    "compatible_pin_stub",
    "scipy",
    "six",
    "future",
    "python",
    "ipopt",
    "compatible_pin_stub",
    "scipy",
    "six",
    "future"
   ]
  },
  "source":{
   "fn":"v0.1.9.tar.gz",
   "patches":[
    "no_link_gfortran.patch",
    "no_link_gfortran.patch",
    "no_link_gfortran.patch"
   ],
   "sha256":"b6cea96d5ffb9d3f55d993dd51575fa6137c1f94bdfd53b7b25f574989fffa38",
   "url":"https://github.com/matthias-k/cyipopt/archive/v0.1.9.tar.gz"
  },
  "test":{
   "commands":[
    "python examplehs071.py",
    "python examplehs071.py",
    "python examplehs071.py"
   ],
   "files":[
    "examplehs071.py",
    "examplehs071.py",
    "examplehs071.py"
   ],
   "imports":[
    "ipopt",
    "ipopt",
    "ipopt"
   ]
  }
 },
 "name":"cyipopt",
 "new_version":"0.1.9",
 "pinning_version":"2018.11.27",
 "raw_meta_yaml":"{% set name = \"cyipopt\" %}\n{% set version = \"0.1.9\" %}\n{% set sha256 = \"b6cea96d5ffb9d3f55d993dd51575fa6137c1f94bdfd53b7b25f574989fffa38\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: v{{ version }}.tar.gz\n  url: https://github.com/matthias-k/cyipopt/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - no_link_gfortran.patch\n\nbuild:\n  number: 1000\n  # TODO: Once ipopt is available for Windows in conda forge, remove the\n  # following line.\n  skip: True  # [win]\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  build:\n    - pkg-config  # [osx]\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n    - ipopt\n    - setuptools\n    - cython\n    - numpy\n    - scipy\n    - six\n  run:\n    - python\n    - ipopt\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - six\n    - future\n\ntest:\n  imports:\n    - ipopt\n  files:\n    - examplehs071.py\n  commands:\n    - python examplehs071.py\n\nabout:\n  home: https://github.com/matthias-k/cyipopt\n  license: EPL-1.0\n  summary: 'A Cython wrapper to the IPOPT optimization package'\n\n  description: |\n    Ipopt (Interior Point OPTimizer, pronounced eye-pea-Opt) is a software\n    package for large-scale nonlinear optimization. cyipopt is a python wrapper\n    around Ipopt. It enables using Ipopt from the comfort of the great Python\n    scripting language. Ipopt is available from the COIN-OR initiative, under\n    the Eclipse Public License (EPL).\n  doc_url: http://pythonhosted.org/ipopt/\n  dev_url: https://github.com/matthias-k/cyipopt\n\nextra:\n  recipe-maintainers:\n    - moorepants\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "compatible_pin_stub",
   "cython",
   "future",
   "ipopt",
   "numpy",
   "pip",
   "pkg-config",
   "python",
   "scipy",
   "setuptools",
   "six"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568070546.3370702,
 "url":"https://github.com/matthias-k/cyipopt/archive/v0.1.9.tar.gz",
 "version":"0.1.9"
}