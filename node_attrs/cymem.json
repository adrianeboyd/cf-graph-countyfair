{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/196872676.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217509187.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222722854.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222726680.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"cymem",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"cymem provides two small memory-management helpers for Cython. They make it\neasy to tie memory to a Python object\u2019s life-cycle, so that the memory is\nfreed when the object is garbage collected.\n",
   "home":"https://github.com/explosion/cymem",
   "license":"MIT",
   "license_file":"LICENSE",
   "summary":"Manage calls to calloc/free through Cython"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "rmax",
    "h-vetinari",
    "rmax",
    "h-vetinari",
    "rmax",
    "h-vetinari"
   ]
  },
  "package":{
   "name":"cymem",
   "version":"2.0.2"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "cython",
    "pip",
    "python",
    "setuptools",
    "wheel",
    "cython",
    "pip",
    "python",
    "setuptools",
    "wheel",
    "cython",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"cymem-2.0.2.tar.gz",
   "patches":[
    "patches/0001-remove-setup_requires.patch",
    "patches/0001-remove-setup_requires.patch",
    "patches/0001-remove-setup_requires.patch"
   ],
   "sha256":"ab88b1534f06df07262d9bc5efb3ba07948cdbe9a363eb9eaa4ad42fae6c7b5e",
   "url":"https://pypi.io/packages/source/c/cymem/cymem-2.0.2.tar.gz"
  },
  "test":{
   "requires":[
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name":"cymem",
 "new_version":"2.0.2",
 "pinning_version":"2018.10.11",
 "raw_meta_yaml":"{% set name = \"cymem\" %}\n{% set version = \"2.0.2\" %}\n{% set sha256sum = \"ab88b1534f06df07262d9bc5efb3ba07948cdbe9a363eb9eaa4ad42fae6c7b5e\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256sum }}\n  patches:\n    - patches/0001-remove-setup_requires.patch\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n  skip: True  # [win32 or linux32]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - cython\n    - pip\n    - python\n    - setuptools\n    - wheel\n\n  run:\n    - python\n\ntest:\n  requires:\n    - pytest\n\nabout:\n  home: https://github.com/explosion/cymem\n  license: MIT\n  license_file: LICENSE\n  summary: Manage calls to calloc/free through Cython\n  description: |\n    cymem provides two small memory-management helpers for Cython. They make it\n    easy to tie memory to a Python object\u2019s life-cycle, so that the memory is\n    freed when the object is garbage collected.\n\nextra:\n  recipe-maintainers:\n    - rmax\n    - h-vetinari\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "pip",
   "python",
   "setuptools",
   "wheel"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568072017.6912408,
 "url":"https://pypi.io/packages/source/c/cymem/cymem-2.0.2.tar.gz",
 "version":"2.0.2"
}