{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/357516336.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/357516543.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"Failed to put item: An error occurred (ValidationException) on request (O83HJFS3EI3GD5OFAGG4G315NJVV4KQNSO5AEMVJF66Q9ASUAAJG) on table (pr_json) when calling the PutItem operation: Attempting to store more than 38 significant digits in a Number",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 901, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 248, in run",
   "    PRJson.dump(pr_json)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/dynamo_models.py\", line 33, in dump",
   "    item.save()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/pynamodb/models.py\", line 405, in save",
   "    data = self._get_connection().put_item(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/pynamodb/connection/table.py\", line 139, in put_item",
   "    return_item_collection_metrics=return_item_collection_metrics)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/pynamodb/connection/base.py\", line 972, in put_item",
   "    six.raise_from(PutError(\"Failed to put item: {}\".format(e), e), None)",
   "  File \"<string>\", line 3, in raise_from",
   "pynamodb.exceptions.PutError: Failed to put item: An error occurred (ValidationException) on request (O83HJFS3EI3GD5OFAGG4G315NJVV4KQNSO5AEMVJF66Q9ASUAAJG) on table (pr_json) when calling the PutItem operation: Attempting to store more than 38 significant digits in a Number",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"cython-fortran-file",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"This package is a fast and easy reader for record-based binary format, as written by Fortran.\n",
   "dev_url":"https://github.com/cphyc/cython_fortran_file",
   "doc_url":"https://github.com/cphyc/cython_fortran_file",
   "home":"https://github.com/cphyc/cython_fortran_file/",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"An efficient package to read fortran-record files in Python"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "cphyc",
    "cphyc",
    "cphyc"
   ]
  },
  "package":{
   "name":"cython-fortran-file",
   "version":"v0.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy",
    "python",
    "pip",
    "cython",
    "numpy"
   ],
   "run":[
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source":{
   "sha256":"9f54b216c0eb0b5a9a61e2305b093c052f1da2e9260e4566a1b4adb0b09d43a5",
   "url":"https://github.com/cphyc/cython_fortran_file/archive/v0.1.0.tar.gz"
  },
  "test":{
   "imports":[
    "cython_fortran_file",
    "cython_fortran_file",
    "cython_fortran_file"
   ]
  }
 },
 "name":"cython-fortran-file",
 "new_version":"0.1.0",
 "pinning_version":"2019.12.18",
 "raw_meta_yaml":"{% set name = \"cython-fortran-file\" %}\n{% set version = \"v0.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cphyc/cython_fortran_file/archive/{{ version }}.tar.gz\n  sha256: 9f54b216c0eb0b5a9a61e2305b093c052f1da2e9260e4566a1b4adb0b09d43a5\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - cython_fortran_file\n\nabout:\n  home: https://github.com/cphyc/cython_fortran_file/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'An efficient package to read fortran-record files in Python'\n\n  description: |\n    This package is a fast and easy reader for record-based binary format, as written by Fortran.\n  doc_url: https://github.com/cphyc/cython_fortran_file\n  dev_url: https://github.com/cphyc/cython_fortran_file\n\nextra:\n  recipe-maintainers:\n    - cphyc\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.5",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/cphyc/cython_fortran_file/archive/v0.1.0.tar.gz",
 "version":"v0.1.0"
}