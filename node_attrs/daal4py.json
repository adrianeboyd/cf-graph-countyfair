{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/519144655.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/519173678.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "conda-forge.yml": {},
 "feedstock_name": "daal4py",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": " <strong>LEGAL NOTICE: Use of this software package is subject to the software license agreement (as set forth above, in the license section of the installed Conda package and/or the README file) and all notices, disclaimers or license terms for third party or open source software included in or with the software.</strong> <br/><br/> EULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0 License</a><br/><br/>",
   "dev_url": "https://github.com/IntelPython/daal4py",
   "doc_url": "https://intelpython.github.io/daal4py/",
   "home": "https://intelpython.github.io/daal4py/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A convenient Python API to Intel(R) oneAPI Data Analytics Library"
  },
  "build": {
   "include_recipe": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu"
   ]
  },
  "package": {
   "name": "daal4py",
   "version": "2020.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools"
   ],
   "run": [
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d71028538d028f1cc03706d9b1984ac932da45592696edd678518954ac485c4f",
   "url": "https://github.com/IntelPython/daal4py/archive/2020.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py"
   ],
   "requires": [
    "pandas",
    "scipy",
    "scikit-learn",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "mpich"
   ],
   "source_files": [
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang-tools",
    "cython",
    "daal-devel",
    "jinja2",
    "mpich",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "daal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mpich",
    "pandas",
    "scikit-learn",
    "scipy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": " <strong>LEGAL NOTICE: Use of this software package is subject to the software license agreement (as set forth above, in the license section of the installed Conda package and/or the README file) and all notices, disclaimers or license terms for third party or open source software included in or with the software.</strong> <br/><br/> EULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0 License</a><br/><br/>",
   "dev_url": "https://github.com/IntelPython/daal4py",
   "doc_url": "https://intelpython.github.io/daal4py/",
   "home": "https://intelpython.github.io/daal4py/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A convenient Python API to Intel(R) oneAPI Data Analytics Library"
  },
  "build": {
   "include_recipe": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu"
   ]
  },
  "package": {
   "name": "daal4py",
   "version": "2020.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "mpich",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "clang-tools"
   ],
   "run": [
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d71028538d028f1cc03706d9b1984ac932da45592696edd678518954ac485c4f",
   "url": "https://github.com/IntelPython/daal4py/archive/2020.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py"
   ],
   "requires": [
    "pandas",
    "scipy",
    "scikit-learn",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "mpich",
    "pandas",
    "scipy",
    "scikit-learn",
    "pandas",
    "scipy",
    "scikit-learn",
    "pandas",
    "scipy",
    "scikit-learn"
   ],
   "source_files": [
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests"
   ]
  }
 },
 "name": "daal4py",
 "new_version": "2020.3",
 "new_version_attempts": {
  "2020.3": 1
 },
 "new_version_errors": {},
 "outputs_names": [
  "daal4py"
 ],
 "pinning_version": "2020.11.11.10.18.59",
 "raw_meta_yaml": "{% set version = '2020.2' %}\n{% set buildnumber = 1 %}\n\npackage:\n    name: daal4py\n    version: {{ version }}\n\nsource:\n    url:    https://github.com/IntelPython/daal4py/archive/{{ version }}.tar.gz\n    sha256: d71028538d028f1cc03706d9b1984ac932da45592696edd678518954ac485c4f\nbuild:\n    skip: True  # [osx]\n    number: {{ buildnumber }}\n    include_recipe: False\n\nrequirements:\n    build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n    host:\n        - python\n        - setuptools\n        - numpy\n        - daal-devel >=2020.2\n        - cython\n        - jinja2\n        - mpich  # [not win]\n        - clang-tools\n    run:\n        - python\n        - daal >=2020.2\n        - {{ pin_compatible('numpy') }}\n\ntest:\n    requires:\n        - pandas\n        - scipy\n        - scikit-learn\n        - mpich  # [not win]\n    source_files:\n        - examples\n        - tests\n    commands:\n        - python -c \"import daal4py\"\n        - mpirun -n 4 python -m unittest discover -v -s tests -p spmd*.py  # [not win]\n        - python -m unittest discover -v -s tests -p test*.py\n        - python -m daal4py examples/sycl/sklearn_sycl.py\n        - cd examples && python run_examples.py\n\nabout:\n    home: https://intelpython.github.io/daal4py/\n    license: Apache-2.0\n    license_file: LICENSE\n    summary: A convenient Python API to Intel(R) oneAPI Data Analytics Library\n    description: ' <strong>LEGAL NOTICE: Use of this software package is subject to the software\n    license agreement (as set forth above, in the license section of the installed Conda package\n    and/or the README file) and all notices, disclaimers or license terms for third party or open\n    source software included in or with the software.</strong> <br/><br/>\n    EULA: <a href=\"https://opensource.org/licenses/Apache-2.0\"\n    target=\"_blank\">Apache-2.0 License</a><br/><br/>'\n    dev_url: https://github.com/IntelPython/daal4py\n    doc_url: https://intelpython.github.io/daal4py/\n\nextra:\n    recipe-maintainers:\n        # GitHub IDs for maintainers of the recipe.\n        - napetrov\n        - PetrovKP\n        - SmirnovEgorRu\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "clang-tools",
   "cxx_compiler_stub",
   "cython",
   "daal",
   "daal-devel",
   "jinja2",
   "mpich",
   "numpy",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang-tools",
    "cxx_compiler_stub",
    "cython",
    "daal-devel",
    "jinja2",
    "mpich",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "daal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mpich",
    "pandas",
    "scikit-learn",
    "scipy"
   ]
  }
 },
 "smithy_version": "3.8.5",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang-tools",
    "cython",
    "daal-devel >=2020.2",
    "jinja2",
    "mpich",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "daal >=2020.2",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mpich",
    "pandas",
    "scikit-learn",
    "scipy"
   ]
  }
 },
 "url": "https://github.com/IntelPython/daal4py/archive/2020.2.tar.gz",
 "version": "2020.2",
 "win_64_meta_yaml": {
  "about": {
   "description": " <strong>LEGAL NOTICE: Use of this software package is subject to the software license agreement (as set forth above, in the license section of the installed Conda package and/or the README file) and all notices, disclaimers or license terms for third party or open source software included in or with the software.</strong> <br/><br/> EULA: <a href=\"https://opensource.org/licenses/Apache-2.0\" target=\"_blank\">Apache-2.0 License</a><br/><br/>",
   "dev_url": "https://github.com/IntelPython/daal4py",
   "doc_url": "https://intelpython.github.io/daal4py/",
   "home": "https://intelpython.github.io/daal4py/",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "A convenient Python API to Intel(R) oneAPI Data Analytics Library"
  },
  "build": {
   "include_recipe": false,
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu",
    "napetrov",
    "PetrovKP",
    "SmirnovEgorRu"
   ]
  },
  "package": {
   "name": "daal4py",
   "version": "2020.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "clang-tools",
    "python",
    "setuptools",
    "numpy",
    "daal-devel >=2020.2",
    "cython",
    "jinja2",
    "clang-tools"
   ],
   "run": [
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy",
    "python",
    "daal >=2020.2",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d71028538d028f1cc03706d9b1984ac932da45592696edd678518954ac485c4f",
   "url": "https://github.com/IntelPython/daal4py/archive/2020.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py",
    "python -c \"import daal4py\"",
    "python -m unittest discover -v -s tests -p test*.py",
    "python -m daal4py examples/sycl/sklearn_sycl.py",
    "cd examples && python run_examples.py"
   ],
   "requires": [
    "pandas",
    "scipy",
    "scikit-learn",
    "pandas",
    "scipy",
    "scikit-learn",
    "pandas",
    "scipy",
    "scikit-learn"
   ],
   "source_files": [
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang-tools",
    "cython",
    "daal-devel",
    "jinja2",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "daal",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pandas",
    "scikit-learn",
    "scipy"
   ]
  }
 }
}