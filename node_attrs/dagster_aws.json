{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/346698025.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/350165881.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/350739832.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.12.9"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 1322, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 303, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 264, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/socket.py\", line 669, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 439, in send",
   "    resp = conn.urlopen(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 719, in urlopen",
   "    retries = retries.increment(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 665, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 330, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 659, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 120, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 111, in get_repo",
   "    repo = gh.repository(\"conda-forge\", feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"dagster_aws",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/dagster-io/dagster/tree/master/python_modules/libraries/dagster-aws",
   "license":"Apache Software",
   "license_family":"APACHE",
   "license_file":"LICENSE",
   "summary":"Package for AWS-specific Dagster framework solid and resource components."
  },
  "build":{
   "entry_points":[
    "dagster-aws = dagster_aws.cli.cli:main",
    "dagster-aws = dagster_aws.cli.cli:main",
    "dagster-aws = dagster_aws.cli.cli:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/dagster",
    "conda-forge/dagster",
    "conda-forge/dagster"
   ]
  },
  "package":{
   "name":"dagster_aws",
   "version":"0.6.6"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run":[
    "boto3 1.9.*",
    "dagster 0.6.6.*",
    "python",
    "requests",
    "terminaltables",
    "boto3 1.9.*",
    "dagster 0.6.6.*",
    "python",
    "requests",
    "terminaltables",
    "boto3 1.9.*",
    "dagster 0.6.6.*",
    "python",
    "requests",
    "terminaltables"
   ]
  },
  "source":{
   "sha256":"195f2d4c50c10fad0f0f8676c733ac1864b51854bb4b09175dbcdfa321b63cbd",
   "url":"https://pypi.io/packages/source/d/dagster_aws/dagster_aws-0.6.6.tar.gz"
  },
  "test":{
   "commands":[
    "dagster-aws --help",
    "dagster-aws --help",
    "dagster-aws --help"
   ],
   "imports":[
    "dagster_aws",
    "dagster_aws.cli",
    "dagster_aws.cloudwatch",
    "dagster_aws.emr",
    "dagster_aws.s3",
    "dagster_aws",
    "dagster_aws.cli",
    "dagster_aws.cloudwatch",
    "dagster_aws.emr",
    "dagster_aws.s3",
    "dagster_aws",
    "dagster_aws.cli",
    "dagster_aws.cloudwatch",
    "dagster_aws.emr",
    "dagster_aws.s3"
   ]
  }
 },
 "name":"dagster_aws",
 "new_version":"0.6.7",
 "pinning_version":"2019.12.02",
 "raw_meta_yaml":"{% set name = \"dagster_aws\" %}\n{% set version = \"0.6.6\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: 195f2d4c50c10fad0f0f8676c733ac1864b51854bb4b09175dbcdfa321b63cbd\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - dagster-aws = dagster_aws.cli.cli:main\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - boto3 1.9.*\n    - dagster {{ version }}.*\n    - python\n    - requests\n    - terminaltables\n\ntest:\n  imports:\n    - dagster_aws\n    - dagster_aws.cli\n    - dagster_aws.cloudwatch\n    - dagster_aws.emr\n    - dagster_aws.s3\n  commands:\n    - dagster-aws --help\n\nabout:\n  home: \"https://github.com/dagster-io/dagster/tree/master/python_modules/libraries/dagster-aws\"\n  license: Apache Software\n  license_family: APACHE\n  license_file: LICENSE\n  summary: \"Package for AWS-specific Dagster framework solid and resource components.\"\n\nextra:\n  recipe-maintainers:\n    - conda-forge/dagster\n",
 "req":{
  "__set__":true,
  "elements":[
   "boto3",
   "dagster",
   "pip",
   "python",
   "requests",
   "setuptools",
   "terminaltables"
  ]
 },
 "smithy_version":"3.6.3",
 "url":"https://pypi.io/packages/source/d/dagster_aws/dagster_aws-0.6.4.tar.gz",
 "version":"0.6.6"
}