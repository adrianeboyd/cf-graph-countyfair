{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/346697303.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 748, in main",
   "    migrator_uid, pr_json = run(attrs=attrs, migrator=migrator, gh=gh,",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 473, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 389, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/d/dagster_gcp/dagster_gcp-0.6.6.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"dagster_gcp",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/dagster-io/dagster/tree/master/python_modules/libraries/dagster-gcp",
   "license":"Apache-2.0",
   "license_family":"APACHE",
   "license_file":"LICENSE",
   "summary":"Package for GCP-specific Dagster framework solid and resource components."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/dagster",
    "conda-forge/dagster",
    "conda-forge/dagster"
   ]
  },
  "package":{
   "name":"dagster_gcp",
   "version":"0.6.5"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "dagster",
    "dagster_pandas",
    "google-api-python-client",
    "google-cloud-bigquery >=1.19",
    "google-cloud-storage",
    "google-resumable-media",
    "oauth2client",
    "python",
    "dagster",
    "dagster_pandas",
    "google-api-python-client",
    "google-cloud-bigquery >=1.19",
    "google-cloud-storage",
    "google-resumable-media",
    "oauth2client",
    "python",
    "dagster",
    "dagster_pandas",
    "google-api-python-client",
    "google-cloud-bigquery >=1.19",
    "google-cloud-storage",
    "google-resumable-media",
    "oauth2client"
   ]
  },
  "source":{
   "sha256":"c2d52f161a9bc4826e6fbec7d5969f80e5fb06249a18ab5daa17a2fb84df6d81",
   "url":"https://pypi.io/packages/source/d/dagster_gcp/dagster_gcp-0.6.5.tar.gz"
  },
  "test":{
   "imports":[
    "dagster_gcp",
    "dagster_gcp.bigquery",
    "dagster_gcp.dataproc",
    "dagster_gcp.gcs",
    "dagster_gcp",
    "dagster_gcp.bigquery",
    "dagster_gcp.dataproc",
    "dagster_gcp.gcs",
    "dagster_gcp",
    "dagster_gcp.bigquery",
    "dagster_gcp.dataproc",
    "dagster_gcp.gcs"
   ]
  }
 },
 "name":"dagster_gcp",
 "new_version":"0.6.6",
 "pinning_version":"2019.11.26",
 "raw_meta_yaml":"{% set name = \"dagster_gcp\" %}\n{% set version = \"0.6.5\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: c2d52f161a9bc4826e6fbec7d5969f80e5fb06249a18ab5daa17a2fb84df6d81\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n    - dagster\n    - dagster_pandas\n    - google-api-python-client\n    - google-cloud-bigquery >=1.19\n    - google-cloud-storage\n    - google-resumable-media\n    - oauth2client\n\ntest:\n  imports:\n    - dagster_gcp\n    - dagster_gcp.bigquery\n    - dagster_gcp.dataproc\n    - dagster_gcp.gcs\n\nabout:\n  home: \"https://github.com/dagster-io/dagster/tree/master/python_modules/libraries/dagster-gcp\"\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: \"Package for GCP-specific Dagster framework solid and resource components.\"\n\nextra:\n  recipe-maintainers:\n    - conda-forge/dagster\n",
 "req":{
  "__set__":true,
  "elements":[
   "dagster",
   "dagster_pandas",
   "google-api-python-client",
   "google-cloud-bigquery",
   "google-cloud-storage",
   "google-resumable-media",
   "oauth2client",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "smithy_version":"3.6.3",
 "url":"https://pypi.io/packages/source/d/dagster_gcp/dagster_gcp-0.6.4.tar.gz",
 "version":"0.6.5"
}