{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/217553273.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"HTTP Error 404: Not Found",
  "traceback":"Traceback (most recent call last):\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 578, in main\n    hash_type=attrs.get('hash_type', 'sha256'))\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 96, in run\n    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate\n    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns\n    hash = hash_url(url, hash_type)\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url\n    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress\n    with urllib.request.urlopen(url) as f:\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen\n    return opener.open(url, data, timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error\n    result = self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302\n    return self.parent.open(new, timeout=req.timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error\n    result = self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302\n    return self.parent.open(new, timeout=req.timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error\n    return self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\nurllib.error.HTTPError: HTTP Error 404: Not Found\n"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"desktop3",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The desktop package provides desktop environment detection and\nresource opening support for a selection of common and standardised\ndesktop environments.\n",
   "dev_url":"https://github.com/eight04/pyDesktop3",
   "home":"https://github.com/eight04/pyDesktop3",
   "license":"GNU Lesser General Public v3 or later (LGPLv3+)",
   "license_family":"LGPL",
   "license_file":"docs/COPYING.txt",
   "summary":"Simple desktop integration for Python."
  },
  "build":{
   "number":"1000",
   "script":"python setup.py install --single-version-externally-managed --record record.txt"
  },
  "extra":{
   "recipe-maintainers":[
    "eight04",
    "tadeu",
    "nicoddemus",
    "eight04",
    "tadeu",
    "nicoddemus",
    "eight04",
    "tadeu",
    "nicoddemus"
   ]
  },
  "package":{
   "name":"desktop3",
   "version":"0.5.2"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"desktop3-0.5.2.zip",
   "sha256":"37e8bfbfbd0ce97471fc48bf5b9ddb2459b7e5f2756b2f5e682831f365723615",
   "url":"https://pypi.io/packages/source/d/desktop3/desktop3-0.5.2.zip"
  },
  "test":{
   "imports":[
    "desktop",
    "desktop",
    "desktop"
   ]
  }
 },
 "name":"desktop3",
 "new_version":"0.5.3",
 "pinning_version":"2018.09.20",
 "raw_meta_yaml":"{% set name = \"desktop3\" %}\n{% set version = \"0.5.2\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash = \"37e8bfbfbd0ce97471fc48bf5b9ddb2459b7e5f2756b2f5e682831f365723615\" %}\n{% set ext = \"zip\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ ext }}\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ ext }}\n  {{ hash_type }}: {{ hash }}\n\nbuild:\n  number: 1000\n  skip: true  # [py2k]\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n\ntest:\n  imports:\n    - desktop\n\nabout:\n  home: https://github.com/eight04/pyDesktop3\n  license: GNU Lesser General Public v3 or later (LGPLv3+)\n  license_family: LGPL\n  license_file: 'docs/COPYING.txt'\n  summary: 'Simple desktop integration for Python.'\n  description: |\n    The desktop package provides desktop environment detection and\n    resource opening support for a selection of common and standardised\n    desktop environments.\n  dev_url: https://github.com/eight04/pyDesktop3\n\nextra:\n  recipe-maintainers:\n    - eight04\n    - tadeu\n    - nicoddemus\n",
 "req":{
  "__set__":true,
  "elements":[
   "python",
   "setuptools"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568072478.0613081,
 "url":"https://pypi.io/packages/source/d/desktop3/desktop3-0.5.2.zip",
 "version":"0.5.2"
}