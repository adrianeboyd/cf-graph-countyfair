{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/203966029.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/232398094.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238184873.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.15.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/259836453.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.16.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/304796329.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/348687728.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/359815638.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 659, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 133, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 647, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 526, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/d/dipy/dipy-1.1.1.tar.gz"
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"dipy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://nipy.org/dipy",
   "license":"BSD-3-Clause",
   "license_file":"LICENSE",
   "summary":"Diffusion MR Imaging in Python"
  },
  "build":{
   "number":"0",
   "script":[
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed .",
    "python -m pip install --no-deps --ignore-installed ."
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "arokem",
    "garyfallidis",
    "skoudoro",
    "arokem",
    "garyfallidis",
    "skoudoro",
    "arokem",
    "garyfallidis",
    "skoudoro"
   ]
  },
  "package":{
   "name":"dipy",
   "version":"1.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "numpy",
    "nibabel",
    "cython",
    "pip",
    "python",
    "numpy",
    "nibabel",
    "cython",
    "pip",
    "python",
    "numpy",
    "nibabel",
    "cython",
    "pip"
   ],
   "run":[
    "python",
    "compatible_pin_stub",
    "scipy",
    "nibabel",
    "scikit-learn",
    "matplotlib",
    "pytables",
    "python",
    "compatible_pin_stub",
    "scipy",
    "nibabel",
    "scikit-learn",
    "matplotlib",
    "cvxopt",
    "pytables",
    "python",
    "compatible_pin_stub",
    "scipy",
    "nibabel",
    "scikit-learn",
    "matplotlib",
    "cvxopt",
    "pytables"
   ]
  },
  "source":{
   "sha256":"06db0bc1b44b8d38097945597edcfabca4316c64adee5c29d28ffad12d96135b",
   "url":"https://pypi.io/packages/source/d/dipy/dipy-1.1.0.tar.gz"
  },
  "test":{
   "imports":[
    "dipy",
    "dipy",
    "dipy"
   ]
  }
 },
 "name":"dipy",
 "new_version":"1.1.1",
 "pinning_version":"2020.01.05",
 "raw_meta_yaml":"{% set version = \"1.1.0\" %}\n{% set name = \"dipy\" %}\n\npackage:\n  name: dipy\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 06db0bc1b44b8d38097945597edcfabca4316c64adee5c29d28ffad12d96135b\n\nbuild:\n  number: 0\n  script:\n    - call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x86_amd64   # [win64 and vc==14]\n    - python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - numpy\n    - nibabel\n    - cython\n    - pip\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - nibabel\n    - scikit-learn\n    - matplotlib\n    - cvxopt  # [not win]\n    - pytables\n    - vtk  # [py27]\n\ntest:\n  imports:\n    - dipy\n\nabout:\n  home: https://nipy.org/dipy\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Diffusion MR Imaging in Python\n\nextra:\n  recipe-maintainers:\n    - arokem\n    - garyfallidis\n    - skoudoro\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "compatible_pin_stub",
   "cvxopt",
   "cython",
   "matplotlib",
   "nibabel",
   "numpy",
   "pip",
   "pytables",
   "python",
   "scikit-learn",
   "scipy"
  ]
 },
 "smithy_version":"3.6.5",
 "url":"https://pypi.io/packages/source/d/dipy/dipy-1.0.0.tar.gz",
 "version":"1.1.0"
}