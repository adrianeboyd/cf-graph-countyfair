{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/210085646.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/260280862.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/312601840.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/312737955.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":504,
  "exception":"HTTP Error 504: Gateway Time-out",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 745, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 504: Gateway Time-out",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/d/django-bootstrap4/django-bootstrap4-1.1.0.zip"
 },
 "conda-forge.yml":{},
 "feedstock_name":"django-bootstrap4",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Write Django as usual, and let django-bootstrap4 make template output into Bootstrap 4 code.",
   "dev_url":"https://github.com/zostera/django-bootstrap4",
   "doc_url":"http://django-bootstrap4.readthedocs.io/",
   "home":"https://github.com/zostera/django-bootstrap4",
   "license":"Apache 2.0",
   "license_family":"Apache",
   "license_file":"LICENSE",
   "summary":"Bootstrap 4 integration with Django."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "cshaley",
    "sannykr",
    "cshaley",
    "sannykr",
    "cshaley",
    "sannykr"
   ]
  },
  "package":{
   "name":"django-bootstrap4",
   "version":"1.0.1"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip"
   ],
   "run":[
    "python",
    "django >=1.11",
    "python",
    "django >=1.11",
    "python",
    "django >=1.11"
   ]
  },
  "source":{
   "fn":"django-bootstrap4-1.0.1.tar.gz",
   "sha256":"3da770392819267eda2f774bcf832460af00db21089b94caf4df94be8a48c48c",
   "url":"https://pypi.io/packages/source/d/django-bootstrap4/django-bootstrap4-1.0.1.tar.gz"
  },
  "test":{
   "imports":[
    "bootstrap4",
    "bootstrap4.templatetags",
    "bootstrap4",
    "bootstrap4.templatetags",
    "bootstrap4",
    "bootstrap4.templatetags"
   ]
  }
 },
 "name":"django-bootstrap4",
 "new_version":"1.1.0",
 "pinning_version":"2019.08.27",
 "raw_meta_yaml":"{% set name = \"django-bootstrap4\" %}\n{% set version = \"1.0.1\" %}\n{% set sha256 = \"3da770392819267eda2f774bcf832460af00db21089b94caf4df94be8a48c48c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - pip\n  run:\n    - python\n    - django >=1.11\n\ntest:\n  imports:\n    - bootstrap4\n    - bootstrap4.templatetags\n    \nabout:\n  home: 'https://github.com/zostera/django-bootstrap4'\n  license: Apache 2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Bootstrap 4 integration with Django.\n  description:  Write Django as usual, and let django-bootstrap4 make template output into Bootstrap 4 code.  \n  doc_url: http://django-bootstrap4.readthedocs.io/\n  dev_url: https://github.com/zostera/django-bootstrap4\n\nextra:\n  recipe-maintainers:\n    - cshaley\n    - sannykr\n",
 "req":{
  "__set__":true,
  "elements":[
   "django",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://pypi.io/packages/source/d/django-bootstrap4/django-bootstrap4-1.0.1.tar.gz",
 "version":"1.0.1"
}