{
 "bad":{
  "exception":"HTTP Error 404: Not Found",
  "traceback":"Traceback (most recent call last):\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 578, in main\n    hash_type=attrs.get('hash_type', 'sha256'))\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 96, in run\n    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate\n    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns\n    hash = hash_url(url, hash_type)\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url\n    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress\n    with urllib.request.urlopen(url) as f:\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen\n    return opener.open(url, data, timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error\n    result = self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302\n    return self.parent.open(new, timeout=req.timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error\n    return self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\nurllib.error.HTTPError: HTTP Error 404: Not Found\n"
 },
 "conda-forge.yml":{},
 "feedstock_name":"django-celery",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://celeryproject.org",
   "license":"BSD 2-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Old django celery integration project."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "kwilcox",
    "kwilcox",
    "kwilcox"
   ]
  },
  "package":{
   "name":"django-celery",
   "version":"3.2.2"
  },
  "requirements":{
   "build":[
    "python",
    "pip",
    "celery >=3.1.15,<4.0",
    "python",
    "pip",
    "celery >=3.1.15,<4.0",
    "python",
    "pip",
    "celery >=3.1.15,<4.0"
   ],
   "run":[
    "python",
    "celery >=3.1.15,<4.0",
    "python",
    "celery >=3.1.15,<4.0",
    "python",
    "celery >=3.1.15,<4.0"
   ]
  },
  "source":{
   "fn":"django-celery-3.2.2.tar.gz",
   "sha256":"39db64afc65b33db70c7905c69ec77ddb1ade5bf539c5b0a061dd00316963977",
   "url":"https://github.com/celery/django-celery/archive/v3.2.2.tar.gz"
  },
  "test":{
   "imports":[
    "djcelery",
    "djcelery.backends",
    "djcelery.contrib",
    "djcelery.management",
    "djcelery.management.commands",
    "djcelery.migrations",
    "djcelery.monproj",
    "djcelery.tests",
    "djcelery.tests.test_backends",
    "djcelery",
    "djcelery.backends",
    "djcelery.contrib",
    "djcelery.management",
    "djcelery.management.commands",
    "djcelery.migrations",
    "djcelery.monproj",
    "djcelery.tests",
    "djcelery.tests.test_backends",
    "djcelery",
    "djcelery.backends",
    "djcelery.contrib",
    "djcelery.management",
    "djcelery.management.commands",
    "djcelery.migrations",
    "djcelery.monproj",
    "djcelery.tests",
    "djcelery.tests.test_backends"
   ],
   "requires":[
    "django >=1.8,<2.0",
    "django >=1.8,<2.0",
    "django >=1.8,<2.0"
   ]
  }
 },
 "name":"django-celery",
 "new_version":"3.3.1",
 "raw_meta_yaml":"{% set name = \"django-celery\" %}\n{% set version = \"3.2.2\" %}\n{% set build = 0 %}\n{% set sha256 = \"39db64afc65b33db70c7905c69ec77ddb1ade5bf539c5b0a061dd00316963977\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/celery/django-celery/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  noarch: python\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - python\n    - pip\n    - celery >=3.1.15,<4.0\n  run:\n    - python\n    - celery >=3.1.15,<4.0\n\ntest:\n  imports:\n    - djcelery\n    - djcelery.backends\n    - djcelery.contrib\n    - djcelery.management\n    - djcelery.management.commands\n    - djcelery.migrations\n    - djcelery.monproj\n    - djcelery.tests\n    - djcelery.tests.test_backends\n  requires:\n    - django >=1.8,<2.0\n\nabout:\n  home: http://celeryproject.org\n  license: BSD 2-Clause\n  license_file: LICENSE\n  license_family: BSD\n  summary: Old django celery integration project.\n\nextra:\n  recipe-maintainers:\n    - kwilcox\n",
 "req":{
  "__set__":true,
  "elements":[
   "celery",
   "pip",
   "python"
  ]
 },
 "time":1568072473.386513,
 "url":"https://github.com/celery/django-celery/archive/v3.2.2.tar.gz",
 "version":"3.2.2"
}