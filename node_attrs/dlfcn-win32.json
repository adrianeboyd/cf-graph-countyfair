{
 "bad":{
  "exception":"Command '['git', 'clone', '-q', 'https://github.com/regro-cf-autotick-bot/dlfcn-win32.git', './feedstocks/dlfcn-win32-feedstock']' returned non-zero exit status 128.",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 658, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 120, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 134, in get_repo",
   "    if fetch_repo(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_xonsh_utils.xsh\", line 9, in fetch_repo",
   "    p = ![git clone -q @(origin) @(feedstock_dir)]",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/xonsh/__amalgam__.py\", line 22475, in subproc_captured_hiddenobject",
   "    return run_subproc(cmds, captured=\"hiddenobject\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/xonsh/__amalgam__.py\", line 22438, in run_subproc",
   "    command.end()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/xonsh/__amalgam__.py\", line 15680, in end",
   "    self._end(tee_output=tee_output)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/xonsh/__amalgam__.py\", line 15699, in _end",
   "    self._raise_subproc_error()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/xonsh/__amalgam__.py\", line 15825, in _raise_subproc_error",
   "    raise subprocess.CalledProcessError(rtn, spec.args, output=self.output)",
   "subprocess.CalledProcessError: Command '['git', 'clone', '-q', 'https://github.com/regro-cf-autotick-bot/dlfcn-win32.git', './feedstocks/dlfcn-win32-feedstock']' returned non-zero exit status 128.",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"dlfcn-win32",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/dlfcn-win32/dlfcn-win32",
   "license":"LGPL-2.1",
   "license_file":"COPYING",
   "summary":"dlfcn-win32 is an implementation of dlfcn for Windows."
  },
  "build":{
   "number":"0",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "seanyen",
    "traversaro",
    "seanyen",
    "traversaro",
    "seanyen",
    "traversaro"
   ]
  },
  "package":{
   "name":"dlfcn-win32",
   "version":"1.2.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source":{
   "sha256":"f18a412e84d8b701e61a78252411fe8c72587f52417c1ef21ca93604de1b9c55",
   "url":"https://github.com/dlfcn-win32/dlfcn-win32/archive/v1.2.0.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %PREFIX%\\\\Library\\\\share\\\\dlfcn-win32\\\\dlfcn-win32-config.cmake (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\share\\\\dlfcn-win32\\\\dlfcn-win32-config.cmake (exit 0) else (exit 1)",
    "if exist %PREFIX%\\\\Library\\\\share\\\\dlfcn-win32\\\\dlfcn-win32-config.cmake (exit 0) else (exit 1)"
   ]
  }
 },
 "name":"dlfcn-win32",
 "new_version":"19",
 "raw_meta_yaml":"{% set name = \"dlfcn-win32\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dlfcn-win32/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: f18a412e84d8b701e61a78252411fe8c72587f52417c1ef21ca93604de1b9c55\n\nbuild:\n  number: 0\n  skip: true  # [not win or vc<14]\n  run_exports:\n    - {{ pin_subpackage('dlfcn-win32', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n\ntest:\n  commands:\n    - if exist %PREFIX%\\\\Library\\\\share\\\\dlfcn-win32\\\\dlfcn-win32-config.cmake (exit 0) else (exit 1)\n\nabout:\n  home: https://github.com/dlfcn-win32/dlfcn-win32\n  license: LGPL-2.1\n  license_file: COPYING\n  summary: 'dlfcn-win32 is an implementation of dlfcn for Windows.'\n\nextra:\n  recipe-maintainers:\n    - seanyen\n    - traversaro\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub"
  ]
 },
 "url":"https://github.com/dlfcn-win32/dlfcn-win32/archive/v1.2.0.tar.gz",
 "version":"1.2.0"
}