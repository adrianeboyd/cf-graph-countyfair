{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/300296898.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/301811109.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/306276952.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/313078401.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 659, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 386, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 316, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/d/dpdata/dpdata-0.1.6.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"dpdata",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/deepmodeling/dpdata",
   "doc_url":"https://github.com/deepmodeling/dpdata",
   "home":"https://github.com/deepmodeling/dpdata",
   "license":"LGPL-3.0",
   "license_family":"LGPL",
   "license_file":"LICENSE",
   "summary":"Manipulating DeePMD-kit, VASP and LAMMPS data formats"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "njzjz",
    "njzjz",
    "njzjz"
   ]
  },
  "package":{
   "name":"dpdata",
   "version":"0.1.5"
  },
  "requirements":{
   "host":[
    "python >=3.5",
    "pip",
    "numpy >=1.14.3",
    "setuptools_scm",
    "python >=3.5",
    "pip",
    "numpy >=1.14.3",
    "setuptools_scm",
    "python >=3.5",
    "pip",
    "numpy >=1.14.3",
    "setuptools_scm"
   ],
   "run":[
    "python >=3.5",
    "compatible_pin_stub",
    "monty",
    "python >=3.5",
    "compatible_pin_stub",
    "monty",
    "python >=3.5",
    "compatible_pin_stub",
    "monty"
   ]
  },
  "source":{
   "sha256":"28c428d9a302edc6fa1738ba89df3dadcf1b39220d950e893254e797d2047615",
   "url":"https://pypi.io/packages/source/d/dpdata/dpdata-0.1.5.tar.gz"
  },
  "test":{
   "imports":[
    "dpdata",
    "dpdata",
    "dpdata"
   ]
  }
 },
 "name":"dpdata",
 "new_version":"0.1.6",
 "pinning_version":"2019.08.27",
 "raw_meta_yaml":"{% set name = \"dpdata\" %}\n{% set version = \"0.1.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 28c428d9a302edc6fa1738ba89df3dadcf1b39220d950e893254e797d2047615\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - python >=3.5\n    - pip\n    - numpy >=1.14.3\n    - setuptools_scm\n  run:\n    - python >=3.5\n    - {{ pin_compatible('numpy') }}\n    - monty\n\ntest:\n  imports:\n    - dpdata\n\nabout:\n  home: https://github.com/deepmodeling/dpdata\n  license: LGPL-3.0\n  license_family: LGPL\n  license_file: LICENSE\n  summary: 'Manipulating DeePMD-kit, VASP and LAMMPS data formats'\n  doc_url: https://github.com/deepmodeling/dpdata\n  dev_url: https://github.com/deepmodeling/dpdata\n\nextra:\n  recipe-maintainers:\n    - njzjz\n",
 "req":{
  "__set__":true,
  "elements":[
   "compatible_pin_stub",
   "monty",
   "numpy",
   "pip",
   "python",
   "setuptools_scm"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://pypi.io/packages/source/d/dpdata/dpdata-0.1.5.tar.gz",
 "version":"0.1.5"
}