{
 "bad":{
  "exception":"('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 265, in _read_status",
   "    raise RemoteDisconnected(\"Remote end closed connection without\"",
   "http.client.RemoteDisconnected: Remote end closed connection without response",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 734, in reraise",
   "    raise value.with_traceback(tb)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 265, in _read_status",
   "    raise RemoteDisconnected(\"Remote end closed connection without\"",
   "urllib3.exceptions.ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 455, in migrate",
   "    if isinstance(rendered['source'], dict) and isinstance(rendered['source'].get('url', []), str) and requests.get(rendered['source']['url']).status_code != 200:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/api.py\", line 75, in get",
   "    return request('get', url, params=params, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/api.py\", line 60, in request",
   "    return session.request(method=method, url=url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 668, in send",
   "    history = [resp for resp in gen] if allow_redirects else []",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 668, in <listcomp>",
   "    history = [resp for resp in gen] if allow_redirects else []",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 247, in resolve_redirects",
   "    **adapter_kwargs",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 498, in send",
   "    raise ConnectionError(err, request=request)",
   "requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"earthsim",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Python-based tools for specifying, launching, visualizing, and analyzing environmental simulations, such as those for hydrology modeling.\nEarthSim is designed as a lightweight \"overview\" site and project, relying on core code maintained in other general-purpose PyViz projects.\n",
   "dev_url":"https://github.com/pyviz/EarthSim",
   "doc_url":"https://pyviz.github.io/EarthSim/",
   "home":"https://github.com/pyviz/EarthSim",
   "license":"BSD 3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Tools for working with and visualizing environmental simulations."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "ocefpaf",
    "ocefpaf",
    "ocefpaf"
   ]
  },
  "package":{
   "name":"earthsim",
   "version":"1.0.1"
  },
  "requirements":{
   "build":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "sha256":"93594afbdd8569e2edd7873d603d341bc126c2cf05ca371f6250d49ba0e20df3",
   "url":"https://github.com/pyviz/EarthSim/archive/1.0.1.tar.gz"
  },
  "test":{
   "imports":[
    "earthsim",
    "earthsim",
    "earthsim"
   ]
  }
 },
 "name":"earthsim",
 "new_version":"1.1.1",
 "raw_meta_yaml":"{% set version = \"1.0.1\" %}\n\npackage:\n  name: earthsim\n  version: {{ version }}\n\nsource:\n  url: https://github.com/pyviz/EarthSim/archive/{{ version }}.tar.gz\n  sha256: 93594afbdd8569e2edd7873d603d341bc126c2cf05ca371f6250d49ba0e20df3\n\nbuild:\n  number: 0\n  noarch: python\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - earthsim\n\nabout:\n  home: https://github.com/pyviz/EarthSim\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Tools for working with and visualizing environmental simulations.'\n  description: |\n      Python-based tools for specifying, launching, visualizing, and analyzing environmental simulations, such as those for hydrology modeling.\n      EarthSim is designed as a lightweight \"overview\" site and project, relying on core code maintained in other general-purpose PyViz projects.\n  doc_url: https://pyviz.github.io/EarthSim/\n  dev_url: https://github.com/pyviz/EarthSim\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python"
  ]
 },
 "time":1568135289.899258,
 "url":"https://github.com/pyviz/EarthSim/archive/1.0.1.tar.gz",
 "version":"1.0.1"
}