{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"edit_distance",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Python module for computing edit distances and alignments between sequences.\nI needed a way to compute edit distances between sequences in Python. I\nwasn't able to find any appropriate libraries that do this so I wrote my\nown. There appear to be numerous edit distance libraries available for\ncomputing edit distances between two strings, but not between two sequences.\nThis is written entirely in Python. This implementation could likely be\noptimized to be faster within Python. And could probably be much faster if\nimplemented in C.\nThe library API is modeled after difflib.SequenceMatcher. This is very\nsimilar to difflib, except that this module computes edit distance\n(Levenshtein distance) rather than the Ratcliff and Oberhelp method\nthat Python's difflib uses.\n",
   "dev_url":"https://github.com/belambert/edit-distance",
   "doc_url":"http://edit-distance.readthedocs.io/en/latest/",
   "home":"https://github.com/belambert/editdistance",
   "license":"BSD-2-Clause",
   "license_family":"BSD",
   "license_file":"/LICENSE.txt",
   "summary":"Computing edit distance on arbitrary Python sequences."
  },
  "build":{
   "entry_points":[
    "edit-distance = edit_distance.code:main",
    "edit-distance = edit_distance.code:main",
    "edit-distance = edit_distance.code:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package":{
   "name":"edit_distance",
   "version":"1.0.3"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "sha256":"0903d0baabee61f97254f483447928a97e6d84eae19b0224eecf31433e6f8b42",
   "url":"https://pypi.io/packages/source/e/edit_distance/edit_distance-1.0.3.tar.gz"
  },
  "test":{
   "commands":[
    "edit-distance %RECIPE_DIR%/meta.yaml %RECIPE_DIR%/meta.yaml",
    "edit-distance ${RECIPE_DIR}/meta.yaml ${RECIPE_DIR}/meta.yaml",
    "edit-distance ${RECIPE_DIR}/meta.yaml ${RECIPE_DIR}/meta.yaml"
   ],
   "imports":[
    "edit_distance",
    "edit_distance",
    "edit_distance"
   ]
  }
 },
 "name":"edit_distance",
 "new_version":"1.0.3",
 "pinning_version":"2018.10.16",
 "raw_meta_yaml":"{% set name = \"edit_distance\" %}\n{% set version = \"1.0.3\" %}\n{% set sha256 = \"0903d0baabee61f97254f483447928a97e6d84eae19b0224eecf31433e6f8b42\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - edit-distance = edit_distance.code:main\n  script: python -m pip install --no-deps --ignore-installed . \n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - edit_distance\n  commands:\n    - edit-distance ${RECIPE_DIR}/meta.yaml ${RECIPE_DIR}/meta.yaml  # [not win]\n    - edit-distance %RECIPE_DIR%/meta.yaml %RECIPE_DIR%/meta.yaml  # [win]\n\nabout:\n  home: https://github.com/belambert/editdistance\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE.txt'\n  summary: Computing edit distance on arbitrary Python sequences.\n  description: |\n    Python module for computing edit distances and alignments between sequences.\n    I needed a way to compute edit distances between sequences in Python. I \n    wasn't able to find any appropriate libraries that do this so I wrote my \n    own. There appear to be numerous edit distance libraries available for \n    computing edit distances between two strings, but not between two sequences.\n    This is written entirely in Python. This implementation could likely be \n    optimized to be faster within Python. And could probably be much faster if\n    implemented in C. \n    The library API is modeled after difflib.SequenceMatcher. This is very \n    similar to difflib, except that this module computes edit distance \n    (Levenshtein distance) rather than the Ratcliff and Oberhelp method \n    that Python's difflib uses.\n  doc_url: http://edit-distance.readthedocs.io/en/latest/\n  dev_url: https://github.com/belambert/edit-distance\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568050641.1361818,
 "url":"https://pypi.io/packages/source/e/edit_distance/edit_distance-1.0.3.tar.gz",
 "version":"1.0.3"
}