{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/301712997.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"graphviz-2.40"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 1322, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 303, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 264, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/socket.py\", line 669, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 439, in send",
   "    resp = conn.urlopen(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 719, in urlopen",
   "    retries = retries.increment(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 665, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 330, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 659, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 120, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 119, in get_repo",
   "    fork_repo = gh.repository(ctx.github_username, feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"elfi",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"ELFI is a statistical software package written in Python for likelihood-free\ninference (LFI) such as Approximate Bayesian Computation (ABC).\n",
   "dev_url":"https://github.com/elfi-dev/elfi",
   "home":"http://www.elfi.ai/",
   "license":"BSD-3",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"ELFI - Engine for Likelihood-Free Inference"
  },
  "build":{
   "noarch":"python",
   "number":"1",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "johnlees",
    "hpesonen",
    "johnlees",
    "hpesonen",
    "johnlees",
    "hpesonen"
   ]
  },
  "package":{
   "name":"elfi",
   "version":"0.7.4"
  },
  "requirements":{
   "host":[
    "python >=3",
    "pip",
    "python >=3",
    "pip",
    "python >=3",
    "pip"
   ],
   "run":[
    "python >=3",
    "numpy",
    "scipy >=0.19",
    "matplotlib",
    "GPy",
    "networkX >=1.11,<2.0",
    "ipyparallel",
    "toolz",
    "scikit-learn",
    "graphviz",
    "python >=3",
    "numpy",
    "scipy >=0.19",
    "matplotlib",
    "GPy",
    "networkX >=1.11,<2.0",
    "ipyparallel",
    "toolz",
    "scikit-learn",
    "graphviz",
    "python >=3",
    "numpy",
    "scipy >=0.19",
    "matplotlib",
    "GPy",
    "networkX >=1.11,<2.0",
    "ipyparallel",
    "toolz",
    "scikit-learn",
    "graphviz"
   ]
  },
  "source":{
   "sha256":"b930870a3e904bef88709ecd65545a2b030962a554324b21dc6aeb5ae9473a99",
   "url":"https://github.com/elfi-dev/elfi/archive/v0.7.4.tar.gz"
  },
  "test":{
   "imports":[
    "elfi",
    "elfi",
    "elfi"
   ]
  }
 },
 "name":"elfi",
 "new_version":"0.7.5",
 "pinning_version":"2019.07.26",
 "raw_meta_yaml":"{% set name = \"elfi\" %}\n{% set version = \"0.7.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/elfi-dev/{{ name|lower }}/archive/v{{ version }}.tar.gz\n  sha256: b930870a3e904bef88709ecd65545a2b030962a554324b21dc6aeb5ae9473a99\n\nbuild:\n  number: 1\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n\n  run:\n    - python >=3\n    - numpy\n    - scipy >=0.19\n    - matplotlib\n    - GPy\n    - networkX >=1.11,<2.0\n    - ipyparallel\n    - toolz\n    - scikit-learn\n    - graphviz\n\ntest:\n  imports:\n    - elfi\n\nabout:\n  home: http://www.elfi.ai/\n  license: BSD-3\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'ELFI - Engine for Likelihood-Free Inference'\n  description: |\n    ELFI is a statistical software package written in Python for likelihood-free\n    inference (LFI) such as Approximate Bayesian Computation (ABC).\n  dev_url: https://github.com/elfi-dev/elfi\n\nextra:\n  recipe-maintainers:\n    - johnlees\n    - hpesonen\n",
 "req":{
  "__set__":true,
  "elements":[
   "gpy",
   "graphviz",
   "ipyparallel",
   "matplotlib",
   "networkx",
   "numpy",
   "pip",
   "python",
   "scikit-learn",
   "scipy",
   "toolz"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://github.com/elfi-dev/elfi/archive/v0.7.4.tar.gz",
 "version":"0.7.4"
}