{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 686, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 147, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 224, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 103, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/e/email_validator/email_validator-1.0.5.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"email_validator",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/JoshData/python-email-validator",
   "doc_url":"https://github.com/JoshData/python-email-validator",
   "home":"https://github.com/JoshData/python-email-validator",
   "license":"CC0",
   "license_family":"OTHER",
   "license_file":"LICENSE",
   "summary":"A robust email syntax and deliverability validation library for Python 2.x/3.x."
  },
  "build":{
   "entry_points":[
    "email_validator = email_validator:main",
    "email_validator = email_validator:main",
    "email_validator = email_validator:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":"python setup.py install --single-version-externally-managed --record=record.txt"
  },
  "extra":{
   "recipe-maintainers":[
    "pmlandwehr",
    "pmlandwehr",
    "pmlandwehr"
   ]
  },
  "package":{
   "name":"email_validator",
   "version":"1.0.2"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "idna >=2.0.0",
    "dnspython >=1.15.0",
    "python",
    "idna >=2.0.0",
    "dnspython >=1.15.0",
    "python",
    "idna >=2.0.0",
    "dnspython >=1.15.0"
   ]
  },
  "source":{
   "fn":"email_validator-1.0.2.tar.gz",
   "sha256":"669eaae98d86dbd0ab62ab2f5fbc95d01cb28f8e038aa30ab165b244130949c9",
   "url":"https://pypi.io/packages/source/e/email_validator/email_validator-1.0.2.tar.gz"
  },
  "test":{
   "commands":[
    "email_validator --help",
    "email_validator --help",
    "email_validator --help"
   ],
   "imports":[
    "email_validator",
    "email_validator",
    "email_validator"
   ]
  }
 },
 "name":"email_validator",
 "new_version":"1.0.5",
 "raw_meta_yaml":"{% set name = \"email_validator\" %}\n{% set version = \"1.0.2\" %}\n{% set bundle = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash = \"669eaae98d86dbd0ab62ab2f5fbc95d01cb28f8e038aa30ab165b244130949c9\" %}\n{% set build = 0 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ bundle }}\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ bundle }}\n  {{ hash_type }}: {{ hash }}\n\nbuild:\n  noarch: python\n  number: {{ build }}\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n\n  entry_points:\n    - email_validator = email_validator:main\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - idna >=2.0.0\n    - dnspython >=1.15.0\n\ntest:\n  imports:\n    - email_validator\n\n  commands:\n    - email_validator --help\n\nabout:\n  home: https://github.com/JoshData/python-email-validator\n  license_file: LICENSE\n  license: CC0\n  license_family: OTHER\n  summary: 'A robust email syntax and deliverability validation library for Python 2.x/3.x.'\n  dev_url: https://github.com/JoshData/python-email-validator\n  doc_url: https://github.com/JoshData/python-email-validator\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n",
 "req":{
  "__set__":true,
  "elements":[
   "dnspython",
   "idna",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "dnspython",
    "idna",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "time":1568135288.5307305,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "dnspython >=1.15.0",
    "idna >=2.0.0",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/e/email_validator/email_validator-1.0.2.tar.gz",
 "version":"1.0.2"
}