{
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/raphaelvallat/entropy/zip/0.1.1"
 },
 "conda-forge.yml":{},
 "feedstock_name":"entropy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/raphaelvallat/entropy/",
   "doc_url":"https://raphaelvallat.com/entropy/build/html/index.html",
   "home":"https://raphaelvallat.com/entropy/build/html/index.html",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"EntroPy: EntroPy is a Python 3 package providing several time-efficient algorithms for computing the complexity of one-dimensional time series. It can be used for example to extract features from EEG signals."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra":{
   "recipe-maintainers":[
    "PackageCondaDataScience",
    "PackageCondaDataScience",
    "PackageCondaDataScience"
   ]
  },
  "package":{
   "name":"entropy",
   "version":"0.1.0"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "numba",
    "pip",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "numba",
    "pip",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "numba"
   ],
   "run":[
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "numba",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "numba",
    "python",
    "numpy",
    "scipy",
    "scikit-learn",
    "numba"
   ]
  },
  "source":{
   "sha256":"9ed51ccd294115890d62616843f21492abfb196104b70110a248ee4ef5a92980",
   "url":"https://github.com/raphaelvallat/entropy/archive/0.1.0.tar.gz"
  },
  "test":{
   "imports":[
    "entropy",
    "entropy",
    "entropy"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name":"entropy",
 "new_version":"0.1.1",
 "raw_meta_yaml":"{% set name = \"entropy\" %}\n{% set version = \"0.1.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://github.com/raphaelvallat/{{ name|lower }}/archive/{{ version }}.tar.gz\n  sha256: 9ed51ccd294115890d62616843f21492abfb196104b70110a248ee4ef5a92980\n       \nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n  \nrequirements:\n  host:\n    - pip\n    - python\n    - numpy\n    - scipy\n    - scikit-learn\n    - numba\n\n  run:\n    - python\n    - numpy\n    - scipy\n    - scikit-learn\n    - numba\n\ntest:\n  imports:\n    - {{ name|lower }}\n  requires:\n    - pytest\n\nabout:\n  home: https://raphaelvallat.com/entropy/build/html/index.html\n  license: \"BSD-3-Clause\"\n  license_family: \"BSD\"\n  license_file: \"LICENSE\"\n  summary: \"EntroPy: EntroPy is a Python 3 package providing several time-efficient algorithms for computing the complexity of one-dimensional time series. It can be used for example to extract features from EEG signals.\"\n  doc_url: \"https://raphaelvallat.com/entropy/build/html/index.html\"\n  dev_url: \"https://github.com/raphaelvallat/entropy/\"\n\nextra:\n  recipe-maintainers:\n    - PackageCondaDataScience\n",
 "req":{
  "__set__":true,
  "elements":[
   "numba",
   "numpy",
   "pip",
   "python",
   "scikit-learn",
   "scipy"
  ]
 },
 "url":"https://github.com/raphaelvallat/entropy/archive/0.1.0.tar.gz",
 "version":"0.1.0"
}