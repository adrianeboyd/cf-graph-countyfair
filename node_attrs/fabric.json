{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/225191543.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 579, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 97, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/F/Fabric/Fabric-2.5.0.tar.gz"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"fabric",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/fabric/fabric/",
   "doc_url":"http://docs.fabfile.org/",
   "home":"http://fabfile.org",
   "license":"BSD 2-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Fabric is a simple, Pythonic tool for remote execution and deployment."
  },
  "build":{
   "entry_points":[
    "fab = fabric.main:main",
    "fab = fabric.main:main",
    "fab = fabric.main:main"
   ],
   "number":"1000",
   "script":"python setup.py install --single-version-externally-managed --record=record.txt",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "pmlandwehr",
    "pmlandwehr",
    "pmlandwehr"
   ]
  },
  "package":{
   "name":"fabric",
   "version":"1.14.0"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "paramiko >=1.10,<3.0",
    "python",
    "paramiko >=1.10,<3.0",
    "python",
    "paramiko >=1.10,<3.0"
   ]
  },
  "source":{
   "fn":"Fabric-1.14.0.tar.gz",
   "sha256":"81572002a562b26df657ca10d06b5bcfc6fd56b53374037392c83d4a2158208f",
   "url":"https://pypi.io/packages/source/F/Fabric/Fabric-1.14.0.tar.gz"
  },
  "test":{
   "commands":[
    "fab --help",
    "fab --help",
    "fab --help"
   ],
   "imports":[
    "fabric",
    "fabric.contrib",
    "fabric",
    "fabric.contrib",
    "fabric",
    "fabric.contrib"
   ]
  }
 },
 "name":"fabric",
 "new_version":"2.5.0",
 "pinning_version":"2018.10.16",
 "raw_meta_yaml":"{% set name = \"Fabric\" %}\n{% set version = \"1.14.0\" %}\n{% set bundle = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash = \"81572002a562b26df657ca10d06b5bcfc6fd56b53374037392c83d4a2158208f\" %}\n{% set build = 1000 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ bundle }}\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ bundle }}\n  {{ hash_type }}: {{ hash }}\n\nbuild:\n  skip: True  # [py3k]\n  entry_points:\n    - fab = fabric.main:main\n  number: {{ build }}\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - paramiko >=1.10,<3.0\n\ntest:\n  imports:\n    - fabric\n    - fabric.contrib\n\n  commands:\n    - fab --help\n\nabout:\n  home: http://fabfile.org\n  license_file: LICENSE\n  license: BSD 2-Clause\n  license_family: BSD\n  summary: 'Fabric is a simple, Pythonic tool for remote execution and deployment.'\n  dev_url: https://github.com/fabric/fabric/\n  doc_url: http://docs.fabfile.org/\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n",
 "req":{
  "__set__":true,
  "elements":[
   "paramiko",
   "python",
   "setuptools"
  ]
 },
 "smithy_version":"3.1.12",
 "url":"https://pypi.io/packages/source/F/Fabric/Fabric-1.14.0.tar.gz",
 "version":"1.14.0"
}