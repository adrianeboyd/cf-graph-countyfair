{
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 257, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 675, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 83, in run",
   "    gh=gh)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.xsh\", line 105, in get_repo",
   "    repo = gh.repository('conda-forge', feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"ffpyplayer",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"FFPyPlayer is a python binding for the FFmpeg library for playing and writing\nmedia files.\n",
   "dev_url":"https://github.com/matham/ffpyplayer",
   "doc_url":"http://matham.github.io/ffpyplayer/index.html",
   "home":"https://github.com/matham/ffpyplayer",
   "license":"LGPL-3.0",
   "license_family":"LGPL",
   "license_file":"COPYING",
   "summary":"A cython implementation of ffmpeg based player, ffplay"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "matham",
    "matham",
    "matham"
   ]
  },
  "package":{
   "name":"ffpyplayer",
   "version":"4.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "nose",
    "cython",
    "sdl2",
    "sdl2_mixer",
    "ffmpeg",
    "libflac",
    "libvorbis",
    "pkgconfig",
    "msinttypes",
    "python",
    "pip",
    "nose",
    "cython",
    "sdl2",
    "sdl2_mixer",
    "ffmpeg",
    "pkgconfig",
    "python",
    "pip",
    "nose",
    "cython",
    "sdl2",
    "sdl2_mixer",
    "ffmpeg",
    "pkgconfig"
   ],
   "run":[
    "python",
    "sdl2",
    "sdl2_mixer",
    "ffmpeg",
    "libflac",
    "libvorbis",
    "python",
    "sdl2",
    "sdl2_mixer",
    "ffmpeg",
    "python",
    "sdl2",
    "sdl2_mixer",
    "ffmpeg"
   ]
  },
  "source":{
   "sha256":"1cd14cdf8299ddba4e41b1c28c90b777905b62ad512f8ad81f45b0c60bd4a6e8",
   "url":"https://github.com/matham/ffpyplayer/archive/v4.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "nosetests ffpyplayer/tests",
    "python -c \"import ffpyplayer\"",
    "nosetests ffpyplayer/tests",
    "python -c \"import ffpyplayer\"",
    "nosetests ffpyplayer/tests",
    "python -c \"import ffpyplayer\""
   ],
   "imports":[
    "ffpyplayer.player",
    "ffpyplayer.player",
    "ffpyplayer.player"
   ],
   "requires":[
    "nose",
    "nose",
    "nose"
   ],
   "source_files":[
    "examples",
    "ffpyplayer/tests/test_pic.py",
    "ffpyplayer/tests/test_write.py",
    "examples",
    "ffpyplayer/tests/test_pic.py",
    "ffpyplayer/tests/test_write.py",
    "examples",
    "ffpyplayer/tests/test_pic.py",
    "ffpyplayer/tests/test_write.py"
   ]
  }
 },
 "name":"ffpyplayer",
 "new_version":"4.2.0",
 "raw_meta_yaml":"{% set name = \"ffpyplayer\" %}\n{% set version = \"4.1.0\" %}\n{% set sha256 = \"1cd14cdf8299ddba4e41b1c28c90b777905b62ad512f8ad81f45b0c60bd4a6e8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/matham/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: True  # [py < 27 or win and py < 35]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - nose\n    - cython\n    - sdl2\n    - sdl2_mixer\n    - ffmpeg\n    - libflac  # [win]\n    - libvorbis  # [win]\n    - pkgconfig\n    - msinttypes  # [win]\n  run:\n    - python\n    - sdl2\n    - sdl2_mixer\n    - ffmpeg\n    - libflac  # [win]\n    - libvorbis  # [win]\n\ntest:\n  imports:\n    - ffpyplayer.player\n  commands:\n    - nosetests ffpyplayer/tests\n    - python -c \"import ffpyplayer\"\n  requires:\n    - nose\n  source_files:\n    - examples\n    - ffpyplayer/tests/test_pic.py\n    - ffpyplayer/tests/test_write.py\n\nabout:\n  home: https://github.com/matham/ffpyplayer\n  license: LGPL-3.0\n  license_family: LGPL\n  license_file: COPYING\n  summary: 'A cython implementation of ffmpeg based player, ffplay'\n\n  description: |\n    FFPyPlayer is a python binding for the FFmpeg library for playing and writing\n    media files.\n  doc_url: http://matham.github.io/ffpyplayer/index.html\n  dev_url: https://github.com/matham/ffpyplayer\n\nextra:\n  recipe-maintainers:\n    - matham\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "ffmpeg",
   "libflac",
   "libvorbis",
   "msinttypes",
   "nose",
   "pip",
   "pkgconfig",
   "python",
   "sdl2",
   "sdl2_mixer"
  ]
 },
 "time":1568135293.5748584,
 "url":"https://github.com/matham/ffpyplayer/archive/v4.1.0.tar.gz",
 "version":"4.1.0"
}