{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/310918737.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"flake8-black",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Black, \"The Uncompromising Code Formatter\", is normally run to edit your\nPython code in place to match their coding style, a strict subset of the\nPEP 8 style guide. The point of this plugin is to be able to run\nblack --check ... from within the flake8 plugin ecosystem. You might use\nthis via a git pre-commit hook, or as part of your continuous integration\ntesting.\n",
   "dev_url":"https://github.com/peterjc/flake8-black",
   "home":"https://github.com/peterjc/flake8-black",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.rst",
   "summary":"Extension for flake8 for validating Python code style using black"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "peterjc",
    "peterjc",
    "peterjc"
   ]
  },
  "package":{
   "name":"flake8-black",
   "version":"0.1.0"
  },
  "requirements":{
   "build":[
    "python >=3.6",
    "pip",
    "python >=3.6",
    "pip",
    "python >=3.6",
    "pip"
   ],
   "run":[
    "python",
    "flake8 >=3",
    "black",
    "python",
    "flake8 >=3",
    "black",
    "python",
    "flake8 >=3",
    "black"
   ]
  },
  "source":{
   "fn":"flake8-black-0.1.0.tar.gz",
   "sha256":"6b5fe2a609fa750170da8d5b1ed7c11029bceaff025660be7f19307ec6fa0c35",
   "url":"https://pypi.io/packages/source/f/flake8-black/flake8-black-0.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "flake8 --version | grep black:",
    "flake8 --version | grep black:",
    "flake8 --version | grep black:"
   ]
  }
 },
 "name":"flake8-black",
 "new_version":"0.1.1",
 "pinning_version":"2019.08.22",
 "raw_meta_yaml":"{% set name = \"flake8-black\" %}\n{% set version = \"0.1.0\" %}\n{% set sha256 = \"6b5fe2a609fa750170da8d5b1ed7c11029bceaff025660be7f19307ec6fa0c35\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python >=3.6\n    - pip\n  run:\n    - python\n    - flake8 >=3\n    - black\n\ntest:\n  commands:\n    - \"flake8 --version | grep black:\"\n\nabout:\n  home: https://github.com/peterjc/flake8-black\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.rst\n  summary: 'Extension for flake8 for validating Python code style using black'\n  dev_url: https://github.com/peterjc/flake8-black\n  description: |\n    Black, \"The Uncompromising Code Formatter\", is normally run to edit your\n    Python code in place to match their coding style, a strict subset of the\n    PEP 8 style guide. The point of this plugin is to be able to run\n    black --check ... from within the flake8 plugin ecosystem. You might use\n    this via a git pre-commit hook, or as part of your continuous integration\n    testing.\n\nextra:\n  recipe-maintainers:\n    - peterjc\n",
 "req":{
  "__set__":true,
  "elements":[
   "black",
   "flake8",
   "pip",
   "python"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://pypi.io/packages/source/f/flake8-black/flake8-black-0.1.0.tar.gz",
 "version":"0.1.0"
}