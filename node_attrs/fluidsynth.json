{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/233384857.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"HTTP Error 404: Not Found",
  "traceback":"Traceback (most recent call last):\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 578, in main\n    hash_type=attrs.get('hash_type', 'sha256'))\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 96, in run\n    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate\n    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns\n    hash = hash_url(url, hash_type)\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url\n    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress\n    with urllib.request.urlopen(url) as f:\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen\n    return opener.open(url, data, timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error\n    result = self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302\n    return self.parent.open(new, timeout=req.timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error\n    return self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\nurllib.error.HTTPError: HTTP Error 404: Not Found\n"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"fluidsynth",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Real-time software synthesizer based on the SoundFont 2 specs.\n",
   "dev_url":"http://www.fluidsynth.org/api/",
   "doc_url":"https://github.com/FluidSynth/fluidsynth/wiki/",
   "home":"http://www.fluidsynth.org",
   "license":"LGPL-2.1",
   "license_family":"LGPL",
   "license_file":"LICENSE.txt",
   "summary":"Real-time software synthesizer based on the SoundFont 2 specs"
  },
  "build":{
   "number":"1000",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "stefan-balke",
    "stefan-balke",
    "stefan-balke"
   ]
  },
  "package":{
   "name":"fluidsynth",
   "version":"v1.1.11"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cmake",
    "pkg-config",
    "c_compiler_stub",
    "cmake",
    "pkg-config",
    "c_compiler_stub",
    "cmake",
    "pkg-config"
   ],
   "host":[
    "glib",
    "libsndfile",
    "glib",
    "libsndfile",
    "glib",
    "libsndfile"
   ],
   "run":[
    "glib",
    "libsndfile",
    "glib",
    "libsndfile",
    "glib",
    "libsndfile"
   ]
  },
  "source":{
   "sha256":"da8878ff374d12392eecf87e96bad8711b8e76a154c25a571dd8614d1af80de8",
   "url":"https://github.com/FluidSynth/fluidsynth/archive/v1.1.11.tar.gz"
  },
  "test":{
   "commands":[
    "fluidsynth --help",
    "fluidsynth --help",
    "fluidsynth --help"
   ]
  }
 },
 "name":"fluidsynth",
 "new_version":false,
 "pinning_version":"2018.11.24",
 "raw_meta_yaml":"# Using the name variable with the URL in line 13 is conviniet\n# when copying and pasting from another recipe, but not really needed.\n{% set name = \"fluidsynth\" %}\n{% set version = \"v1.1.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/FluidSynth/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: da8878ff374d12392eecf87e96bad8711b8e76a154c25a571dd8614d1af80de8\n\nbuild:\n  number: 1000\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake\n    - pkg-config\n  host:\n    - glib\n    - libsndfile\n  run:\n    - glib\n    - libsndfile\n\ntest:\n  commands:\n    - fluidsynth --help\n\nabout:\n  home: http://www.fluidsynth.org\n  license: LGPL-2.1\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: 'Real-time software synthesizer based on the SoundFont 2 specs'\n\n  description: |\n    Real-time software synthesizer based on the SoundFont 2 specs.\n  doc_url: https://github.com/FluidSynth/fluidsynth/wiki/\n  dev_url: http://www.fluidsynth.org/api/\n\nextra:\n  recipe-maintainers:\n    - stefan-balke\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "glib",
   "libsndfile",
   "pkg-config"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568072503.8980825,
 "url":"https://github.com/FluidSynth/fluidsynth/archive/v1.1.11.tar.gz",
 "version":"v1.1.11"
}