{
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 674, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 139, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/Dobiasd/FunctionalPlus/tar.gz/v0.2.6-p0-p0"
 },
 "conda-forge.yml":{},
 "feedstock_name":"functionalplus",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"FunctionalPlus helps you write concise and readable C++ code.",
   "dev_url":"https://github.com/Dobiasd/FunctionalPlus",
   "doc_url":"http://www.editgym.com/fplus-api-search",
   "home":"https://github.com/Dobiasd/FunctionalPlus",
   "license":"BSL-1.0",
   "license_file":"LICENSE",
   "summary":"Functional Programming Library for C++. Write concise and readable C++ code."
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "Dobiasd",
    "Dobiasd",
    "Dobiasd"
   ]
  },
  "package":{
   "name":"functionalplus",
   "version":"0.2.5"
  },
  "requirements":{
   "build":[
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "source":{
   "sha256":"6819c34e2666d617d67fe46f74477fe1cdd9e18794cddb286a4c6ff250f7c67b",
   "url":"https://github.com/Dobiasd/FunctionalPlus/archive/v0.2.5-p0.tar.gz"
  },
  "test":{
   "commands":[
    "if exist %LIBRARY_PREFIX%\\include\\fplus\\fplus.hpp (exit 0) else (exit 1)",
    "test -f ${PREFIX}/include/fplus/fplus.hpp",
    "test -f ${PREFIX}/include/fplus/fplus.hpp"
   ]
  }
 },
 "name":"functionalplus",
 "new_version":"0.2.6-p0",
 "raw_meta_yaml":"{% set name = \"FunctionalPlus\" %}\n{% set version = \"0.2.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Dobiasd/FunctionalPlus/archive/v{{ version }}-p0.tar.gz\n  sha256: 6819c34e2666d617d67fe46f74477fe1cdd9e18794cddb286a4c6ff250f7c67b\n\nbuild:\n  number: 0\n  skip: True  # [win and vc<14]\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/fplus/fplus.hpp  # [unix]\n    - if exist %LIBRARY_PREFIX%\\include\\fplus\\fplus.hpp (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/Dobiasd/FunctionalPlus\n  license: BSL-1.0\n  license_file: LICENSE\n  summary: 'Functional Programming Library for C++. Write concise and readable C++ code.'\n  description: 'FunctionalPlus helps you write concise and readable C++ code.'\n  doc_url: http://www.editgym.com/fplus-api-search\n  dev_url: https://github.com/Dobiasd/FunctionalPlus\n\nextra:\n  recipe-maintainers:\n    - Dobiasd\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "make"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/Dobiasd/FunctionalPlus/archive/v0.2.4-p0.tar.gz",
 "version":"0.2.5"
}