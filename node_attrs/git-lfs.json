{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216085848.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.5.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/227788054.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/235594604.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/256416048.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/272846731.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/300417988.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/329396887.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://github.com/git-lfs/git-lfs/releases/download/v2.9.1/git-lfs-linux-amd64-v2.9.1.zip"
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"git-lfs",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://git-lfs.github.com/",
   "license":"MIT",
   "license_file":"/LICENSE.md",
   "summary":"An open source Git extension for versioning large files"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "dfroger",
    "willirath",
    "dbast",
    "dfroger",
    "willirath",
    "dbast",
    "dfroger",
    "willirath",
    "dbast"
   ]
  },
  "package":{
   "name":"git-lfs",
   "version":"2.9.0"
  },
  "requirements":{
   "build":[
    "git"
   ]
  },
  "source":{
   "fn":"git-lfs-linux-amd64-2.9.0.tar.gz",
   "sha256":"afe269af8c60f2f36f9c9203dd0af279f0b8f74e1a36493330b82d99adc05ddc",
   "url":"https://github.com/git-lfs/git-lfs/releases/download/v2.9.0/git-lfs-linux-amd64-v2.9.0.tar.gz"
  },
  "test":{
   "commands":[
    "git-lfs --help",
    "git-lfs --help",
    "git-lfs --help"
   ]
  }
 },
 "name":"git-lfs",
 "new_version":"2.9.1",
 "pinning_version":"2019.10.11",
 "raw_meta_yaml":"{% set version = \"2.9.0\" %}\n{% set download_url = \"https://github.com/git-lfs/git-lfs/releases/download\" %}\n\npackage:\n  name: git-lfs\n  version: {{ version }}\n\nsource:\n  url: {{ download_url }}/v{{ version }}/git-lfs-linux-amd64-v{{ version }}.tar.gz  # [linux]\n  fn: git-lfs-linux-amd64-{{ version }}.tar.gz  # [linux]\n  sha256: afe269af8c60f2f36f9c9203dd0af279f0b8f74e1a36493330b82d99adc05ddc  # [linux]\n\n  url: {{ download_url }}/v{{ version }}/git-lfs-darwin-amd64-v{{ version }}.tar.gz  # [osx]\n  fn: git-lfs-darwin-amd64-{{ version }}.tar.gz  # [osx]\n  sha256: aa581bc8de80d3f9c7ebc1b08c472437df0c0ad118a4cdc84a5be29dbf49e6e4  # [osx]\n\n  url: {{ download_url }}/v{{ version }}/git-lfs-windows-amd64-v{{ version }}.zip  # [win]\n  fn: git-lfs-windows-amd64-{{ version }}.zip  # [win]\n  sha256: b6748daf645335b9316ea6356ee4c48262d1da196424d51d17c4dbbf9ef46e75  # [win]\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - git               # [unix]\n\ntest:\n  commands:\n    - git-lfs --help\n\nabout:\n  home: https://git-lfs.github.com/\n  license: MIT\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE.md'\n  summary: An open source Git extension for versioning large files\n\nextra:\n  recipe-maintainers:\n    - dfroger\n    - willirath\n    - dbast\n",
 "req":{
  "__set__":true,
  "elements":[
   "git"
  ]
 },
 "smithy_version":"3.6.0",
 "url":"https://github.com/git-lfs/git-lfs/releases/download/v2.8.0/git-lfs-linux-amd64-v2.8.0.tar.gz",
 "version":"2.9.0"
}