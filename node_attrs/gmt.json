{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/234918952.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/262395469.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"BlasRebuild",
    "migrator_version":0,
    "name":"blas2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/286293775.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/306325307.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"gdal-3.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/331680926.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libnetcdf-4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353625615.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libnetcdf473"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/396010199.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"libnetcdf474"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/2bfd75c7-7662-4967-817b-1c8db297bf39.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived":false,
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 267, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 725, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 403, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 428, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 543, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 824, in main",
   "    or mctx.gh.rate_limit()[\"resources\"][\"core\"][\"remaining\"] == 0",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1867, in rate_limit",
   "    return self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"gmt",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"GMT is an open source collection of about 80 command-line tools for\nmanipulating geographic and Cartesian data sets (including filtering,\ntrend fitting, gridding, projecting, etc.) and producing PostScript\nillustrations ranging from simple x\u2013y plots via contour maps to\nartificially illuminated surfaces and 3D perspective views; the GMT\nsupplements add another 40 more specialized and discipline-specific\ntools. GMT supports over 30 map projections and transformations\n",
   "home":"https://www.generic-mapping-tools.org",
   "license":"LGPL-3.0",
   "license_file":"LICENSE.TXT",
   "summary":"The Generic Mapping Tools."
  },
  "build":{
   "number":"4",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "ocefpaf",
    "leouieda",
    "seisman",
    "ocefpaf",
    "leouieda",
    "seisman",
    "ocefpaf",
    "leouieda",
    "seisman"
   ]
  },
  "package":{
   "name":"gmt",
   "version":"6.0.0"
  },
  "requirements":{
   "build":[
    "cmake",
    "c_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cmake",
    "c_compiler_stub"
   ],
   "host":[
    "libblas",
    "libcblas",
    "liblapack",
    "fftw",
    "gdal",
    "ghostscript",
    "libnetcdf",
    "hdf5",
    "zlib",
    "curl",
    "pcre",
    "gshhg-gmt",
    "dcw-gmt",
    "libblas",
    "libcblas",
    "liblapack",
    "fftw",
    "gdal",
    "ghostscript",
    "libnetcdf",
    "hdf5",
    "zlib",
    "curl",
    "pcre",
    "gshhg-gmt",
    "dcw-gmt",
    "libblas",
    "libcblas",
    "liblapack",
    "fftw",
    "gdal",
    "ghostscript",
    "libnetcdf",
    "hdf5",
    "zlib",
    "curl",
    "pcre",
    "gshhg-gmt",
    "dcw-gmt"
   ],
   "run":[
    "libblas",
    "libcblas",
    "liblapack",
    "fftw",
    "gdal",
    "ghostscript",
    "libnetcdf",
    "hdf5",
    "zlib",
    "curl",
    "pcre",
    "ffmpeg",
    "graphicsmagick",
    "libblas",
    "libcblas",
    "liblapack",
    "fftw",
    "gdal",
    "ghostscript",
    "libnetcdf",
    "hdf5",
    "zlib",
    "curl",
    "pcre",
    "gshhg-gmt",
    "dcw-gmt",
    "ffmpeg",
    "graphicsmagick",
    "libblas",
    "libcblas",
    "liblapack",
    "fftw",
    "gdal",
    "ghostscript",
    "libnetcdf",
    "hdf5",
    "zlib",
    "curl",
    "pcre",
    "gshhg-gmt",
    "dcw-gmt",
    "ffmpeg",
    "graphicsmagick"
   ]
  },
  "source":{
   "patches":[
    "gmt-6.0.0-patch0.patch",
    "gmt-6.0.0-patch0.patch",
    "gmt-6.0.0-patch0.patch"
   ],
   "sha256":"8a0f659274a2ace8c3c572c58fe533b5c31403f1631a46bec3f93dbfcbaf78e1",
   "url":"https://github.com/GenericMappingTools/gmt/releases/download/6.0.0/gmt-6.0.0-src.tar.gz"
  },
  "test":{
   "commands":[
    "gmt defaults -Vd",
    "gmt psbasemap -R10/70/-3/8 -JX4i/3i -Ba -B+glightred+t\"TEST\" -P -Vd > test0.ps",
    "gmt pscoast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -P -Vd > test1.ps",
    "gmt begin -Vd",
    "gmt coast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -Vd",
    "gmt end",
    "gmt defaults -Vd",
    "gmt psbasemap -R10/70/-3/8 -JX4i/3i -Ba -B+glightred+t\"TEST\" -P -Vd > test0.ps",
    "gmt pscoast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -P -Vd > test1.ps",
    "gmt begin -Vd",
    "gmt coast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -Vd",
    "gmt end",
    "gmt defaults -Vd",
    "gmt psbasemap -R10/70/-3/8 -JX4i/3i -Ba -B+glightred+t\"TEST\" -P -Vd > test0.ps",
    "gmt pscoast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -P -Vd > test1.ps",
    "gmt begin -Vd",
    "gmt coast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -Vd",
    "gmt end"
   ]
  }
 },
 "name":"gmt",
 "new_version":false,
 "pinning_version":"2020.04.16.16.23.46",
 "raw_meta_yaml":"{% set version = \"6.0.0\" %}\n\npackage:\n  name: gmt\n  version: {{ version }}\n\nsource:\n  url: https://github.com/GenericMappingTools/gmt/releases/download/{{ version }}/gmt-{{ version }}-src.tar.gz\n  sha256: 8a0f659274a2ace8c3c572c58fe533b5c31403f1631a46bec3f93dbfcbaf78e1\n  patches:\n    # patch for GMT 6.0.0 only. See https://github.com/GenericMappingTools/gmt/pull/3361\n    - gmt-6.0.0-patch0.patch\n\nbuild:\n  number: 4\n  skip: True  # [win and vc<14]\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n  host:\n    - libblas\n    - libcblas\n    - liblapack\n    - fftw\n    - gdal\n    - ghostscript\n    - libnetcdf\n    - hdf5\n    - zlib\n    - curl\n    - pcre\n    - gshhg-gmt\n    - dcw-gmt\n  run:\n    - libblas\n    - libcblas\n    - liblapack\n    - fftw\n    - gdal\n    - ghostscript\n    - libnetcdf\n    - hdf5\n    - zlib\n    - curl\n    - pcre\n    - gshhg-gmt  # [not win]\n    - dcw-gmt  # [not win]\n    - ffmpeg\n    - graphicsmagick\n\ntest:\n  commands:\n    - gmt defaults -Vd\n    - gmt psbasemap -R10/70/-3/8 -JX4i/3i -Ba -B+glightred+t\"TEST\" -P -Vd > test0.ps\n    - gmt pscoast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -P -Vd > test1.ps\n    - gmt begin -Vd\n    - gmt coast -R0/10/0/10 -JM6i -Ba -Ggray -ENG+p1p,blue -Vd\n    - gmt end\n\nabout:\n  home: https://www.generic-mapping-tools.org\n  license: LGPL-3.0\n  license_file: LICENSE.TXT\n  summary: 'The Generic Mapping Tools.'\n  description: |\n      GMT is an open source collection of about 80 command-line tools for\n      manipulating geographic and Cartesian data sets (including filtering,\n      trend fitting, gridding, projecting, etc.) and producing PostScript\n      illustrations ranging from simple x\u2013y plots via contour maps to\n      artificially illuminated surfaces and 3D perspective views; the GMT\n      supplements add another 40 more specialized and discipline-specific\n      tools. GMT supports over 30 map projections and transformations\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n    - leouieda\n    - seisman\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "curl",
   "dcw-gmt",
   "ffmpeg",
   "fftw",
   "gdal",
   "ghostscript",
   "graphicsmagick",
   "gshhg-gmt",
   "hdf5",
   "libblas",
   "libcblas",
   "liblapack",
   "libnetcdf",
   "pcre",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "curl",
    "dcw-gmt",
    "fftw",
    "gdal",
    "ghostscript",
    "gshhg-gmt",
    "hdf5",
    "libblas",
    "libcblas",
    "liblapack",
    "libnetcdf",
    "pcre",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "curl",
    "dcw-gmt",
    "ffmpeg",
    "fftw",
    "gdal",
    "ghostscript",
    "graphicsmagick",
    "gshhg-gmt",
    "hdf5",
    "libblas",
    "libcblas",
    "liblapack",
    "libnetcdf",
    "pcre",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "curl",
    "dcw-gmt",
    "fftw",
    "gdal",
    "ghostscript",
    "gshhg-gmt",
    "hdf5",
    "libblas",
    "libcblas",
    "liblapack",
    "libnetcdf",
    "pcre",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "curl",
    "dcw-gmt",
    "ffmpeg",
    "fftw",
    "gdal",
    "ghostscript",
    "graphicsmagick",
    "gshhg-gmt",
    "hdf5",
    "libblas",
    "libcblas",
    "liblapack",
    "libnetcdf",
    "pcre",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"ftp://ftp.soest.hawaii.edu/gmt/gmt-5.4.5-src.tar.gz",
 "version":"6.0.0"
}