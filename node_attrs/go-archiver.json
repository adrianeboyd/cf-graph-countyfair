{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/214176675.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/229170758.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/230359244.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.0.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/231821778.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/235636792.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/290922427.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/341088396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/493460155.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/495079119.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "3.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": "Upstream: unknown source or URL not in YAML",
 "conda-forge.yml": {},
 "feedstock_name": "go-archiver",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
   "dev_url": "https://github.com/mholt/archiver",
   "doc_url": "https://godoc.org/github.com/mholt/archiver",
   "home": "https://github.com/mholt/archiver",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "src/github.com/mholt/archiver/LICENSE",
   "summary": "Make and extract common archive formats such as .zip, and .tar.gz"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "go-archiver",
   "version": "3.3.2"
  },
  "requirements": {
   "build": [
    "go",
    "git"
   ]
  },
  "source": {
   "fn": "go-archiver-3.3.2.tar.gz",
   "folder": "src/github.com/mholt/archiver",
   "sha256": "1d1db34177fa0d85aea6860b33e94700b1acaa2f3ea626e1f457fede6991041b",
   "url": "https://github.com/mholt/archiver/archive/v3.3.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/arc",
    "arc -h || true"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "git",
    "go"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
   "dev_url": "https://github.com/mholt/archiver",
   "doc_url": "https://godoc.org/github.com/mholt/archiver",
   "home": "https://github.com/mholt/archiver",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "src/github.com/mholt/archiver/LICENSE",
   "summary": "Make and extract common archive formats such as .zip, and .tar.gz"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "nehaljwani",
    "nehaljwani",
    "nehaljwani"
   ]
  },
  "package": {
   "name": "go-archiver",
   "version": "3.3.2"
  },
  "requirements": {
   "build": [
    "go",
    "git",
    "go",
    "git",
    "go",
    "git"
   ]
  },
  "source": {
   "fn": "go-archiver-3.3.2.tar.gz",
   "folder": "src/github.com/mholt/archiver",
   "sha256": "1d1db34177fa0d85aea6860b33e94700b1acaa2f3ea626e1f457fede6991041b",
   "url": "https://github.com/mholt/archiver/archive/v3.3.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/arc",
    "arc -h || true",
    "test -f $PREFIX/bin/arc",
    "arc -h || true",
    "if not exist \"%LIBRARY_BIN%\\\\arc.exe\" exit 1",
    "arc -h || exit 0"
   ]
  }
 },
 "name": "go-archiver",
 "new_version": "3.3.2",
 "new_version_attempts": {
  "3.3.1": 1,
  "3.3.2": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
   "dev_url": "https://github.com/mholt/archiver",
   "doc_url": "https://godoc.org/github.com/mholt/archiver",
   "home": "https://github.com/mholt/archiver",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "src/github.com/mholt/archiver/LICENSE",
   "summary": "Make and extract common archive formats such as .zip, and .tar.gz"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "go-archiver",
   "version": "3.3.2"
  },
  "requirements": {
   "build": [
    "go",
    "git"
   ]
  },
  "source": {
   "fn": "go-archiver-3.3.2.tar.gz",
   "folder": "src/github.com/mholt/archiver",
   "sha256": "1d1db34177fa0d85aea6860b33e94700b1acaa2f3ea626e1f457fede6991041b",
   "url": "https://github.com/mholt/archiver/archive/v3.3.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/arc",
    "arc -h || true"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "git",
    "go"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "pinning_version": "2020.09.29.16.41.07",
 "raw_meta_yaml": "{% set name = \"go-archiver\" %}\n{% set version = \"3.3.2\" %}\n{% set sha256 = \"1d1db34177fa0d85aea6860b33e94700b1acaa2f3ea626e1f457fede6991041b\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/mholt/archiver/archive/v{{ version }}.tar.gz\n  folder: src/github.com/mholt/archiver\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  binary_relocation: false\n  detect_binary_files_with_prefix: false\n\nrequirements:\n  build:\n    - go\n    - git\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/arc  # [unix]\n    - arc -h || true  # [unix]\n    - if not exist \"%LIBRARY_BIN%\\\\arc.exe\" exit 1  # [win]\n    - arc -h || exit 0  # [win]\n\nabout:\n  home: https://github.com/mholt/archiver\n  license: MIT\n  license_family: MIT\n  license_file: src/github.com/mholt/archiver/LICENSE\n  summary: Make and extract common archive formats such as .zip, and .tar.gz\n  description: |\n    Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n    .tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\n    archiver makes it trivially easy to make and extract common archive\n    formats. Simply name the input and output file(s). Files are put into the\n    root of the archive; directories are recursively added, preserving\n    structure.\n  doc_url: https://godoc.org/github.com/mholt/archiver\n  dev_url: https://github.com/mholt/archiver\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n",
 "req": {
  "__set__": true,
  "elements": [
   "git",
   "go"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "git",
    "go"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "git",
    "go"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/mholt/archiver/archive/v3.1.1.tar.gz",
 "version": "3.3.2",
 "win_64_meta_yaml": {
  "about": {
   "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
   "dev_url": "https://github.com/mholt/archiver",
   "doc_url": "https://godoc.org/github.com/mholt/archiver",
   "home": "https://github.com/mholt/archiver",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "src/github.com/mholt/archiver/LICENSE",
   "summary": "Make and extract common archive formats such as .zip, and .tar.gz"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "go-archiver",
   "version": "3.3.2"
  },
  "requirements": {
   "build": [
    "go",
    "git"
   ]
  },
  "source": {
   "fn": "go-archiver-3.3.2.tar.gz",
   "folder": "src/github.com/mholt/archiver",
   "sha256": "1d1db34177fa0d85aea6860b33e94700b1acaa2f3ea626e1f457fede6991041b",
   "url": "https://github.com/mholt/archiver/archive/v3.3.2.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist \"%LIBRARY_BIN%\\\\arc.exe\" exit 1",
    "arc -h || exit 0"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "git",
    "go"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}