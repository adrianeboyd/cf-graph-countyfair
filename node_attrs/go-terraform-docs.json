{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/305950279.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/352634174.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/364303990.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/365473270.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/370483547.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.8.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"while scanning for the next token\nfound character '\\t' that cannot start any token\n  in \"<unicode string>\", line 3, column 1:\n    \t\n    ^ (line: 3)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 957, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 168, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 407, in migrate",
   "    cmeta = CondaMetaYAML(fp.read())",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 391, in __init__",
   "    self.meta = self._parser.load(\"\".join(lines))",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/main.py\", line 341, in load",
   "    return constructor.get_single_data()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 111, in get_single_data",
   "    node = self.composer.get_single_node()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 73, in get_single_node",
   "    self.parser.get_event()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/parser.py\", line 162, in get_event",
   "    self.current_event = self.state()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/parser.py\", line 176, in parse_stream_start",
   "    token.move_comment(self.scanner.peek_token())",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/scanner.py\", line 1778, in peek_token",
   "    self._gather_comments()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/scanner.py\", line 1794, in _gather_comments",
   "    self.fetch_more_tokens()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/scanner.py\", line 322, in fetch_more_tokens",
   "    self.reader.get_mark(),",
   "ruamel.yaml.scanner.ScannerError: while scanning for the next token",
   "found character '\\t' that cannot start any token",
   "  in \"<unicode string>\", line 3, column 1:",
   "    \t",
   "    ^ (line: 3)",
   ""
  ]
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"go-terraform-docs",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/segmentio/terraform-docs",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"src/github.com/segmentio/terraform-docs/LICENSE",
   "summary":"Generate docs from Terraform modules"
  },
  "build":{
   "number":"0",
   "script":[
    "pushd src/github.com/segmentio/terraform-docs",
    "go install -v -ldflags \"-X main.version=0.8.2\" .",
    "pushd src/github.com/segmentio/terraform-docs",
    "go install -v -ldflags \"-X main.version=0.8.2\" .",
    "pushd src/github.com/segmentio/terraform-docs",
    "go install -v -ldflags \"-X main.version=0.8.2\" ."
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "andrew-mcgrath",
    "pierrsc",
    "andrew-mcgrath",
    "pierrsc",
    "andrew-mcgrath",
    "pierrsc"
   ]
  },
  "package":{
   "name":"go-terraform-docs",
   "version":"0.8.2"
  },
  "requirements":{
   "build":[
    "go_compiler_stub",
    "go_compiler_stub",
    "go_compiler_stub"
   ]
  },
  "source":[
   {
    "folder":"src/github.com/segmentio/terraform-docs",
    "sha256":"005957c5c5d56a27e60ca735128231f68c3f099b433a7041a0f1591bee59fbd0",
    "url":"https://github.com/segmentio/terraform-docs/archive/v0.8.2.tar.gz"
   },
   {
    "folder":"src/github.com/segmentio/terraform-docs",
    "sha256":"005957c5c5d56a27e60ca735128231f68c3f099b433a7041a0f1591bee59fbd0",
    "url":"https://github.com/segmentio/terraform-docs/archive/v0.8.2.tar.gz"
   },
   {
    "folder":"src/github.com/segmentio/terraform-docs",
    "sha256":"005957c5c5d56a27e60ca735128231f68c3f099b433a7041a0f1591bee59fbd0",
    "url":"https://github.com/segmentio/terraform-docs/archive/v0.8.2.tar.gz"
   }
  ],
  "test":{
   "commands":[
    "where terraform-docs",
    "terraform-docs --help",
    "which terraform-docs",
    "terraform-docs --help",
    "which terraform-docs",
    "terraform-docs --help"
   ]
  }
 },
 "name":"go-terraform-docs",
 "new_version":"0.9.1",
 "new_version_attempts":{
  "0.9.1":27
 },
 "pinning_version":"2020.01.27",
 "raw_meta_yaml":"{% set import_path = \"github.com/segmentio/terraform-docs\" %}\n{% set version = \"0.8.2\" %}\n\t\n{% set name = import_path.split('/')[-1] %}\n{% set pkg_src = ('src/'+import_path).replace(\"/\", os.sep) %}\n\npackage:\n  name: go-{{ name|lower }}\n  version: {{version}}\n\nsource:\n  - folder: {{ pkg_src }}\n    url: https://{{ import_path }}/archive/v{{version}}.tar.gz\n    sha256: 005957c5c5d56a27e60ca735128231f68c3f099b433a7041a0f1591bee59fbd0\n\nbuild:\n  number: 0\n  script:\n    - pushd {{ pkg_src }}\n    - go install -v\n        -ldflags \"-X main.version={{ version }}\"\n        .\n\nrequirements:\n  build:\n    - {{ compiler(\"go\") }}\n\ntest:\n  commands:\n    - which terraform-docs  # [not win]\n    - where terraform-docs  # [win]\n    - terraform-docs --help\n\nabout:\n  home: https://{{ import_path }}\n\n  license: MIT\n  license_family: MIT\n  license_file: {{ pkg_src }}/LICENSE\n  summary: 'Generate docs from Terraform modules'\n\nextra:\n  recipe-maintainers:\n    - andrew-mcgrath\n    - pierrsc\n",
 "req":{
  "__set__":true,
  "elements":[
   "go_compiler_stub"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "go_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.7",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "go_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/segmentio/terraform-docs/archive/v0.6.0.tar.gz",
 "version":"0.8.2"
}