{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/368180744.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"goofit-split",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/GooFit/GooFit",
   "license":"LGPL-3.0-only",
   "license_family":"LGPL",
   "license_file":"LICENSE",
   "summary":"A fitting package for GPU and CPU"
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "chrisburr",
    "danielsibemol",
    "henryiii",
    "chrisburr",
    "danielsibemol",
    "henryiii",
    "chrisburr",
    "danielsibemol",
    "henryiii"
   ]
  },
  "outputs":[
   {
    "about":{
     "home":"https://github.com/conda-forge/goofit-feedstock",
     "license":"BSD-3-Clause",
     "license_family":"BSD",
     "summary":"A meta-package to select CPU or GPU GooFit build."
    },
    "build":{
     "number":"0",
     "string":"cpu"
    },
    "name":"goofit-proc",
    "test":{
     "commands":[
      "exit 0"
     ]
    },
    "version":"1.0.0"
   },
   {
    "build":{
     "number":"0"
    },
    "name":"goofit",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake"
     ],
     "host":[
      "python",
      "scikit-build",
      "pip"
     ],
     "run":[
      "python",
      "numpy >=1.11.1"
     ],
     "run_constrained":[
      "goofit-proc * cpu"
     ]
    },
    "script":"build-cpu.sh",
    "test":{
     "commands":[
      "$PYTHON -m pytest python/tests/test_exp.py",
      "$PYTHON -c \"import sys, pkgutil; sys.exit(pkgutil.find_loader('goofit') is None)\""
     ],
     "imports":[
      "goofit"
     ],
     "requires":[
      "pytest"
     ],
     "source_files":[
      "python/tests/test_exp.py"
     ]
    },
    "version":"2.2.2"
   },
   {
    "about":{
     "home":"https://github.com/conda-forge/goofit-feedstock",
     "license":"BSD-3-Clause",
     "license_family":"BSD",
     "summary":"A meta-package to select CPU or GPU GooFit build."
    },
    "build":{
     "number":"0",
     "string":"cpu"
    },
    "name":"goofit-proc",
    "test":{
     "commands":[
      "exit 0"
     ]
    },
    "version":"1.0.0"
   },
   {
    "build":{
     "number":"0"
    },
    "name":"goofit",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "llvm-openmp"
     ],
     "host":[
      "python",
      "scikit-build",
      "pip",
      "llvm-openmp"
     ],
     "run":[
      "python",
      "numpy >=1.11.1",
      "llvm-openmp"
     ],
     "run_constrained":[
      "goofit-proc * cpu",
      "__osx >=10.9"
     ]
    },
    "script":"build-cpu.sh",
    "test":{
     "commands":[
      "$PYTHON -m pytest python/tests/test_exp.py",
      "$PYTHON -c \"import sys, pkgutil; sys.exit(pkgutil.find_loader('goofit') is None)\""
     ],
     "imports":[
      "goofit"
     ],
     "requires":[
      "pytest"
     ],
     "source_files":[
      "python/tests/test_exp.py"
     ]
    },
    "version":"2.2.2"
   },
   {
    "about":{
     "home":"https://github.com/conda-forge/goofit-feedstock",
     "license":"BSD-3-Clause",
     "license_family":"BSD",
     "summary":"A meta-package to select CPU or GPU GooFit build."
    },
    "build":{
     "number":"0",
     "string":"cpu"
    },
    "name":"goofit-proc",
    "test":{
     "commands":[
      "exit 0"
     ]
    },
    "version":"1.0.0"
   },
   {
    "build":{
     "number":"0"
    },
    "name":"goofit",
    "requirements":{
     "build":[
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "libgomp"
     ],
     "host":[
      "python",
      "scikit-build",
      "pip",
      "libgomp"
     ],
     "run":[
      "python",
      "numpy >=1.11.1",
      "libgomp"
     ],
     "run_constrained":[
      "goofit-proc * cpu"
     ]
    },
    "script":"build-gpu.sh",
    "test":{
     "commands":[
      "$PYTHON -c \"import sys, pkgutil; sys.exit(pkgutil.find_loader('goofit') is None)\""
     ],
     "imports":null,
     "requires":null,
     "source_files":null
    },
    "version":"2.2.2"
   }
  ],
  "package":{
   "name":"goofit-split"
  },
  "source":{
   "patches":[
    "patches/thrustorder-2.2.2.patch",
    "patches/thrustorder-2.2.2.patch",
    "patches/thrustorder-2.2.2.patch"
   ],
   "sha256":"82884fd3021555da0953776f81199cbea60287f6bca87b0ecdaa5dd212692c67",
   "url":"https://pypi.io/packages/source/g/goofit/goofit-2.2.2.tar.gz"
  }
 },
 "name":"goofit-split",
 "new_version":"2.2.2",
 "outputs_names":[
  "goofit",
  "goofit-proc"
 ],
 "pinning_version":"2020.01.27",
 "raw_meta_yaml":"{% set version = \"2.2.2\" %}\n{% set name = \"goofit\" %}\n\n{% set goofit_proc_type = \"cpu\" if cuda_compiler_version|default(\"None\") == \"None\" else \"gpu\" %}\n{% set goofit_cuda_supported = [\"None\", \"9.2\", \"10.0\"] %}\n\npackage:\n  name: goofit-split\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 82884fd3021555da0953776f81199cbea60287f6bca87b0ecdaa5dd212692c67\n  patches:\n    - patches/thrustorder-2.2.2.patch\n  \nbuild:\n  skip: true  # [win]\n  {% if cuda_compiler_version|default(\"None\") not in goofit_cuda_supported %}\n  skip: true\n  {% endif %}\n  number: 0\n\noutputs:\n  - name: goofit-proc\n    version: \"1.0.0\"\n    build:\n      number: 0\n      string: \"{{ goofit_proc_type }}\"\n    test:\n      commands:\n        - exit 0\n    about:\n      home: https://github.com/conda-forge/goofit-feedstock\n      license: BSD-3-Clause\n      license_family: BSD\n      summary: A meta-package to select CPU or GPU GooFit build.\n\n  - name: goofit\n    version: {{ version }}\n    build:\n      number: 0\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}  # [linux and cuda_compiler_version != \"None\"]\n        - cmake\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64]\n      host:\n        - python\n        - scikit-build\n        - pip\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64]\n      run:\n        - python\n        - numpy >=1.11.1\n        - llvm-openmp  # [osx]\n        - libgomp      # [linux and not aarch64]\n      run_constrained:\n        - goofit-proc * {{ goofit_proc_type }}\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n\n    script: build-cpu.sh  # [not linux or cuda_compiler_version == \"None\"]\n    script: build-gpu.sh  # [linux and cuda_compiler_version != \"None\"]\n\n    test:\n      requires:\n        - pytest  # [not linux or cuda_compiler_version == \"None\"]\n      source_files:\n        - python/tests/test_exp.py  # [not linux or cuda_compiler_version == \"None\"]\n      imports:\n        - goofit  # [not linux or cuda_compiler_version == \"None\"]\n      commands:\n        - $PYTHON -m pytest python/tests/test_exp.py  # [not linux or cuda_compiler_version == \"None\"]\n        - $PYTHON -c \"import sys, pkgutil; sys.exit(pkgutil.find_loader('goofit') is None)\"\n\nabout:\n  home: https://github.com/GooFit/GooFit\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE\n  summary: A fitting package for GPU and CPU\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n    - danielsibemol\n    - henryiii\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "libgomp",
   "llvm-openmp",
   "numpy",
   "pip",
   "python",
   "scikit-build"
  ]
 },
 "smithy_version":"3.6.6",
 "url":"https://pypi.io/packages/source/g/goofit/goofit-2.2.2.tar.gz"
}