{
 "archived":false,
 "bad":{
  "exception":"<class 'requests.exceptions.ConnectionError'>: A connection-level exception occurred: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 275, in _read_status",
   "    raise RemoteDisconnected(\"Remote end closed connection without\"",
   "http.client.RemoteDisconnected: Remote end closed connection without response",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 725, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 403, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 734, in reraise",
   "    raise value.with_traceback(tb)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 275, in _read_status",
   "    raise RemoteDisconnected(\"Remote end closed connection without\"",
   "urllib3.exceptions.ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 543, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 498, in send",
   "    raise ConnectionError(err, request=request)",
   "requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 832, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 166, in run",
   "    fork=fork,",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 111, in get_repo",
   "    repo = gh.repository(\"conda-forge\", feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ConnectionError'>: A connection-level exception occurred: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"grandalf",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "description":"Grandalf is a Python package made for experimentations with graphs and drawing\nalgorithms. It is written in pure python.\n",
   "dev_url":"https://github.com/bdcht/grandalf",
   "home":"https://github.com/bdcht/grandalf",
   "license":"GPL-2.0 | EPL-1.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"Graph and drawing algorithms framework"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install --no-deps . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "shcheklein",
    "efiop",
    "MaxRis"
   ]
  },
  "package":{
   "name":"grandalf",
   "version":"0.6"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "pytest-runner"
   ],
   "run":[
    "python",
    "pyparsing",
    "future"
   ]
  },
  "source":{
   "sha256":"7471db231bd7338bc0035b16edf0dc0c900c82d23060f4b4d0c4304caedda6e4",
   "url":"https://pypi.io/packages/source/g/grandalf/grandalf-0.6.tar.gz"
  },
  "test":{
   "imports":[
    "grandalf"
   ]
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "future",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "description":"Grandalf is a Python package made for experimentations with graphs and drawing\nalgorithms. It is written in pure python.\n",
   "dev_url":"https://github.com/bdcht/grandalf",
   "home":"https://github.com/bdcht/grandalf",
   "license":"GPL-2.0 | EPL-1.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"Graph and drawing algorithms framework"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install --no-deps . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "shcheklein",
    "efiop",
    "MaxRis",
    "shcheklein",
    "efiop",
    "MaxRis",
    "shcheklein",
    "efiop",
    "MaxRis"
   ]
  },
  "package":{
   "name":"grandalf",
   "version":"0.6"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "pytest-runner",
    "python",
    "pip",
    "pytest-runner",
    "python",
    "pip",
    "pytest-runner"
   ],
   "run":[
    "python",
    "pyparsing",
    "future",
    "python",
    "pyparsing",
    "future",
    "python",
    "pyparsing",
    "future"
   ]
  },
  "source":{
   "sha256":"7471db231bd7338bc0035b16edf0dc0c900c82d23060f4b4d0c4304caedda6e4",
   "url":"https://pypi.io/packages/source/g/grandalf/grandalf-0.6.tar.gz"
  },
  "test":{
   "imports":[
    "grandalf",
    "grandalf",
    "grandalf"
   ]
  }
 },
 "name":"grandalf",
 "new_version":"0.7",
 "new_version_attempts":{
  "0.7":866
 },
 "new_version_errors":{
  "0.7":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.7' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml":{
  "about":{
   "description":"Grandalf is a Python package made for experimentations with graphs and drawing\nalgorithms. It is written in pure python.\n",
   "dev_url":"https://github.com/bdcht/grandalf",
   "home":"https://github.com/bdcht/grandalf",
   "license":"GPL-2.0 | EPL-1.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"Graph and drawing algorithms framework"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install --no-deps . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "shcheklein",
    "efiop",
    "MaxRis"
   ]
  },
  "package":{
   "name":"grandalf",
   "version":"0.6"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "pytest-runner"
   ],
   "run":[
    "python",
    "pyparsing",
    "future"
   ]
  },
  "source":{
   "sha256":"7471db231bd7338bc0035b16edf0dc0c900c82d23060f4b4d0c4304caedda6e4",
   "url":"https://pypi.io/packages/source/g/grandalf/grandalf-0.6.tar.gz"
  },
  "test":{
   "imports":[
    "grandalf"
   ]
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "future",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "raw_meta_yaml":"{% set name = \"grandalf\" %}\n{% set version = \"0.6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7471db231bd7338bc0035b16edf0dc0c900c82d23060f4b4d0c4304caedda6e4\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install --no-deps . -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n    - pytest-runner\n  run:\n    - python\n    - pyparsing\n    - future\n\ntest:\n  imports:\n    - grandalf\n\nabout:\n  home: https://github.com/bdcht/grandalf\n  license: GPL-2.0 | EPL-1.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'Graph and drawing algorithms framework'\n\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    Grandalf is a Python package made for experimentations with graphs and drawing\n    algorithms. It is written in pure python.\n  dev_url: https://github.com/bdcht/grandalf\n\nextra:\n  recipe-maintainers:\n    - shcheklein\n    - efiop\n    - MaxRis\n",
 "req":{
  "__set__":true,
  "elements":[
   "future",
   "pip",
   "pyparsing",
   "pytest-runner",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "future",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "future",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/g/grandalf/grandalf-0.6.tar.gz",
 "version":"0.6",
 "win_64_meta_yaml":{
  "about":{
   "description":"Grandalf is a Python package made for experimentations with graphs and drawing\nalgorithms. It is written in pure python.\n",
   "dev_url":"https://github.com/bdcht/grandalf",
   "home":"https://github.com/bdcht/grandalf",
   "license":"GPL-2.0 | EPL-1.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"Graph and drawing algorithms framework"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install --no-deps . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "shcheklein",
    "efiop",
    "MaxRis"
   ]
  },
  "package":{
   "name":"grandalf",
   "version":"0.6"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "pytest-runner"
   ],
   "run":[
    "python",
    "pyparsing",
    "future"
   ]
  },
  "source":{
   "sha256":"7471db231bd7338bc0035b16edf0dc0c900c82d23060f4b4d0c4304caedda6e4",
   "url":"https://pypi.io/packages/source/g/grandalf/grandalf-0.6.tar.gz"
  },
  "test":{
   "imports":[
    "grandalf"
   ]
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "pytest-runner",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "future",
    "pyparsing",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}