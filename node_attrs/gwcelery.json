{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.2.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/257628542.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/262261040.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265910215.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/266797118.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/318264561.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.8.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/344784803.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353366124.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/360009585.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"gwcelery",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://git.ligo.org/emfollow/gwcelery",
   "doc_url":"https://gwcelery.readthedocs.io/en/latest/",
   "home":"https://git.ligo.org/emfollow/gwcelery",
   "license":"GPLv2+",
   "license_family":"GPL",
   "license_file":"doc/license.md",
   "summary":"Hipster pipeline for annotating LIGO events"
  },
  "build":{
   "entry_points":[
    "gwcelery = gwcelery:app.start",
    "gwcelery = gwcelery:app.start",
    "gwcelery = gwcelery:app.start"
   ],
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed -vv "
  },
  "extra":{
   "recipe-maintainers":[
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package":{
   "name":"gwcelery",
   "version":"0.2.5"
  },
  "requirements":{
   "host":[
    "python >=3.6",
    "pip",
    "setuptools >=30.3.0",
    "python >=3.6",
    "pip",
    "setuptools >=30.3.0",
    "python >=3.6",
    "pip",
    "setuptools >=30.3.0"
   ],
   "run":[
    "astropy",
    "celery >=4.2.0",
    "celery-eternal >=0.0.3",
    "comet",
    "flower",
    "gwdatafind",
    "gwpy",
    "healpy",
    "jinja2",
    "lalsuite >=6.52",
    "ligo-followup-advocate >=0.0.11",
    "ligo-gracedb >=2.1.1",
    "ligo-raven >=1.8",
    "ligo-segments",
    "ligo.skymap >=0.1.0",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "pygcn >=0.1.16",
    "python >=3.6",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert",
    "voeventlib >=1.2",
    "astropy",
    "celery >=4.2.0",
    "celery-eternal >=0.0.3",
    "comet",
    "flower",
    "gwdatafind",
    "gwpy",
    "healpy",
    "jinja2",
    "lalsuite >=6.52",
    "ligo-followup-advocate >=0.0.11",
    "ligo-gracedb >=2.1.1",
    "ligo-raven >=1.8",
    "ligo-segments",
    "ligo.skymap >=0.1.0",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "pygcn >=0.1.16",
    "python >=3.6",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert",
    "voeventlib >=1.2",
    "astropy",
    "celery >=4.2.0",
    "celery-eternal >=0.0.3",
    "comet",
    "flower",
    "gwdatafind",
    "gwpy",
    "healpy",
    "jinja2",
    "lalsuite >=6.52",
    "ligo-followup-advocate >=0.0.11",
    "ligo-gracedb >=2.1.1",
    "ligo-raven >=1.8",
    "ligo-segments",
    "ligo.skymap >=0.1.0",
    "lscsoft-glue",
    "lxml",
    "numpy",
    "pygcn >=0.1.16",
    "python >=3.6",
    "redis-py",
    "safe-netrc",
    "sentry-sdk",
    "service_identity",
    "sleek-lvalert",
    "voeventlib >=1.2"
   ]
  },
  "source":{
   "sha256":"bf3baac0e3a36d0aa1250fd0ab130990ff9245e2b8295012993ea67c4d5c19e8",
   "url":"https://pypi.io/packages/source/g/gwcelery/gwcelery-0.2.5.tar.gz"
  },
  "test":{
   "commands":[
    "gwcelery --version",
    "python -m pytest --pyargs $PKG_NAME",
    "gwcelery --version",
    "python -m pytest --pyargs $PKG_NAME",
    "gwcelery --version",
    "python -m pytest --pyargs $PKG_NAME"
   ],
   "imports":[
    "gwcelery",
    "gwcelery",
    "gwcelery"
   ],
   "requires":[
    "pytest >=3.0",
    "pytest-socket",
    "pytest >=3.0",
    "pytest-socket",
    "pytest >=3.0",
    "pytest-socket"
   ]
  }
 },
 "name":"gwcelery",
 "new_version":"0.9.2",
 "pinning_version":"2020.01.06",
 "raw_meta_yaml":"{% set name = \"gwcelery\" %}\n{% set version = \"0.2.5\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: bf3baac0e3a36d0aa1250fd0ab130990ff9245e2b8295012993ea67c4d5c19e8\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n  entry_points:\n    - gwcelery = gwcelery:app.start\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools >=30.3.0\n  run:\n    - astropy\n    - celery >=4.2.0\n    - celery-eternal >=0.0.3\n    - comet\n    - flower\n    - gwdatafind\n    - gwpy\n    - healpy\n    - jinja2\n    - lalsuite >=6.52\n    - ligo-followup-advocate >=0.0.11\n    - ligo-gracedb >=2.1.1\n    - ligo-raven >=1.8\n    - ligo-segments\n    - ligo.skymap >=0.1.0\n    - lscsoft-glue\n    - lxml\n    - numpy\n    - pygcn >=0.1.16\n    - python >=3.6\n    - redis-py\n    - safe-netrc\n    - sentry-sdk\n    - service_identity\n    - sleek-lvalert\n    - voeventlib >=1.2\n\ntest:\n  imports:\n    - gwcelery\n  requires:\n    - pytest >=3.0\n    - pytest-socket\n  commands:\n    - gwcelery --version\n    - python -m pytest --pyargs $PKG_NAME\n\nabout:\n  home: https://git.ligo.org/emfollow/gwcelery\n  license: GPLv2+\n  license_family: GPL\n  license_file: doc/license.md\n  summary: Hipster pipeline for annotating LIGO events\n  doc_url: https://gwcelery.readthedocs.io/en/latest/\n  dev_url: https://git.ligo.org/emfollow/gwcelery\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req":{
  "__set__":true,
  "elements":[
   "astropy",
   "celery",
   "celery-eternal",
   "comet",
   "flower",
   "gwdatafind",
   "gwpy",
   "healpy",
   "jinja2",
   "lalsuite",
   "ligo-followup-advocate",
   "ligo-gracedb",
   "ligo-raven",
   "ligo-segments",
   "ligo.skymap",
   "lscsoft-glue",
   "lxml",
   "numpy",
   "pip",
   "pygcn",
   "python",
   "redis-py",
   "safe-netrc",
   "sentry-sdk",
   "service_identity",
   "setuptools",
   "sleek-lvalert",
   "voeventlib"
  ]
 },
 "smithy_version":"3.6.5",
 "url":"https://pypi.io/packages/source/g/gwcelery/gwcelery-0.2.5.tar.gz",
 "version":"0.2.5"
}