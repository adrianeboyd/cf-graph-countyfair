{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/371690157.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"gsl26"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/384095923.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"root620000"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393627734.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"root_base6202"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/3565362c-473c-4156-8f95-03d2e0f0273d.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"hdf51106"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 267, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 725, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 403, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 428, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 543, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 777, in main",
   "    or mctx.gh.rate_limit()[\"resources\"][\"core\"][\"remaining\"] == 0",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1867, in rate_limit",
   "    return self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"gwollum",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The GWOLLUM package contains a set of software tools designed to perform\nGW analyses.  Most of the code source is written with the C++ language\nand it also heavily relies on the CERN ROOT libraries (also C++).\n",
   "home":"http://virgo.in2p3.fr/GWOLLUM/v2r3/index.html?Main",
   "license":"GPL-3.0-or-later",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"Tools for gravitational-wave analyses"
  },
  "build":{
   "error_overdepending":true,
   "error_overlinking":true,
   "number":"4",
   "run_exports":[
    "gwollum",
    "gwollum",
    "gwollum"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "duncanmmacleod",
    "duncanmmacleod",
    "duncanmmacleod"
   ]
  },
  "package":{
   "name":"gwollum",
   "version":"2.3.12"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.9.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.9.0",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.9.0",
    "make",
    "pkg-config"
   ],
   "host":[
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "root-binaries",
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "root-binaries",
    "zlib",
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "root-binaries"
   ],
   "run":[
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "zlib",
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base"
   ]
  },
  "source":{
   "patches":[
    "c++17.patch",
    "gsl-library.patch",
    "c++17.patch",
    "gsl-library.patch",
    "c++17.patch",
    "gsl-library.patch"
   ],
   "sha256":"4416c3ccd18e37f9de00fc29a0dff0c25fc9fd511e542611b25c642fac882edc",
   "url":"http://software.ligo.org/lscsoft/source/gwollum-2.3.12.tar.xz"
  },
  "test":{
   "commands":[
    "echo -e \"1 2 3\\n4 5 6\" > triggers.txt",
    "TxtToTree triggers.txt triggers a/I:b/I:c/I",
    "echo -e \"1 2 3\\n4 5 6\" > triggers.txt",
    "TxtToTree triggers.txt triggers a/I:b/I:c/I",
    "test \"$(pkg-config --print-errors --modversion gwollum)\" == \"${PKG_VERSION}\"",
    "echo -e \"1 2 3\\n4 5 6\" > triggers.txt",
    "TxtToTree triggers.txt triggers a/I:b/I:c/I",
    "test \"$(pkg-config --print-errors --modversion gwollum)\" == \"${PKG_VERSION}\""
   ],
   "requires":[
    "pkg-config",
    "pkg-config",
    "pkg-config"
   ]
  }
 },
 "name":"gwollum",
 "new_version":false,
 "pinning_version":"2020.04.16.03.28.28",
 "raw_meta_yaml":"{% set name = \"gwollum\" %}\n{% set version = \"2.3.12\" %}\n{% set versions = version.split('.') %}\n\npackage:\n   name: \"{{ name|lower }}\"\n   version: \"{{ version }}\"\n\nsource:\n   url: \"http://software.ligo.org/lscsoft/source/{{ name }}-{{ version }}.tar.xz\"\n   sha256: 4416c3ccd18e37f9de00fc29a0dff0c25fc9fd511e542611b25c642fac882edc\n   patches:\n     # use C++17 standard (required to link against ROOT>=6.14)\n     - c++17.patch\n     # link only against libgsl, not libgslcblas\n     - gsl-library.patch\n\nbuild:\n  error_overdepending: true\n  error_overlinking: true\n  number: 4\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(\"gwollum\", max_pin=\"x.x.x\") }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >=3.9.0\n    - make  # [unix]\n    - pkg-config  # [unix]\n  host:\n    - fftw\n    - gsl\n    - hdf5\n    - libframe\n    - root_base\n    - root-binaries\n    - zlib  # [osx]\n  run:\n    - fftw\n    - gsl\n    - hdf5\n    - libframe\n    - root_base\n    - zlib  # [osx]\n\ntest:\n  requires:\n    - pkg-config\n  commands:\n    # sanity check\n    - echo -e \"1 2 3\\n4 5 6\" > triggers.txt\n    - TxtToTree triggers.txt triggers a/I:b/I:c/I\n    # check pkg-config\n    - test \"$(pkg-config --print-errors --modversion gwollum)\" == \"${PKG_VERSION}\"  # [unix]\n\nabout:\n  home: \"http://virgo.in2p3.fr/GWOLLUM/v{{ versions[0] }}r{{ versions[1] }}/index.html?Main\"\n  license: \"GPL-3.0-or-later\"\n  license_family: \"GPL\"\n  license_file: \"LICENSE\"\n  summary: \"Tools for gravitational-wave analyses\"\n  description: |\n    The GWOLLUM package contains a set of software tools designed to perform\n    GW analyses.  Most of the code source is written with the C++ language\n    and it also heavily relies on the CERN ROOT libraries (also C++).\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "fftw",
   "gsl",
   "hdf5",
   "libframe",
   "make",
   "pkg-config",
   "root-binaries",
   "root_base",
   "zlib"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root-binaries",
    "root_base",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pkg-config"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake >=3.9.0",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root-binaries",
    "root_base",
    "zlib"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "fftw",
    "gsl",
    "hdf5",
    "libframe",
    "root_base",
    "zlib"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pkg-config"
   ]
  }
 },
 "url":"http://software.ligo.org/lscsoft/source/gwollum-2.3.12.tar.xz",
 "version":"2.3.12"
}