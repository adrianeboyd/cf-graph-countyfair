{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199653181.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/200714823.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/201920574.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/205568806.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/206767701.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/207203746.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/208366444.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/214262607.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/221548993.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223956915.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224448639.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224499314.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/227111836.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/228804259.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/231689421.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/231695664.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/234719690.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/240361094.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/249048039.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265581179.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/268276586.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299536681.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"icu-64.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 688, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 147, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 224, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 103, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://www.freedesktop.org/software/harfbuzz/release/harfbuzz-2.6.4.tar.bz2"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"harfbuzz",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"HarfBuzz is a text shaping library. New Harbuzz targets various font\ntechnologies while Old HarfBuzz targets only OpenType fonts.\n",
   "dev_url":"https://github.com/behdad/harfbuzz",
   "doc_url":"https://www.freedesktop.org/wiki/Software/HarfBuzz/",
   "home":"http://www.freedesktop.org/wiki/Software/HarfBuzz/",
   "license":"MIT",
   "license_file":"COPYING",
   "summary":"An OpenType text shaping engine."
  },
  "build":{
   "number":"3"
  },
  "extra":{
   "recipe-maintainers":[
    "ocefpaf",
    "pkgw",
    "ocefpaf",
    "pkgw",
    "ocefpaf",
    "pkgw"
   ]
  },
  "package":{
   "name":"harfbuzz",
   "version":"2.4.0"
  },
  "requirements":{
   "build":[
    "cmake",
    "ninja",
    "patch",
    "pkg-config",
    "pthread-stubs",
    "python >=2.7,<3",
    "vs2015_win-64",
    "automake",
    "make",
    "libtool",
    "pkg-config",
    "pthread-stubs",
    "python >=2.7,<3",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "automake",
    "make",
    "libtool",
    "pkg-config",
    "pthread-stubs",
    "python >=2.7,<3",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "glib",
    "freetype",
    "icu",
    "graphite2",
    "cairo",
    "glib",
    "freetype",
    "icu",
    "graphite2",
    "gobject-introspection",
    "cairo",
    "glib",
    "freetype",
    "icu",
    "graphite2",
    "gobject-introspection"
   ],
   "run":[
    "glib",
    "freetype",
    "icu",
    "graphite2",
    "cairo",
    "glib",
    "freetype",
    "icu",
    "graphite2",
    "cairo",
    "glib",
    "freetype",
    "icu",
    "graphite2"
   ]
  },
  "source":{
   "patches":null,
   "sha256":"b470eff9dd5b596edf078596b46a1f83c179449f051a469430afc15869db336f",
   "url":"https://www.freedesktop.org/software/harfbuzz/release/harfbuzz-2.4.0.tar.bz2"
  },
  "test":{
   "commands":[
    "test -f $PREFIX/lib/libharfbuzz-icu.so",
    "test -f $PREFIX/lib/libharfbuzz.so",
    "test -f $PREFIX/include/harfbuzz/hb-ft.h",
    "hb-view --version",
    "conda inspect linkages -p $PREFIX $PKG_NAME"
   ]
  }
 },
 "name":"harfbuzz",
 "new_version":"2.6.4",
 "pinning_version":"2019.07.19",
 "raw_meta_yaml":"{% set name = \"harfbuzz\" %}\n{% set version = \"2.4.0\" %}\n{% set sha256 = \"b470eff9dd5b596edf078596b46a1f83c179449f051a469430afc15869db336f\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\n# Note: in conda-forge.yml we currently disable the beta-testing of Azure\n# Pipelines. This is because the Windows image we use on Azure provides Visual\n# Studio 2017, whereas on AppVeyor we need VS2015. Since AppVeyor is what\n# actually gets deployed, it wins for now. If/when we're ready to switch over\n# to Azure for production, the VS version requirement should bump up to 2017.\n# (Or maybe at that point there will be a mechanism to use VS2015 in Azure\n# Pipelines.)\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://www.freedesktop.org/software/{{ name }}/release/{{ name }}-{{ version }}.tar.bz2\n  sha256: {{ sha256 }}\n  patches:\n    - 0002-Generate-.pc-files-when-using-the-CMake-build-system.patch  # [win]\n\nbuild:\n  number: 3\n\nrequirements:\n  build:\n    - cmake           # [win]\n    - ninja           # [win]\n    - {{posix}}patch  # [win]\n    - automake    # [not win]\n    - make        # [not win]\n    - libtool     # [not win]\n    - {{native}}pkg-config\n    - pthread-stubs\n    - python >=2.7,<3\n    - {{ compiler('c') }}    # [not win]\n    - {{ compiler('cxx') }}  # [not win]\n    - vs2015_win-64          # [win] -- don't bother building on VS2008\n  host:\n    - cairo                         # [not win]\n    - glib\n    - freetype\n    - icu\n    - graphite2\n    - gobject-introspection         # [not win]\n  run:\n    - cairo                         # [not win]\n    - glib\n    - freetype\n    - icu\n    - graphite2\n\ntest:\n  commands:\n    # Libraries/headers.\n    {% set libs = [\n        \"libharfbuzz-icu\",\n        \"libharfbuzz\"\n        ] %}\n    {% for lib in libs %}\n    - test -f $PREFIX/lib/{{ lib }}.dylib  # [osx]\n    - test -f $PREFIX/lib/{{ lib }}.so  # [linux]\n    {% endfor %}\n    - test -f $PREFIX/include/harfbuzz/hb-ft.h  # [not win]\n    # CLI tests.\n    - hb-view --version  # [linux]\n    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]\n\nabout:\n  home: http://www.freedesktop.org/wiki/Software/HarfBuzz/\n  license: MIT\n  license_file: COPYING\n  summary: 'An OpenType text shaping engine.'\n  description: |\n    HarfBuzz is a text shaping library. New Harbuzz targets various font\n    technologies while Old HarfBuzz targets only OpenType fonts.\n  doc_url: https://www.freedesktop.org/wiki/Software/HarfBuzz/\n  dev_url: https://github.com/behdad/harfbuzz\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n    - pkgw\n",
 "req":{
  "__set__":true,
  "elements":[
   "automake",
   "c_compiler_stub",
   "cairo",
   "cmake",
   "cxx_compiler_stub",
   "freetype",
   "glib",
   "gobject-introspection",
   "graphite2",
   "icu",
   "libtool",
   "make",
   "ninja",
   "patch",
   "pkg-config",
   "pthread-stubs",
   "python",
   "vs2015_win-64"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "automake",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libtool",
    "make",
    "ninja",
    "patch",
    "pkg-config",
    "pthread-stubs",
    "python",
    "vs2015_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cairo",
    "freetype",
    "glib",
    "gobject-introspection",
    "graphite2",
    "icu"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cairo",
    "freetype",
    "glib",
    "graphite2",
    "icu"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.4.1",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "automake",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libtool",
    "make",
    "ninja",
    "patch",
    "pkg-config",
    "pthread-stubs",
    "python >=2.7,<3",
    "vs2015_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cairo",
    "freetype",
    "glib",
    "gobject-introspection",
    "graphite2",
    "icu"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cairo",
    "freetype",
    "glib",
    "graphite2",
    "icu"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://www.freedesktop.org/software/harfbuzz/release/harfbuzz-2.4.0.tar.bz2",
 "version":"2.4.0"
}