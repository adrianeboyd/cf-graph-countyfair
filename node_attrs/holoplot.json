{
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 579, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 97, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/h/holoplot/holoplot-0.1.0.zip"
 },
 "conda-forge.yml":{},
 "feedstock_name":"holoplot",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"HoloPlot provides a high-level plotting API built on HoloViews that provides\na general and consistent API for plotting data in all the abovementioned\nformats. HoloPlot can integrate neatly with the individual libraries if an\nextension mechanism for the native plot APIs is offered, or it can be used\nas a standalone component.\n",
   "dev_url":"https://github.com/pyviz/holoplot",
   "doc_url":"https://pyviz.github.io/holoplot/",
   "home":"https://pyviz.github.io/holoplot/",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"/LICENSE",
   "summary":"A high-level plotting API for the PyData ecosystem built on HoloViews."
  },
  "build":{
   "entry_points":null,
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "CurtLH",
    "philippjfr",
    "jbednar",
    "CurtLH",
    "philippjfr",
    "jbednar",
    "CurtLH",
    "philippjfr",
    "jbednar"
   ]
  },
  "package":{
   "name":"holoplot",
   "version":"0.0.4"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "bokeh >=0.12.15",
    "holoviews >=1.10.4",
    "pandas",
    "python",
    "bokeh >=0.12.15",
    "holoviews >=1.10.4",
    "pandas",
    "python",
    "bokeh >=0.12.15",
    "holoviews >=1.10.4",
    "pandas"
   ]
  },
  "source":{
   "sha256":"2b32b78bea003085413634cb83a8c2a5f48fe41a338056b5b15f5673798c1be4",
   "url":"https://pypi.io/packages/source/h/holoplot/holoplot-0.0.4.zip"
  },
  "test":{
   "commands":[
    "nosetests holoplot",
    "nosetests holoplot",
    "nosetests holoplot"
   ],
   "imports":[
    "holoplot",
    "holoplot",
    "holoplot"
   ],
   "requires":[
    "nose",
    "parameterized",
    "nose",
    "parameterized",
    "nose",
    "parameterized"
   ]
  }
 },
 "name":"holoplot",
 "new_version":"0.1.0",
 "raw_meta_yaml":"{% set name = \"holoplot\" %}\n{% set version = \"0.0.4\" %}\n{% set sha256 = \"2b32b78bea003085413634cb83a8c2a5f48fe41a338056b5b15f5673798c1be4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  entry_points:\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - bokeh >=0.12.15\n    - holoviews >=1.10.4\n    - pandas\n\ntest:\n  imports:\n    - holoplot\n  requires:\n    - nose\n    - parameterized\n  commands:\n    - nosetests holoplot\n\nabout:\n  home: https://pyviz.github.io/holoplot/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: A high-level plotting API for the PyData ecosystem built on HoloViews.\n  description: |\n    HoloPlot provides a high-level plotting API built on HoloViews that provides\n    a general and consistent API for plotting data in all the abovementioned\n    formats. HoloPlot can integrate neatly with the individual libraries if an\n    extension mechanism for the native plot APIs is offered, or it can be used\n    as a standalone component.\n  doc_url: https://pyviz.github.io/holoplot/\n  dev_url: https://github.com/pyviz/holoplot\n\nextra:\n  recipe-maintainers:\n    - CurtLH\n    - philippjfr\n    - jbednar\n",
 "req":{
  "__set__":true,
  "elements":[
   "bokeh",
   "holoviews",
   "pandas",
   "pip",
   "python"
  ]
 },
 "url":"https://pypi.io/packages/source/h/holoplot/holoplot-0.0.4.zip",
 "version":"0.0.4"
}