{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199898607.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.5.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/215121239.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/227137429.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.6.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/237639705.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/241279382.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245931306.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.8.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.9.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/255673879.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.10.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265123747.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.10.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265555559.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.11.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265699075.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.11.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/270297361.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.11.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/288560356.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/292959859.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/295954324.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299333187.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/315122379.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/320091949.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/320242832.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/324005081.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.12.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/356761748.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.13.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/365300845.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.14.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/365473119.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.14.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"while parsing a block collection\n  in \"<unicode string>\", line 19, column 5:\n        - pushd <{ pkg_src }}\n        ^ (line: 19)\nexpected <block end>, but found '<scalar>'\n  in \"<unicode string>\", line 25, column 9:\n            etc_conda=$PREFIX/etc/conda;\n            ^ (line: 25)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 733, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 155, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 372, in migrate",
   "    cmeta = CondaMetaYAML(fp.read())",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 358, in __init__",
   "    self.meta = YAML_JINJA2.load(\"\".join(lines))",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/main.py\", line 341, in load",
   "    return constructor.get_single_data()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 111, in get_single_data",
   "    node = self.composer.get_single_node()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 78, in get_single_node",
   "    document = self.compose_document()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 101, in compose_document",
   "    node = self.compose_node(None, None)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node",
   "    node = self.compose_mapping_node(anchor)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 218, in compose_mapping_node",
   "    item_value = self.compose_node(node, item_key)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 138, in compose_node",
   "    node = self.compose_mapping_node(anchor)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 218, in compose_mapping_node",
   "    item_value = self.compose_node(node, item_key)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 136, in compose_node",
   "    node = self.compose_sequence_node(anchor)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/composer.py\", line 179, in compose_sequence_node",
   "    while not self.parser.check_event(SequenceEndEvent):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/parser.py\", line 140, in check_event",
   "    self.current_event = self.state()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/parser.py\", line 525, in parse_block_sequence_entry",
   "    token.start_mark,",
   "ruamel.yaml.parser.ParserError: while parsing a block collection",
   "  in \"<unicode string>\", line 19, column 5:",
   "        - pushd <{ pkg_src }}",
   "        ^ (line: 19)",
   "expected <block end>, but found '<scalar>'",
   "  in \"<unicode string>\", line 25, column 9:",
   "            etc_conda=$PREFIX/etc/conda;",
   "            ^ (line: 25)",
   ""
  ]
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"hub",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"hub is a command line tool that wraps git in order to extend it with\nextra features and commands that make working with GitHub easier.\n",
   "dev_url":"https://github.com/github/hub",
   "home":"https://github.com/github/hub",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"src/github.com/github/hub/LICENSE",
   "summary":"git + hub = github"
  },
  "build":{
   "number":"0",
   "script":[
    "pushd src/github.com/github/hub",
    "go install -v .",
    "bash -euf -c ' etc_conda=$PREFIX/etc/conda; for F in activate deactivate; do mkdir -p $etc_conda/$F.d; cp -v $RECIPE_DIR/$F.sh $etc_conda/$F.d/hub.sh; cp -v $RECIPE_DIR/$F.ps1 $etc_conda/$F.d/hub.ps1; done; mkdir -p $LIBRARY_PREFIX/etc/bash_completion.d; cp etc/hub.bash_completion.sh $LIBRARY_PREFIX/etc/bash_completion.d/hub.sh; '",
    "pushd src/github.com/github/hub",
    "go install -v .",
    "etc_conda=$PREFIX/etc/conda; for F in activate deactivate; do mkdir -p $etc_conda/$F.d; cp -v $RECIPE_DIR/$F.sh $etc_conda/$F.d/hub.sh; done; mkdir -p $PREFIX/etc/bash_completion.d; cp etc/hub.bash_completion.sh $PREFIX/etc/bash_completion.d/hub.sh;",
    "pushd src/github.com/github/hub",
    "go install -v .",
    "etc_conda=$PREFIX/etc/conda; for F in activate deactivate; do mkdir -p $etc_conda/$F.d; cp -v $RECIPE_DIR/$F.sh $etc_conda/$F.d/hub.sh; done; mkdir -p $PREFIX/etc/bash_completion.d; cp etc/hub.bash_completion.sh $PREFIX/etc/bash_completion.d/hub.sh;"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "sodre",
    "asford",
    "sodre",
    "asford",
    "sodre",
    "asford"
   ]
  },
  "package":{
   "name":"hub",
   "version":"2.14.1"
  },
  "requirements":{
   "build":[
    "go_compiler_stub",
    "m2-coreutils",
    "m2-bash",
    "go_compiler_stub",
    "go_compiler_stub"
   ]
  },
  "source":[
   {
    "folder":"src/github.com/github/hub",
    "sha256":"62c977a3691c3841c8cde4906673a314e76686b04d64cab92f3e01c3d778eb6f",
    "url":"https://github.com/github/hub/archive/v2.14.1.tar.gz"
   },
   {
    "folder":"src/github.com/github/hub",
    "sha256":"62c977a3691c3841c8cde4906673a314e76686b04d64cab92f3e01c3d778eb6f",
    "url":"https://github.com/github/hub/archive/v2.14.1.tar.gz"
   },
   {
    "folder":"src/github.com/github/hub",
    "sha256":"62c977a3691c3841c8cde4906673a314e76686b04d64cab92f3e01c3d778eb6f",
    "url":"https://github.com/github/hub/archive/v2.14.1.tar.gz"
   }
  ],
  "test":{
   "commands":[
    "bash -euf -c \" hub version | grep -q 'hub version 2.14.1'; etc_conda=$PREFIX/etc/conda; for F in activate deactivate; do test -r $etc_conda/$F.d/hub.sh; test -f $etc_conda/$F.d/hub.ps1; done; test -r $LIBRARY_PREFIX/etc/bash_completion.d/hub.sh; \"",
    "hub version | grep -q 'hub version 2.14.1'; etc_conda=$PREFIX/etc/conda; for F in activate deactivate; do test -r $etc_conda/$F.d/hub.sh; done; test -r $PREFIX/etc/bash_completion.d/hub.sh;",
    "hub version | grep -q 'hub version 2.14.1'; etc_conda=$PREFIX/etc/conda; for F in activate deactivate; do test -r $etc_conda/$F.d/hub.sh; done; test -r $PREFIX/etc/bash_completion.d/hub.sh;"
   ],
   "requires":null
  }
 },
 "name":"hub",
 "new_version":"2.14.2",
 "pinning_version":"2020.01.10",
 "raw_meta_yaml":"{% set goname = \"github.com/github/hub\" %}\n{% set version = \"2.14.1\" %}\n\n{% set name = goname.split('/')[-1] %}\n{% set pkg_src = ('src/'+goname).replace(\"/\",os.sep) %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - folder: {{ pkg_src }}\n    url: https://{{ goname }}/archive/v{{ version }}.tar.gz\n    sha256: 62c977a3691c3841c8cde4906673a314e76686b04d64cab92f3e01c3d778eb6f\n\nbuild:\n  number: 0\n  script:\n    - pushd {{ pkg_src }}\n    - go install -v .\n\n    # Note the semicolons\n    -\n      bash -euf -c '                                         # [ win ]\n        etc_conda=$PREFIX/etc/conda;\n        for F in activate deactivate; do\n          mkdir -p $etc_conda/$F.d;\n          cp -v $RECIPE_DIR/$F.sh $etc_conda/$F.d/hub.sh;\n          cp -v $RECIPE_DIR/$F.ps1 $etc_conda/$F.d/hub.ps1;  # [win]\n        done;\n        mkdir -p\n          $PREFIX/etc/bash_completion.d;                 # [unix]\n          $LIBRARY_PREFIX/etc/bash_completion.d;         # [win]\n        cp etc/hub.bash_completion.sh\n          $PREFIX/etc/bash_completion.d/hub.sh;          # [unix]\n          $LIBRARY_PREFIX/etc/bash_completion.d/hub.sh;  # [win]\n      '                                                  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('go') }}\n    - m2-coreutils  # [ win ]\n    - m2-bash  # [win]\n\ntest:\n  requires:\n    - m2-grep  # [ win ]\n  commands:\n    -\n      bash -euf -c \"                                           # [win]\n        hub version\n          | grep -q '{{ name }} version {{ version }}';\n        etc_conda=$PREFIX/etc/conda;\n        for F in activate deactivate; do\n          test -r $etc_conda/$F.d/hub.sh;\n          test -f $etc_conda/$F.d/hub.ps1;                     # [win]\n        done;\n        test -r $PREFIX/etc/bash_completion.d/hub.sh;          # [unix]\n        test -r $LIBRARY_PREFIX/etc/bash_completion.d/hub.sh;  # [win]\n      \"                                                        # [win]\n\nabout:\n  home: https://github.com/github/hub\n  license: MIT\n  license_family: MIT\n  license_file: src/github.com/github/hub/LICENSE\n  summary: 'git + hub = github'\n\n  description: |\n    hub is a command line tool that wraps git in order to extend it with\n    extra features and commands that make working with GitHub easier.\n  dev_url: https://github.com/github/hub\n\nextra:\n  recipe-maintainers:\n    - sodre\n    - asford\n",
 "req":{
  "__set__":true,
  "elements":[
   "go_compiler_stub",
   "m2-bash",
   "m2-coreutils"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "go_compiler_stub",
    "m2-bash",
    "m2-coreutils"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.5",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "go_compiler_stub",
    "m2-bash",
    "m2-coreutils"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/github/hub/archive/v2.12.3.tar.gz",
 "version":"2.14.1"
}