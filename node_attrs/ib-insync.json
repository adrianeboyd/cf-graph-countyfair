{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/305889937.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.56"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/i/ib_insync/ib_insync-0.9.57.zip"
 },
 "conda-forge.yml":{},
 "feedstock_name":"ib-insync",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The goal of the IB-insync library is to make working with the Trader Workstation API from Interactive Brokers as easy as possible.\nThe main features are\n* An easy to use linear style of programming;\n* An IB component that automatically keeps in sync with the TWS or IB Gateway application;\n* A fully asynchonous framework based on asyncio and eventkit for advanced users;\n* Interactive operation with live data in Jupyter notebooks.\n",
   "dev_url":"https://github.com/erdewit/ib_insync",
   "doc_url":"https://ib-insync.readthedocs.io/api.html",
   "home":"https://github.com/erdewit/ib_insync",
   "license":"BSD-2-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Python sync/async framework for Interactive Brokers API"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "yehoshuadimarsky",
    "yehoshuadimarsky",
    "yehoshuadimarsky"
   ]
  },
  "package":{
   "name":"ib-insync",
   "version":"0.9.56"
  },
  "requirements":{
   "host":[
    "python >=3.6",
    "pip",
    "setuptools",
    "python >=3.6",
    "pip",
    "setuptools",
    "python >=3.6",
    "pip",
    "setuptools"
   ],
   "run":[
    "python >=3.6",
    "eventkit",
    "nest-asyncio",
    "python >=3.6",
    "eventkit",
    "nest-asyncio",
    "python >=3.6",
    "eventkit",
    "nest-asyncio"
   ]
  },
  "source":{
   "sha256":"55105ab009c58b98fb8c11c9cb47738707efe831f98c9be75f59d194e6805dc7",
   "url":"https://pypi.io/packages/source/i/ib_insync/ib_insync-0.9.56.tar.gz"
  },
  "test":{
   "imports":[
    "ib_insync",
    "ib_insync",
    "ib_insync"
   ]
  }
 },
 "name":"ib-insync",
 "new_version":"0.9.57",
 "pinning_version":"2019.08.08",
 "raw_meta_yaml":"{% set name = \"ib-insync\" %}\n{% set nameUnderscore = \"ib_insync\" %}\n{% set version = \"0.9.56\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ nameUnderscore[0] }}/{{ nameUnderscore }}/{{ nameUnderscore }}-{{ version }}.tar.gz\n  sha256: 55105ab009c58b98fb8c11c9cb47738707efe831f98c9be75f59d194e6805dc7\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools\n  run:\n    - python >=3.6\n    - eventkit\n    - nest-asyncio\n\ntest:\n  imports:\n    - ib_insync\n\nabout:\n  home: https://github.com/erdewit/ib_insync\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Python sync/async framework for Interactive Brokers API'\n  description: |\n    The goal of the IB-insync library is to make working with the Trader Workstation API from Interactive Brokers as easy as possible.\n    The main features are\n    * An easy to use linear style of programming;\n    * An IB component that automatically keeps in sync with the TWS or IB Gateway application;\n    * A fully asynchonous framework based on asyncio and eventkit for advanced users;\n    * Interactive operation with live data in Jupyter notebooks.\n  doc_url: https://ib-insync.readthedocs.io/api.html\n  dev_url: https://github.com/erdewit/ib_insync\n\nextra:\n  recipe-maintainers:\n    - yehoshuadimarsky\n",
 "req":{
  "__set__":true,
  "elements":[
   "eventkit",
   "nest-asyncio",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://pypi.io/packages/source/i/ib_insync/ib_insync-0.9.56.tar.gz",
 "version":"0.9.56"
}