{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/301703028.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/308521466.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 656, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 386, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 316, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/geometryprocessing/libigl-python-bindings/tar.gz/0.3.1"
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"igl",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"libigl is a simple python and C++ geometry processing library.\nWe have a wide functionality including construction of\nsparse discrete differential geometry operators and\nfinite-elements matrices such as the cotangent Laplacian and\ndiagonalized mass matrix, and\nsimple facet and edge-based topology data structures.\n",
   "dev_url":"https://github.com/libigl/libigl/",
   "doc_url":"https://libigl.github.io/tutorial/",
   "home":"https://libigl.github.io",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"LICENSE.GPL",
   "summary":"Simple python geometry processing library"
  },
  "build":{
   "number":"0",
   "script":[
    "set \"CMAKE_GENERATOR=NMake Makefiles\"",
    " -m pip install . --no-deps -vv",
    " -m pip install . --no-deps -vv",
    " -m pip install . --no-deps -vv"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "teseoch",
    "fwilliams",
    "skoch9",
    "danielepanozzo",
    "teseoch",
    "fwilliams",
    "skoch9",
    "danielepanozzo",
    "teseoch",
    "fwilliams",
    "skoch9",
    "danielepanozzo"
   ]
  },
  "package":{
   "name":"igl",
   "version":"0.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host":[
    "python",
    "pip",
    "libblas",
    "libcblas",
    "make",
    "numpy",
    "scipy",
    "python",
    "pip",
    "libblas",
    "libcblas",
    "make",
    "numpy",
    "scipy",
    "python",
    "pip",
    "libblas",
    "libcblas",
    "make",
    "numpy",
    "scipy"
   ],
   "run":[
    "python",
    "compatible_pin_stub",
    "scipy",
    "python",
    "compatible_pin_stub",
    "scipy",
    "python",
    "compatible_pin_stub",
    "scipy"
   ]
  },
  "source":{
   "sha256":"31d0f9bdcedf1dd5411c0af794485c6980d8d02211ddbd464aa38863987cf5da",
   "url":"https://github.com/geometryprocessing/libigl-python-bindings/archive/0.3.tar.gz"
  },
  "test":{
   "imports":[
    "igl",
    "igl",
    "igl"
   ]
  }
 },
 "name":"igl",
 "new_version":"0.3.1",
 "pinning_version":"2019.08.12",
 "raw_meta_yaml":"{% set name = \"igl\" %}\n{% set version = \"0.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/geometryprocessing/libigl-python-bindings/archive/{{ version }}.tar.gz\n  sha256: 31d0f9bdcedf1dd5411c0af794485c6980d8d02211ddbd464aa38863987cf5da\n\nbuild:\n  number: 0\n  skip: True  # [py<31]\n  script:\n    - set \"CMAKE_GENERATOR=NMake Makefiles\"  # [win]\n    - \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - python\n    - pip\n    - libblas\n    - libcblas\n    - make\n    - numpy\n    - scipy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  imports:\n    - igl\n\nabout:\n  home: https://libigl.github.io\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE.GPL\n  summary: 'Simple python geometry processing library'\n  description: |\n    libigl is a simple python and C++ geometry processing library.\n    We have a wide functionality including construction of\n    sparse discrete differential geometry operators and\n    finite-elements matrices such as the cotangent Laplacian and\n    diagonalized mass matrix, and\n    simple facet and edge-based topology data structures.\n  doc_url: https://libigl.github.io/tutorial/\n  dev_url: https://github.com/libigl/libigl/\n\nextra:\n  recipe-maintainers:\n    - teseoch\n    - fwilliams\n    - skoch9\n    - danielepanozzo\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "compatible_pin_stub",
   "cxx_compiler_stub",
   "libblas",
   "libcblas",
   "make",
   "numpy",
   "pip",
   "python",
   "scipy"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://github.com/geometryprocessing/libigl-python-bindings/archive/0.3.tar.gz",
 "version":"0.3"
}