{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/222039812.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 257, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 675, in main",
   "    if gh.rate_limit()['resources']['core']['remaining'] == 0:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1867, in rate_limit",
   "    return self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"ilmbase",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "doc_url":"http://www.openexr.com/documentation.html",
   "home":"http://www.openexr.com/",
   "license":"Modified BSD",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"IlmBase libraries required for OpenEXR."
  },
  "build":{
   "number":"1001",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "npavlovikj",
    "SylvainCorlay",
    "wolfv",
    "JohanMabille",
    "npavlovikj",
    "SylvainCorlay",
    "wolfv",
    "JohanMabille",
    "npavlovikj",
    "SylvainCorlay",
    "wolfv",
    "JohanMabille"
   ]
  },
  "package":{
   "name":"ilmbase",
   "version":"2.3.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "zlib",
    "zlib",
    "zlib"
   ]
  },
  "source":{
   "sha256":"456978d1a978a5f823c7c675f3f36b0ae14dba36638aeaa3c4b0e784f12a3862",
   "url":"https://github.com/openexr/openexr/releases/download/v2.3.0/ilmbase-2.3.0.tar.gz"
  },
  "test":{
   "commands":[
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\half.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IlmThread.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\ImathMath.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\Iex.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IexMathExc.h exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Half.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Half_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IlmThread.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IlmThread_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Imath.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Imath_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Iex.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Iex_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IexMath.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IexMath_s.lib  exit 1",
    "test -f ${PREFIX}/include/OpenEXR/half.h",
    "test -f ${PREFIX}/include/OpenEXR/IlmThread.h",
    "test -f ${PREFIX}/include/OpenEXR/ImathMath.h",
    "test -f ${PREFIX}/include/OpenEXR/Iex.h",
    "test -f ${PREFIX}/include/OpenEXR/IexMathExc.h",
    "test -f ${PREFIX}/lib/libHalf.a",
    "test -f ${PREFIX}/lib/libHalf${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIlmThread.a",
    "test -f ${PREFIX}/lib/libIlmThread${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libImath.a",
    "test -f ${PREFIX}/lib/libImath${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIex.a",
    "test -f ${PREFIX}/lib/libIex${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIexMath.a",
    "test -f ${PREFIX}/lib/libIexMath${SHLIB_EXT}",
    "test -f ${PREFIX}/include/OpenEXR/half.h",
    "test -f ${PREFIX}/include/OpenEXR/IlmThread.h",
    "test -f ${PREFIX}/include/OpenEXR/ImathMath.h",
    "test -f ${PREFIX}/include/OpenEXR/Iex.h",
    "test -f ${PREFIX}/include/OpenEXR/IexMathExc.h",
    "test -f ${PREFIX}/lib/libHalf.a",
    "test -f ${PREFIX}/lib/libHalf${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIlmThread.a",
    "test -f ${PREFIX}/lib/libIlmThread${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libImath.a",
    "test -f ${PREFIX}/lib/libImath${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIex.a",
    "test -f ${PREFIX}/lib/libIex${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIexMath.a",
    "test -f ${PREFIX}/lib/libIexMath${SHLIB_EXT}"
   ]
  }
 },
 "name":"ilmbase",
 "new_version":"2.4.0",
 "pinning_version":"2018.10.10",
 "raw_meta_yaml":"{% set name = \"IlmBase\" %}\n{% set version = \"2.3.0\" %}\n{% set sha256 = \"456978d1a978a5f823c7c675f3f36b0ae14dba36638aeaa3c4b0e784f12a3862\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://github.com/openexr/openexr/releases/download/v{{ version }}/{{ name|lower }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1001\n  skip: true  # [win and vc<14]\n  run_exports:\n    # https\\://abi-laboratory.pro/\\?view\\=timeline\\&l\\=ilmbase\n    - {{ pin_subpackage(name|lower, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake  # [win]\n\n  host:\n    - zlib\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/OpenEXR/half.h                            # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/IlmThread.h                       # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/ImathMath.h                       # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/Iex.h                             # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/IexMathExc.h                      # [unix]\n    - test -f ${PREFIX}/lib/libHalf.a                                     # [unix]\n    - test -f ${PREFIX}/lib/libHalf${SHLIB_EXT}                           # [unix]\n    - test -f ${PREFIX}/lib/libIlmThread.a                                # [unix]\n    - test -f ${PREFIX}/lib/libIlmThread${SHLIB_EXT}                      # [unix]\n    - test -f ${PREFIX}/lib/libImath.a                                    # [unix]\n    - test -f ${PREFIX}/lib/libImath${SHLIB_EXT}                          # [unix]\n    - test -f ${PREFIX}/lib/libIex.a                                      # [unix]\n    - test -f ${PREFIX}/lib/libIex${SHLIB_EXT}                            # [unix]\n    - test -f ${PREFIX}/lib/libIexMath.a                                  # [unix]\n    - test -f ${PREFIX}/lib/libIexMath${SHLIB_EXT}                        # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\half.h  exit 1        # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IlmThread.h  exit 1   # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\ImathMath.h  exit 1   # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\Iex.h  exit 1         # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IexMathExc.h exit 1   # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Half.lib  exit 1                  # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Half_s.lib  exit 1                # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IlmThread.lib  exit 1             # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IlmThread_s.lib  exit 1           # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Imath.lib  exit 1                 # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Imath_s.lib  exit 1               # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Iex.lib  exit 1                   # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Iex_s.lib  exit 1                 # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IexMath.lib  exit 1               # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IexMath_s.lib  exit 1             # [win]\n\nabout:\n  home: http://www.openexr.com/\n  license: Modified BSD\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'IlmBase libraries required for OpenEXR.'\n  doc_url: http://www.openexr.com/documentation.html\n\nextra:\n  recipe-maintainers:\n    - npavlovikj\n    - SylvainCorlay\n    - wolfv\n    - JohanMabille\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "zlib"
  ]
 },
 "smithy_version":"3.1.12",
 "url":"https://github.com/openexr/openexr/releases/download/v2.3.0/ilmbase-2.3.0.tar.gz",
 "version":"2.3.0"
}