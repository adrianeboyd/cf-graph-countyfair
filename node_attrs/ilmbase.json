{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/222039812.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 660, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 133, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 647, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 526, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://github.com/AcademySoftwareFoundation/openexr/releases/download/v2.4.0/ilmbase-2.4.0.tar.gz"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"ilmbase",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "doc_url":"http://www.openexr.com/documentation.html",
   "home":"http://www.openexr.com/",
   "license":"Modified BSD",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"IlmBase libraries required for OpenEXR."
  },
  "build":{
   "number":"1001",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "npavlovikj",
    "SylvainCorlay",
    "wolfv",
    "JohanMabille",
    "npavlovikj",
    "SylvainCorlay",
    "wolfv",
    "JohanMabille",
    "npavlovikj",
    "SylvainCorlay",
    "wolfv",
    "JohanMabille"
   ]
  },
  "package":{
   "name":"ilmbase",
   "version":"2.3.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "zlib",
    "zlib",
    "zlib"
   ]
  },
  "source":{
   "sha256":"456978d1a978a5f823c7c675f3f36b0ae14dba36638aeaa3c4b0e784f12a3862",
   "url":"https://github.com/openexr/openexr/releases/download/v2.3.0/ilmbase-2.3.0.tar.gz"
  },
  "test":{
   "commands":[
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\half.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IlmThread.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\ImathMath.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\Iex.h  exit 1",
    "if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IexMathExc.h exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Half.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Half_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IlmThread.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IlmThread_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Imath.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Imath_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Iex.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\Iex_s.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IexMath.lib  exit 1",
    "if not exist %LIBRARY_PREFIX%\\lib\\IexMath_s.lib  exit 1",
    "test -f ${PREFIX}/include/OpenEXR/half.h",
    "test -f ${PREFIX}/include/OpenEXR/IlmThread.h",
    "test -f ${PREFIX}/include/OpenEXR/ImathMath.h",
    "test -f ${PREFIX}/include/OpenEXR/Iex.h",
    "test -f ${PREFIX}/include/OpenEXR/IexMathExc.h",
    "test -f ${PREFIX}/lib/libHalf.a",
    "test -f ${PREFIX}/lib/libHalf${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIlmThread.a",
    "test -f ${PREFIX}/lib/libIlmThread${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libImath.a",
    "test -f ${PREFIX}/lib/libImath${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIex.a",
    "test -f ${PREFIX}/lib/libIex${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIexMath.a",
    "test -f ${PREFIX}/lib/libIexMath${SHLIB_EXT}",
    "test -f ${PREFIX}/include/OpenEXR/half.h",
    "test -f ${PREFIX}/include/OpenEXR/IlmThread.h",
    "test -f ${PREFIX}/include/OpenEXR/ImathMath.h",
    "test -f ${PREFIX}/include/OpenEXR/Iex.h",
    "test -f ${PREFIX}/include/OpenEXR/IexMathExc.h",
    "test -f ${PREFIX}/lib/libHalf.a",
    "test -f ${PREFIX}/lib/libHalf${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIlmThread.a",
    "test -f ${PREFIX}/lib/libIlmThread${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libImath.a",
    "test -f ${PREFIX}/lib/libImath${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIex.a",
    "test -f ${PREFIX}/lib/libIex${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libIexMath.a",
    "test -f ${PREFIX}/lib/libIexMath${SHLIB_EXT}"
   ]
  }
 },
 "name":"ilmbase",
 "new_version":"2.4.0",
 "pinning_version":"2018.10.10",
 "raw_meta_yaml":"{% set name = \"IlmBase\" %}\n{% set version = \"2.3.0\" %}\n{% set sha256 = \"456978d1a978a5f823c7c675f3f36b0ae14dba36638aeaa3c4b0e784f12a3862\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://github.com/openexr/openexr/releases/download/v{{ version }}/{{ name|lower }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1001\n  skip: true  # [win and vc<14]\n  run_exports:\n    # https\\://abi-laboratory.pro/\\?view\\=timeline\\&l\\=ilmbase\n    - {{ pin_subpackage(name|lower, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake  # [win]\n\n  host:\n    - zlib\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/OpenEXR/half.h                            # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/IlmThread.h                       # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/ImathMath.h                       # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/Iex.h                             # [unix]\n    - test -f ${PREFIX}/include/OpenEXR/IexMathExc.h                      # [unix]\n    - test -f ${PREFIX}/lib/libHalf.a                                     # [unix]\n    - test -f ${PREFIX}/lib/libHalf${SHLIB_EXT}                           # [unix]\n    - test -f ${PREFIX}/lib/libIlmThread.a                                # [unix]\n    - test -f ${PREFIX}/lib/libIlmThread${SHLIB_EXT}                      # [unix]\n    - test -f ${PREFIX}/lib/libImath.a                                    # [unix]\n    - test -f ${PREFIX}/lib/libImath${SHLIB_EXT}                          # [unix]\n    - test -f ${PREFIX}/lib/libIex.a                                      # [unix]\n    - test -f ${PREFIX}/lib/libIex${SHLIB_EXT}                            # [unix]\n    - test -f ${PREFIX}/lib/libIexMath.a                                  # [unix]\n    - test -f ${PREFIX}/lib/libIexMath${SHLIB_EXT}                        # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\half.h  exit 1        # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IlmThread.h  exit 1   # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\ImathMath.h  exit 1   # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\Iex.h  exit 1         # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\OpenEXR\\IexMathExc.h exit 1   # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Half.lib  exit 1                  # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Half_s.lib  exit 1                # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IlmThread.lib  exit 1             # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IlmThread_s.lib  exit 1           # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Imath.lib  exit 1                 # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Imath_s.lib  exit 1               # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Iex.lib  exit 1                   # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\Iex_s.lib  exit 1                 # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IexMath.lib  exit 1               # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\IexMath_s.lib  exit 1             # [win]\n\nabout:\n  home: http://www.openexr.com/\n  license: Modified BSD\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'IlmBase libraries required for OpenEXR.'\n  doc_url: http://www.openexr.com/documentation.html\n\nextra:\n  recipe-maintainers:\n    - npavlovikj\n    - SylvainCorlay\n    - wolfv\n    - JohanMabille\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "zlib"
  ]
 },
 "smithy_version":"3.1.12",
 "url":"https://github.com/openexr/openexr/releases/download/v2.3.0/ilmbase-2.3.0.tar.gz",
 "version":"2.3.0"
}