{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/225104241.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 675, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 392, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 322, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/inferno-pytorch/inferno/tar.gz/0.4.0"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"inferno",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/inferno-pytorch/inferno",
   "license":"Apache 2.0",
   "license_family":"APACHE",
   "license_file":"LICENSE",
   "summary":"A utility library around PyTorch"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "constantinpape",
    "nasimrahaman",
    "constantinpape",
    "nasimrahaman",
    "constantinpape",
    "nasimrahaman"
   ]
  },
  "package":{
   "name":"inferno",
   "version":"v0.4.0"
  },
  "requirements":{
   "host":[
    "python >=3.6",
    "pip",
    "pytest-runner",
    "python >=3.6",
    "pip",
    "pytest-runner",
    "python >=3.6",
    "pip",
    "pytest-runner"
   ],
   "run":[
    "python >=3.6",
    "pyyaml",
    "scipy",
    "scikit-image",
    "h5py",
    "dill",
    "networkx",
    "tensorboardx >=1.4",
    "pytorch >=0.3,<1.2",
    "torchvision >=0.2,<0.3",
    "python >=3.6",
    "pyyaml",
    "scipy",
    "scikit-image",
    "h5py",
    "dill",
    "networkx",
    "tensorboardx >=1.4",
    "pytorch >=0.3,<1.2",
    "torchvision >=0.2,<0.3",
    "python >=3.6",
    "pyyaml",
    "scipy",
    "scikit-image",
    "h5py",
    "dill",
    "networkx",
    "tensorboardx >=1.4",
    "pytorch >=0.3,<1.2",
    "torchvision >=0.2,<0.3"
   ]
  },
  "source":{
   "sha256":"550a183cf84b6f0ad1a883e25d4852a713c5fe5403fb9b4fee54246084424a9c",
   "url":"https://github.com/inferno-pytorch/inferno/archive/v0.4.0.tar.gz"
  },
  "test":{
   "imports":[
    "os",
    "os",
    "os"
   ]
  }
 },
 "name":"inferno",
 "new_version":"0.4.0",
 "pinning_version":"2018.10.16",
 "raw_meta_yaml":"{% set version = \"v0.4.0\" %}\n{% set checksum = \"550a183cf84b6f0ad1a883e25d4852a713c5fe5403fb9b4fee54246084424a9c\" %}\n\npackage:\n    name: inferno\n    version: {{ version }}\n\nsource:\n    url: https://github.com/inferno-pytorch/inferno/archive/{{ version }}.tar.gz\n    sha256: {{ checksum }}\n\nbuild:\n    number: 0\n    script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n    noarch: python\n\nrequirements:\n    host:\n        - python >=3.6\n        - pip\n        - pytest-runner\n\n    run:\n        - python >=3.6\n        - pyyaml\n        - scipy\n        - scikit-image\n        - h5py\n        - dill\n        - networkx\n        - tensorboardx >=1.4\n        - pytorch >=0.3,<1.2\n        - torchvision >=0.2,<0.3\n\n# FIXME we use a dummy test here because the pytorch import fails\n# because it tries to use a version build against cuda, which cannot be loaded in travis\ntest:\n    imports:\n        # - inferno\n        - os\n\nabout:\n    license: Apache 2.0\n    license_file: LICENSE\n    license_family: APACHE\n    summary: A utility library around PyTorch\n    home: https://github.com/inferno-pytorch/inferno\n\nextra:\n    recipe-maintainers:\n        - constantinpape\n        - nasimrahaman\n",
 "req":{
  "__set__":true,
  "elements":[
   "dill",
   "h5py",
   "networkx",
   "pip",
   "pytest-runner",
   "python",
   "pytorch",
   "pyyaml",
   "scikit-image",
   "scipy",
   "tensorboardx",
   "torchvision"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568135297.2033327,
 "url":"https://github.com/inferno-pytorch/inferno/archive/v0.4.0.tar.gz",
 "version":"v0.4.0"
}