{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/306091744.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353674222.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 674, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 139, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/jhuapl-boss/intern/tar.gz/v19-hotfix"
 },
 "conda-forge.yml":{},
 "feedstock_name":"intern",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/jhuapl-boss/intern",
   "license":"Apache 2.0",
   "license_file":"license",
   "summary":"Python 2/3 SDK for interacting with the Boss REST API "
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "jtpdowns",
    "stuarteberg",
    "jtpdowns",
    "stuarteberg",
    "jtpdowns",
    "stuarteberg"
   ]
  },
  "package":{
   "name":"intern",
   "version":"1.0.5"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "requests >=2.11.1",
    "python-blosc >=1.4.4",
    "six",
    "python",
    "requests >=2.11.1",
    "python-blosc >=1.4.4",
    "six",
    "python",
    "requests >=2.11.1",
    "python-blosc >=1.4.4",
    "six"
   ]
  },
  "source":{
   "sha256":"1768f77e2492539c6c5a2161c4fbc18dbe503835f6fb2340df38f33359a23992",
   "url":"https://github.com/jhuapl-boss/intern/archive/v1.0.5.tar.gz"
  },
  "test":{
   "imports":[
    "intern",
    "intern.remote.boss.remote",
    "intern.resource.boss.resource",
    "intern.service.boss.service",
    "intern.utils.parallel",
    "intern",
    "intern.remote.boss.remote",
    "intern.resource.boss.resource",
    "intern.service.boss.service",
    "intern.utils.parallel",
    "intern",
    "intern.remote.boss.remote",
    "intern.resource.boss.resource",
    "intern.service.boss.service",
    "intern.utils.parallel"
   ]
  }
 },
 "name":"intern",
 "new_version":"19-hotfix",
 "pinning_version":"2019.12.02",
 "raw_meta_yaml":"{% set version = \"1.0.5\" %}\n\npackage:\n  name: intern\n  version: {{ version }}\n\nsource:\n  url: https://github.com/jhuapl-boss/intern/archive/v{{ version }}.tar.gz\n  sha256: 1768f77e2492539c6c5a2161c4fbc18dbe503835f6fb2340df38f33359a23992\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv\"\n  noarch: python\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - requests >=2.11.1\n    - python-blosc >=1.4.4\n    - six\n\ntest:\n\n# We can't run the full test suite without boss credentials,\n# so we don't bother with these for now\n#  requires:\n#    - mock\n#    - nose2\n\n  imports:\n    - intern\n    - intern.remote.boss.remote\n    - intern.resource.boss.resource\n    - intern.service.boss.service\n    - intern.utils.parallel\n\nabout:\n  home: https://github.com/jhuapl-boss/intern\n  license: Apache 2.0\n  license_file: license\n  summary: 'Python 2/3 SDK for interacting with the Boss REST API '\n\nextra:\n  recipe-maintainers:\n    - jtpdowns\n    - stuarteberg\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python",
   "python-blosc",
   "requests",
   "six"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python",
    "python-blosc",
    "requests",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.5",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python",
    "python-blosc >=1.4.4",
    "requests >=2.11.1",
    "six"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/jhuapl-boss/intern/archive/v1.0.5.tar.gz",
 "version":"1.0.5"
}