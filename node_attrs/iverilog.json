{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"10_2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/196928046.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223783738.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/293487596.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"readline-8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/307769981.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"10.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 664, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 133, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 647, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 526, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/steveicarus/iverilog/tar.gz/v20150603"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"iverilog",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://iverilog.icarus.com/home",
   "license":"GPL-2.0",
   "summary":"Icarus Verilog is intended to compile ALL of the Verilog HDL as described in the IEEE-1364 standard."
  },
  "build":{
   "detect_binary_files_with_prefix":true,
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "tfors",
    "carlodri",
    "tfors",
    "carlodri",
    "tfors",
    "carlodri"
   ]
  },
  "package":{
   "name":"iverilog",
   "version":"10.3"
  },
  "requirements":{
   "build":[
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "m2-autoconf",
    "m2-make",
    "m2-grep",
    "m2-bison",
    "m2-sed",
    "m2-bash",
    "autoconf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "m2-libreadline",
    "m2-gperf",
    "m2-flex",
    "zlib",
    "gperf",
    "bison",
    "flex",
    "readline",
    "zlib",
    "gperf",
    "bison",
    "flex",
    "readline",
    "zlib"
   ]
  },
  "source":{
   "sha256":"4b884261645a73b37467242d6ae69264fdde2e7c4c15b245d902531efaaeb234",
   "url":"https://github.com/steveicarus/iverilog/archive/v10_3.tar.gz"
  },
  "test":{
   "commands":[
    "iverilog -V",
    "vvp -V",
    "test -f \"${PREFIX}/bin/iverilog\"",
    "test -f \"${PREFIX}/bin/iverilog-vpi\"",
    "test -f \"${PREFIX}/bin/vvp\"",
    "test -f \"${PREFIX}/lib/libveriuser.a\"",
    "test -f \"${PREFIX}/lib/libvpi.a\"",
    "test -f \"${PREFIX}/lib/ivl/ivl\"",
    "test -f \"${PREFIX}/lib/ivl/ivlpp\"",
    "test -f \"${PREFIX}/lib/ivl/vhdlpp\"",
    "iverilog -V",
    "vvp -V",
    "test -f \"${PREFIX}/bin/iverilog\"",
    "test -f \"${PREFIX}/bin/iverilog-vpi\"",
    "test -f \"${PREFIX}/bin/vvp\"",
    "test -f \"${PREFIX}/lib/libveriuser.a\"",
    "test -f \"${PREFIX}/lib/libvpi.a\"",
    "test -f \"${PREFIX}/lib/ivl/ivl\"",
    "test -f \"${PREFIX}/lib/ivl/ivlpp\"",
    "test -f \"${PREFIX}/lib/ivl/vhdlpp\"",
    "iverilog -V",
    "vvp -V"
   ]
  }
 },
 "name":"iverilog",
 "new_version":"20150603",
 "pinning_version":"2019.08.11",
 "raw_meta_yaml":"{% set version = \"10.3\" %}\n\npackage:\n  name: iverilog\n  version: {{ version }}\n\nsource:\n  url: https://github.com/steveicarus/iverilog/archive/v{{ version | replace(\".\", \"_\") }}.tar.gz\n  sha256: 4b884261645a73b37467242d6ae69264fdde2e7c4c15b245d902531efaaeb234\n\nbuild:\n  number: 0\n  detect_binary_files_with_prefix: True\n\nrequirements:\n  build:\n    - autoconf  # [not win]\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('cxx') }}  # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - m2-autoconf  # [win]\n    - m2-make  # [win]\n    - m2-grep  # [win]\n    - m2-bison  # [win]\n    - m2-sed  # [win]\n    - m2-bash  # [win]\n  host:\n    - gperf  # [not win]\n    - bison  # [not win]\n    - flex  # [not win]\n    - readline  # [not win]\n    - m2-libreadline  # [win]\n    - m2-gperf  # [win]\n    - m2-flex  # [win]\n    - zlib\n\ntest:\n  commands:\n    - test -f \"${PREFIX}/bin/iverilog\"  # [unix]\n    - test -f \"${PREFIX}/bin/iverilog-vpi\"  # [unix]\n    - test -f \"${PREFIX}/bin/vvp\"  # [unix]\n    - test -f \"${PREFIX}/lib/libveriuser.a\"  # [unix]\n    - test -f \"${PREFIX}/lib/libvpi.a\"  # [unix]\n    - test -f \"${PREFIX}/lib/ivl/ivl\"  # [unix]\n    - test -f \"${PREFIX}/lib/ivl/ivlpp\"  # [unix]\n    - test -f \"${PREFIX}/lib/ivl/vhdlpp\"  # [unix]\n    - iverilog -V\n    - vvp -V\n\nabout:\n  home: http://iverilog.icarus.com/home\n  license: GPL-2.0\n  summary: 'Icarus Verilog is intended to compile ALL of the Verilog HDL as described in the IEEE-1364 standard.'\n\nextra:\n  recipe-maintainers:\n    - tfors\n    - carlodri\n",
 "req":{
  "__set__":true,
  "elements":[
   "autoconf",
   "bison",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "flex",
   "gperf",
   "m2-autoconf",
   "m2-bash",
   "m2-bison",
   "m2-flex",
   "m2-gperf",
   "m2-grep",
   "m2-libreadline",
   "m2-make",
   "m2-sed",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "readline",
   "zlib"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://github.com/steveicarus/iverilog/archive/v10_3.tar.gz",
 "version":"10.3"
}