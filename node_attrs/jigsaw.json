{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/276675797.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.10"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/290930449.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.11"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/368645788.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.12"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/486316078.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.13"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived":false,
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"jigsaw",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "description":"JIGSAW is a computational library for unstructured mesh generation and\ntessellation; designed to generate high-quality triangulations and\npolyhedral decompositions of general planar, surface and volumetric\ndomains. JIGSAW includes refinement-based algorithms for the construction\nof new meshes, optimisation-driven techniques for the improvement of\nexisting grids, as well as routines to assemble (restricted) Delaunay\ntessellations and Voronoi complexes.\n\nThis package provides the underlying C++ source for JIGSAW; defining a\nbasic command-line interface and a C-format API. A MATLAB / OCTAVE based\nscripting interface, including a range of additional facilities for file\nI/O, mesh visualisation and post-processing operations can be found at\nhttps://github.com/dengwirda/jigsaw-matlab.\n",
   "dev_url":"https://github.com/dengwirda/jigsaw",
   "doc_url":"https://github.com/dengwirda/jigsaw",
   "home":"https://github.com/dengwirda/jigsaw",
   "license":"custom",
   "license_file":"LICENSE.md",
   "summary":"JIGSAW is a Delaunay-based unstructured mesh generator for two- and\nthree-dimensional geometries.\n"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "xylar",
    "dengwirda"
   ]
  },
  "package":{
   "name":"jigsaw",
   "version":"0.9.13"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source":{
   "sha256":"f134baedcbfe02bac1fd6662a517b35f052a97abec1740073d0e34adf561d35d",
   "url":"https://github.com/dengwirda/jigsaw/archive/v0.9.13.tar.gz"
  },
  "test":{
   "commands":[
    "jigsaw example.jig"
   ],
   "source_files":[
    "example.jig",
    "geo/bunny.msh",
    "out/.keep"
   ]
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "description":"JIGSAW is a computational library for unstructured mesh generation and\ntessellation; designed to generate high-quality triangulations and\npolyhedral decompositions of general planar, surface and volumetric\ndomains. JIGSAW includes refinement-based algorithms for the construction\nof new meshes, optimisation-driven techniques for the improvement of\nexisting grids, as well as routines to assemble (restricted) Delaunay\ntessellations and Voronoi complexes.\n\nThis package provides the underlying C++ source for JIGSAW; defining a\nbasic command-line interface and a C-format API. A MATLAB / OCTAVE based\nscripting interface, including a range of additional facilities for file\nI/O, mesh visualisation and post-processing operations can be found at\nhttps://github.com/dengwirda/jigsaw-matlab.\n",
   "dev_url":"https://github.com/dengwirda/jigsaw",
   "doc_url":"https://github.com/dengwirda/jigsaw",
   "home":"https://github.com/dengwirda/jigsaw",
   "license":"custom",
   "license_file":"LICENSE.md",
   "summary":"JIGSAW is a Delaunay-based unstructured mesh generator for two- and\nthree-dimensional geometries.\n"
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "xylar",
    "dengwirda",
    "xylar",
    "dengwirda",
    "xylar",
    "dengwirda"
   ]
  },
  "package":{
   "name":"jigsaw",
   "version":"0.9.13"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source":{
   "sha256":"f134baedcbfe02bac1fd6662a517b35f052a97abec1740073d0e34adf561d35d",
   "url":"https://github.com/dengwirda/jigsaw/archive/v0.9.13.tar.gz"
  },
  "test":{
   "commands":[
    "jigsaw example.jig",
    "jigsaw example.jig",
    "jigsaw example.jig"
   ],
   "source_files":[
    "example.jig",
    "geo/bunny.msh",
    "out/.keep",
    "example.jig",
    "geo/bunny.msh",
    "out/.keep",
    "example.jig",
    "geo/bunny.msh",
    "out/.keep"
   ]
  }
 },
 "name":"jigsaw",
 "new_version":"0.9.13",
 "new_version_attempts":{
  "0.9.13":1
 },
 "new_version_errors":{},
 "osx_64_meta_yaml":{
  "about":{
   "description":"JIGSAW is a computational library for unstructured mesh generation and\ntessellation; designed to generate high-quality triangulations and\npolyhedral decompositions of general planar, surface and volumetric\ndomains. JIGSAW includes refinement-based algorithms for the construction\nof new meshes, optimisation-driven techniques for the improvement of\nexisting grids, as well as routines to assemble (restricted) Delaunay\ntessellations and Voronoi complexes.\n\nThis package provides the underlying C++ source for JIGSAW; defining a\nbasic command-line interface and a C-format API. A MATLAB / OCTAVE based\nscripting interface, including a range of additional facilities for file\nI/O, mesh visualisation and post-processing operations can be found at\nhttps://github.com/dengwirda/jigsaw-matlab.\n",
   "dev_url":"https://github.com/dengwirda/jigsaw",
   "doc_url":"https://github.com/dengwirda/jigsaw",
   "home":"https://github.com/dengwirda/jigsaw",
   "license":"custom",
   "license_file":"LICENSE.md",
   "summary":"JIGSAW is a Delaunay-based unstructured mesh generator for two- and\nthree-dimensional geometries.\n"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "xylar",
    "dengwirda"
   ]
  },
  "package":{
   "name":"jigsaw",
   "version":"0.9.13"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source":{
   "sha256":"f134baedcbfe02bac1fd6662a517b35f052a97abec1740073d0e34adf561d35d",
   "url":"https://github.com/dengwirda/jigsaw/archive/v0.9.13.tar.gz"
  },
  "test":{
   "commands":[
    "jigsaw example.jig"
   ],
   "source_files":[
    "example.jig",
    "geo/bunny.msh",
    "out/.keep"
   ]
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "pinning_version":"2020.09.11.19.40.57",
 "raw_meta_yaml":"{% set name = \"JIGSAW\" %}\n{% set version = \"0.9.13\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dengwirda/jigsaw/archive/v{{ version }}.tar.gz\n  sha256: f134baedcbfe02bac1fd6662a517b35f052a97abec1740073d0e34adf561d35d\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n\ntest:\n  source_files:\n    - example.jig\n    - geo/bunny.msh\n    - out/.keep\n  commands:\n    - jigsaw example.jig\n\nabout:\n  home: https://github.com/dengwirda/jigsaw\n  license: custom\n  license_file: LICENSE.md\n  summary: |\n    JIGSAW is a Delaunay-based unstructured mesh generator for two- and\n    three-dimensional geometries.\n  description: |\n    JIGSAW is a computational library for unstructured mesh generation and\n    tessellation; designed to generate high-quality triangulations and\n    polyhedral decompositions of general planar, surface and volumetric\n    domains. JIGSAW includes refinement-based algorithms for the construction\n    of new meshes, optimisation-driven techniques for the improvement of\n    existing grids, as well as routines to assemble (restricted) Delaunay\n    tessellations and Voronoi complexes.\n\n    This package provides the underlying C++ source for JIGSAW; defining a\n    basic command-line interface and a C-format API. A MATLAB / OCTAVE based\n    scripting interface, including a range of additional facilities for file\n    I/O, mesh visualisation and post-processing operations can be found at\n    https://github.com/dengwirda/jigsaw-matlab.\n  doc_url: https://github.com/dengwirda/jigsaw\n  dev_url: https://github.com/dengwirda/jigsaw\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - dengwirda\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/dengwirda/jigsaw/archive/v0.9.11.tar.gz",
 "version":"0.9.13",
 "win_64_meta_yaml":{
  "about":{
   "description":"JIGSAW is a computational library for unstructured mesh generation and\ntessellation; designed to generate high-quality triangulations and\npolyhedral decompositions of general planar, surface and volumetric\ndomains. JIGSAW includes refinement-based algorithms for the construction\nof new meshes, optimisation-driven techniques for the improvement of\nexisting grids, as well as routines to assemble (restricted) Delaunay\ntessellations and Voronoi complexes.\n\nThis package provides the underlying C++ source for JIGSAW; defining a\nbasic command-line interface and a C-format API. A MATLAB / OCTAVE based\nscripting interface, including a range of additional facilities for file\nI/O, mesh visualisation and post-processing operations can be found at\nhttps://github.com/dengwirda/jigsaw-matlab.\n",
   "dev_url":"https://github.com/dengwirda/jigsaw",
   "doc_url":"https://github.com/dengwirda/jigsaw",
   "home":"https://github.com/dengwirda/jigsaw",
   "license":"custom",
   "license_file":"LICENSE.md",
   "summary":"JIGSAW is a Delaunay-based unstructured mesh generator for two- and\nthree-dimensional geometries.\n"
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "xylar",
    "dengwirda"
   ]
  },
  "package":{
   "name":"jigsaw",
   "version":"0.9.13"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ]
  },
  "source":{
   "sha256":"f134baedcbfe02bac1fd6662a517b35f052a97abec1740073d0e34adf561d35d",
   "url":"https://github.com/dengwirda/jigsaw/archive/v0.9.13.tar.gz"
  },
  "test":{
   "commands":[
    "jigsaw example.jig"
   ],
   "source_files":[
    "example.jig",
    "geo/bunny.msh",
    "out/.keep"
   ]
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}