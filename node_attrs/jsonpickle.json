{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.9.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199950204.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217850663.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/247856914.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/281872591.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/375246104.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/402533249.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/406836341.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"jsonpickle",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/jsonpickle/jsonpickle",
   "home":"http://jsonpickle.github.io/",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"COPYING",
   "summary":"Python library for serializing any arbitrary object graph into JSON. It can take almost any Python object and turn the object into JSON. Additionally, it can reconstitute the object back into Python."
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "robmcmullen",
    "ChrisBarker-NOAA",
    "robmcmullen",
    "ChrisBarker-NOAA",
    "robmcmullen",
    "ChrisBarker-NOAA"
   ]
  },
  "package":{
   "name":"jsonpickle",
   "version":"1.3"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"jsonpickle-1.3.tar.gz",
   "sha256":"71bca2b80ae28af4e3f86629ef247100af7f97032b5ca8d791c1f8725b411d95",
   "url":"https://pypi.io/packages/source/j/jsonpickle/jsonpickle-1.3.tar.gz"
  },
  "test":{
   "imports":[
    "jsonpickle",
    "jsonpickle",
    "jsonpickle"
   ]
  }
 },
 "name":"jsonpickle",
 "new_version":"1.4.1",
 "new_version_attempts":{
  "1.4":1,
  "1.4.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.21.12.59.15",
 "raw_meta_yaml":"{% set name = \"jsonpickle\" %}\n{% set version = \"1.3\" %}\n{% set sha256 = \"71bca2b80ae28af4e3f86629ef247100af7f97032b5ca8d791c1f8725b411d95\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - jsonpickle\n\nabout:\n  summary: Python library for serializing any arbitrary object graph into JSON. It can take almost any Python object and turn the object into JSON. Additionally, it can reconstitute the object back into Python.\n  home: http://jsonpickle.github.io/\n  dev_url: https://github.com/jsonpickle/jsonpickle\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: COPYING\n\nextra:\n  recipe-maintainers:\n    - robmcmullen\n    - ChrisBarker-NOAA\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/j/jsonpickle/jsonpickle-1.2.tar.gz",
 "version":"1.3"
}