{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/343595208.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 660, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 133, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 647, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 526, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/l/lensfunpy/lensfunpy-1.7.0.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"lensfunpy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/letmaik/lensfunpy",
   "doc_url":"https://pypi.org/project/lensfunpy/",
   "home":"https://letmaik.github.io/lensfunpy/index.html",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"lensfunpy is an easy-to-use Python wrapper for the lensfun library."
  },
  "build":{
   "number":"0",
   "script":"-m pip install . -vv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "oblute",
    "mwilson8",
    "oblute",
    "mwilson8",
    "oblute",
    "mwilson8"
   ]
  },
  "package":{
   "name":"lensfunpy",
   "version":"1.6.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkg-config"
   ],
   "host":[
    "pip",
    "python",
    "lensfun <0.3.95",
    "numpy",
    "pip",
    "python",
    "lensfun <0.3.95",
    "numpy",
    "pip",
    "python",
    "lensfun <0.3.95",
    "numpy"
   ],
   "run":[
    "compatible_pin_stub",
    "lensfun <0.3.95",
    "compatible_pin_stub",
    "python",
    "cython",
    "scipy",
    "compatible_pin_stub",
    "lensfun <0.3.95",
    "compatible_pin_stub",
    "python",
    "cython",
    "scipy",
    "compatible_pin_stub",
    "lensfun <0.3.95",
    "compatible_pin_stub",
    "python",
    "cython",
    "scipy"
   ]
  },
  "source":{
   "patches":[
    "0002_remove_osx_condition.patch",
    "0002_remove_osx_condition.patch",
    "0002_remove_osx_condition.patch"
   ],
   "sha256":"d173e6fdbbeb83c10401ad7af276606e812960307c0d5dc58f03c3a39efd7746",
   "url":"https://pypi.io/packages/source/l/lensfunpy/lensfunpy-1.6.1.tar.gz"
  },
  "test":{
   "imports":[
    "lensfunpy",
    "lensfunpy",
    "lensfunpy"
   ]
  }
 },
 "name":"lensfunpy",
 "new_version":"1.7.0",
 "pinning_version":"2019.11.18",
 "raw_meta_yaml":"{% set name = \"lensfunpy\" %}\n{% set version = \"1.6.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d173e6fdbbeb83c10401ad7af276606e812960307c0d5dc58f03c3a39efd7746\n  patches:\n    - 0002_remove_osx_condition.patch  \n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv \n  skip: True  # [win or py<27]\n   \nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkg-config        \n  host:\n    - pip\n    - python\n    - lensfun <0.3.95\n    - numpy\n  run:\n    - {{ pin_compatible('numpy') }}\n    - lensfun <0.3.95\n    - {{ pin_compatible('lensfun') }}\n    - python\n    - cython\n    - scipy\n    - enum34  # [py<34]\n\ntest:\n  imports:\n    - lensfunpy\n\nabout:\n  home: https://letmaik.github.io/lensfunpy/index.html\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: \"lensfunpy is an easy-to-use Python wrapper for the lensfun library.\"\n  doc_url: https://pypi.org/project/lensfunpy/\n  dev_url: https://github.com/letmaik/lensfunpy\n\nextra:\n  recipe-maintainers:\n    - oblute\n    - mwilson8\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "compatible_pin_stub",
   "cxx_compiler_stub",
   "cython",
   "lensfun",
   "numpy",
   "pip",
   "pkg-config",
   "python",
   "scipy"
  ]
 },
 "smithy_version":"3.6.2",
 "url":"https://pypi.io/packages/source/l/lensfunpy/lensfunpy-1.6.1.tar.gz",
 "version":"1.6.1"
}