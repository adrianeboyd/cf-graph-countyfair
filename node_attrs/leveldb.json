{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.20"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/234063096.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"HTTP Error 404: Not Found",
  "traceback":"Traceback (most recent call last):\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 578, in main\n    hash_type=attrs.get('hash_type', 'sha256'))\n  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 96, in run\n    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate\n    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)\n  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns\n    hash = hash_url(url, hash_type)\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url\n    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):\n  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress\n    with urllib.request.urlopen(url) as f:\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen\n    return opener.open(url, data, timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error\n    result = self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302\n    return self.parent.open(new, timeout=req.timeout)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open\n    response = meth(req, response)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response\n    'http', request, response, code, msg, hdrs)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error\n    return self._call_chain(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n    result = func(*args)\n  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\nurllib.error.HTTPError: HTTP Error 404: Not Found\n"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"leveldb",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/google/leveldb",
   "license":"BSD 3-Clause",
   "license_file":"LICENSE",
   "summary":"A fast key-value storage library providing ordered mappings."
  },
  "build":{
   "number":"1001",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "jakirkham",
    "xhochy",
    "jakirkham",
    "xhochy",
    "jakirkham",
    "xhochy"
   ]
  },
  "package":{
   "name":"leveldb",
   "version":"1.20"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "snappy",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "snappy",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "snappy"
   ],
   "run":[
    "snappy",
    "snappy",
    "snappy"
   ]
  },
  "source":{
   "fn":"v1.20.tar.gz",
   "sha256":"f5abe8b5b209c2f36560b75f32ce61412f39a2922f7045ae764a2c23335b6664",
   "url":"https://github.com/google/leveldb/archive/v1.20.tar.gz"
  },
  "test":{
   "commands":[
    "test -f ${PREFIX}/lib/libmemenv.a",
    "test -f ${PREFIX}/lib/libleveldb.a",
    "test -f ${PREFIX}/lib/libleveldb${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libmemenv.a",
    "test -f ${PREFIX}/lib/libleveldb.a",
    "test -f ${PREFIX}/lib/libleveldb${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libmemenv.a",
    "test -f ${PREFIX}/lib/libleveldb.a",
    "test -f ${PREFIX}/lib/libleveldb${SHLIB_EXT}"
   ]
  }
 },
 "name":"leveldb",
 "new_version":false,
 "pinning_version":"2018.11.26",
 "raw_meta_yaml":"{% set version = \"1.20\" %}\n{% set hash = \"f5abe8b5b209c2f36560b75f32ce61412f39a2922f7045ae764a2c23335b6664\" %}\n\npackage:\n  name: leveldb\n  version: {{ version }}\n\nsource:\n  fn: v{{ version }}.tar.gz\n  url: https://github.com/google/leveldb/archive/v{{ version }}.tar.gz\n  sha256: {{ hash }}\n\nbuild:\n  number: 1001\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - snappy\n\n  run:\n    - snappy\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libmemenv.a\n    - test -f ${PREFIX}/lib/libleveldb.a\n    - test -f ${PREFIX}/lib/libleveldb${SHLIB_EXT}\n\nabout:\n  home: https://github.com/google/leveldb\n  license: BSD 3-Clause\n  license_file: LICENSE\n  summary: A fast key-value storage library providing ordered mappings.\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - xhochy\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cxx_compiler_stub",
   "snappy"
  ]
 },
 "smithy_version":"3.1.12",
 "time":1568072474.5581625,
 "url":"https://github.com/google/leveldb/archive/v1.20.tar.gz",
 "version":"1.20"
}