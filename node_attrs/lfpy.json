{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/296524556.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/316931586.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"mpich-3.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "id":"3c2272be-d388-4388-9056-7109fda240b3",
    "merged_at":"never issued",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"mpich-3.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/349554847.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/2d9d876a-8f6e-4141-ad08-9e868e383f08.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/394380395.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/441049126.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived":false,
 "bad":"make_graph: 500",
 "conda-forge.yml":{},
 "feedstock_name":"lfpy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url":"https://github.com/LFPy/LFPy",
   "doc_url":"https://lfpy.readthedocs.io",
   "home":"https://github.com/LFPy/LFPy",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . --no-deps -vv",
   "skip":true,
   "string":"mpi_pyh_0"
  },
  "extra":{
   "recipe-maintainers":[
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk"
   ]
  },
  "package":{
   "name":"lfpy",
   "version":"2.0.4"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron"
   ],
   "run":[
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*",
    "python",
    "setuptools",
    "cython >=0.20",
    "numpy",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*"
   ]
  },
  "source":{
   "sha256":"a66c1d62581348bc0a0d96abf805611fca4c7779ac92b421165d9f666e8cc26c",
   "url":"https://pypi.io/packages/source/l/lfpy/LFPy-2.0.4.tar.gz"
  },
  "test":{
   "commands":[
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy"
   ],
   "imports":[
    "LFPy",
    "LFPy",
    "LFPy"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name":"lfpy",
 "new_version":false,
 "new_version_attempts":{
  "2.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.06.24.16.31.11",
 "raw_meta_yaml":"{% set name = \"LFPy\" %}\n{% set version = \"2.1\" %}\n{% set build = 1 %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lfpy/{{ name }}-{{ version }}.tar.gz\n  sha256: 2cf08add2494f259e5880e9a0f8d4edf690ff2bbeb590030912dbf25bdf192bf\n\nbuild:\n  number: {{ build }}\n  {% set mpi_prefix = \"mpi_\" + mpi %} # use mpi_*` neuron variant\n  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython >=0.20\n    - numpy >=1.8\n    - neuron\n    - {{ mpi }}\n    - meautility >=1.4\n  run:\n    - python\n    - setuptools\n    - cython >=0.20\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.14\n    - h5py >=2.5\n    - mpi4py >=1.2\n    - {{ mpi }}\n    - neuron >=7.6.7 {{ mpi_prefix }}_*\n    - meautility >=1.4\n    - ncurses\n    - readline\n\ntest:\n  requires:\n    - openssh  # [mpi == \"openmpi\"]\n    - pytest\n  imports:\n    - LFPy\n  commands:\n    - py.test -vsx --pyargs LFPy\n\nabout:\n  home: https://github.com/LFPy/LFPy\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  summary: LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models\n\n  description: |\n    LFPy provides a set of easy-to-use Python classes for setting up your\n    model, running your simulations and calculating the extracellular\n    potentials arising from activity in your model neuron. If you have a model\n    working in NEURON or NeuroML2 already, it is likely that it can be adapted\n    to work with LFPy.\n\n  doc_url: https://lfpy.readthedocs.io\n  dev_url: https://github.com/LFPy/LFPy\n\nextra:\n  recipe-maintainers:\n    - espenhgn\n    - minrk\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "h5py",
   "mpi4py",
   "mpich",
   "neuron",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "neuron",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cython",
    "h5py",
    "mpi4py",
    "mpich",
    "neuron",
    "numpy",
    "python",
    "scipy",
    "setuptools"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pytest"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython >=0.20",
    "neuron",
    "numpy >=1.8",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "cython >=0.20",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*",
    "numpy",
    "python",
    "scipy >=0.14",
    "setuptools"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pytest"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/l/lfpy/LFPy-2.0.2.tar.gz",
 "version":"2.0.4"
}