{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/296524556.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/316931586.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"mpich-3.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"lfpy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url":"https://github.com/LFPy/LFPy",
   "doc_url":"https://lfpy.readthedocs.io",
   "home":"https://github.com/LFPy/LFPy",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . --no-deps -vv",
   "skip":true,
   "string":"mpi_pyh_0"
  },
  "extra":{
   "recipe-maintainers":[
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk",
    "espenhgn",
    "minrk"
   ]
  },
  "package":{
   "name":"lfpy",
   "version":"2.0.3"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron",
    "python",
    "pip",
    "cython >=0.20",
    "numpy >=1.8",
    "neuron"
   ],
   "run":[
    "python",
    "setuptools",
    "cython >=0.20",
    "compatible_pin_stub",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*",
    "python",
    "setuptools",
    "cython >=0.20",
    "compatible_pin_stub",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*",
    "python",
    "setuptools",
    "cython >=0.20",
    "compatible_pin_stub",
    "scipy >=0.14",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_*"
   ]
  },
  "source":{
   "sha256":"32fa038917d11ecf286b676cf6cd772228ee0fa9c0ddebb5f8c5c7adb74c3228",
   "url":"https://pypi.io/packages/source/l/lfpy/LFPy-2.0.3.tar.gz"
  },
  "test":{
   "commands":[
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy",
    "py.test -vsx --pyargs LFPy"
   ],
   "imports":[
    "LFPy",
    "LFPy",
    "LFPy"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name":"lfpy",
 "new_version":"2.0.3",
 "pinning_version":"2019.09.08",
 "raw_meta_yaml":"{% set name = 'LFPy' %}\n{% set version = \"2.0.3\" %}\n{% set build = 0 %}\n\n## mpi must be defined for conda-smithy lint\n# {% if not mpi %}\n## conda-smithy misbehaves if mpi is unset\n# {% set mpi = 'mpich' %}\n# {% endif %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lfpy/{{name}}-{{ version }}.tar.gz\n  sha256: 32fa038917d11ecf286b676cf6cd772228ee0fa9c0ddebb5f8c5c7adb74c3228\n\nbuild:\n  number: {{ build }}\n  {% set mpi_prefix = \"mpi\" %} # use mpi_*` neuron variant\n  string: \"{{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\"\n  script: \"{{PYTHON}} -m pip install . --no-deps -vv\"\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython >=0.20\n    - numpy >=1.8\n    - neuron\n  run:\n    - python\n    - setuptools\n    - cython >=0.20\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.14\n    - h5py >=2.5\n    - mpi4py >=1.2\n    - {{ mpi }}\n    - neuron >=7.6.7 {{ mpi_prefix }}_*\n\ntest:\n  requires:\n    # test with mpich instead of openmpi\n    # mpi4py with openmpi doesn't import on CI\n    # without extra environment variables set\n    # - mpich\n    - pytest\n  imports:\n    - LFPy\n  commands:\n    - py.test -vsx --pyargs LFPy\n\nabout:\n  home: https://github.com/LFPy/LFPy\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models'\n\n  description: |\n    LFPy provides a set of easy-to-use Python classes for setting up your\n    model, running your simulations and calculating the extracellular\n    potentials arising from activity in your model neuron. If you have a model\n    working in NEURON or NeuroML2 already, it is likely that it can be adapted\n    to work with LFPy.\n\n  doc_url: https://lfpy.readthedocs.io\n  dev_url: https://github.com/LFPy/LFPy\n\nextra:\n  recipe-maintainers:\n    - espenhgn\n    - minrk\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "compatible_pin_stub",
   "cython",
   "h5py",
   "mpi4py",
   "mpich",
   "neuron",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "smithy_version":"3.4.5",
 "url":"https://pypi.io/packages/source/l/lfpy/LFPy-2.0.2.tar.gz",
 "version":"2.0.3"
}