{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223922357.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/232099258.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.6.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.6.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/257539729.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.6.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/274557495.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.7.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/285610567.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/312420110.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.7.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"appveyor"
  }
 },
 "feedstock_name":"libnetcdf",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://www.unidata.ucar.edu/software/netcdf/",
   "license":"MIT",
   "license_file":"COPYRIGHT",
   "summary":"Libraries and data formats that support array-oriented scientific data"
  },
  "build":{
   "number":"101",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true,
   "string":"nompi_h_101"
  },
  "extra":{
   "recipe-maintainers":[
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "beckermr",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "beckermr",
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "beckermr"
   ]
  },
  "package":{
   "name":"libnetcdf",
   "version":"4.7.1"
  },
  "requirements":{
   "build":[
    "cmake",
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub"
   ],
   "host":[
    "nompi",
    "msinttypes",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5 * nompi_*",
    "jpeg",
    "nompi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5 * nompi_*",
    "jpeg",
    "nompi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5 * nompi_*",
    "jpeg"
   ],
   "run":[
    "nompi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5 * nompi_*",
    "jpeg",
    "libssh2",
    "nompi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5 * nompi_*",
    "jpeg",
    "nompi",
    "bzip2",
    "curl",
    "zlib",
    "hdf4",
    "hdf5 * nompi_*",
    "jpeg"
   ]
  },
  "source":{
   "patches":[
    "patches/0003-Add-find_package-Threads-REQUIRED-to-CMakeLists.txt.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch",
    "patches/prevent_MS_runtime_libs_being_installed_again.patch",
    "patches/strdup.patch",
    "patches/0003-Add-find_package-Threads-REQUIRED-to-CMakeLists.txt.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch",
    "patches/strdup.patch",
    "patches/0003-Add-find_package-Threads-REQUIRED-to-CMakeLists.txt.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch",
    "patches/strdup.patch"
   ],
   "sha256":"583e6b89c57037293fc3878c9181bb89151da8c6015ecea404dd426fea219b2c",
   "url":"https://github.com/Unidata/netcdf-c/archive/v4.7.1.tar.gz"
  },
  "test":{
   "commands":[
    "test -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "name":"libnetcdf",
 "new_version":"4.7.1",
 "pinning_version":"2019.08.27",
 "raw_meta_yaml":"{% set version = \"4.7.1\" %}\n{% set build = 1 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: libnetcdf\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Unidata/netcdf-c/archive/v{{ version }}.tar.gz\n  sha256: 583e6b89c57037293fc3878c9181bb89151da8c6015ecea404dd426fea219b2c\n  patches:\n    - patches/0003-Add-find_package-Threads-REQUIRED-to-CMakeLists.txt.patch\n    - patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch\n    - patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch\n    - patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch\n    - patches/prevent_MS_runtime_libs_being_installed_again.patch  # [win]\n    - patches/strdup.patch\n\nbuild:\n  number: {{ build }}\n  skip: True  # [win and vc<14]\n  {% if mpi != \"nompi\" %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  # add build string so packages can depend on\n  # mpi or nompi variants\n  # dependencies:\n  # `PKG_NAME * mpi_mpich_*` for mpich\n  # `PKG_NAME * mpi_*` for any mpi\n  # `PKG_NAME * nompi_*` for no mpi\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\n  # mpi builds require the right mpi\n  # non-mpi builds *do not* appear to require non-mpi builds\n  # at least not always\n\n  {% if mpi != 'nompi' %}\n  {% set build_pin = mpi_prefix + '_*' %}\n  {% else %}\n  {% set build_pin = '' %}\n  {% endif %}\n\n  run_exports:\n    #   https://abi-laboratory.pro/tracker/timeline/netcdf/\n    - {{ pin_subpackage('libnetcdf') }} {{ build_pin }}\n\nrequirements:\n  build:\n    - cmake\n    - make  # [not win]\n    - pkg-config  # [not win]\n    - {{ compiler('c') }}\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - msinttypes  # [win and vc<14]\n    - bzip2\n    - curl\n    - zlib\n    - hdf4\n    - hdf5 * {{ mpi_prefix }}_*\n    - jpeg\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - bzip2\n    - curl\n    - zlib\n    - hdf4\n    - hdf5 * {{ mpi_prefix }}_*\n    - jpeg\n    # Curl should be pulling this... Investigate it later.\n    - libssh2  # [win]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libnetcdf.a  # [not win]\n    - test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}  # [not win]\n    - nc-config --all  # [not win]\n    # All these endpotins failed at some point due to various reasons.\n    #- ncdump -h \"http://geoport-dev.whoi.edu/thredds/dodsC/estofs/atlantic\"\n    #- ncdump -h \"https://data.nodc.noaa.gov/thredds/dodsC/ioos/sccoos/scripps_pier/scripps_pier-2016.nc\"\n    #- ncdump -h \"http://oos.soest.hawaii.edu/thredds/dodsC/hioos/model/atm/ncep_pac/NCEP_Pacific_Atmospheric_Model_best.ncd\"\n    #- ncdump -h \"http://oos.soest.hawaii.edu/thredds/dodsC/usgs_dem_10m_tinian\"\n    #- ncdump -h \"https://www.ncei.noaa.gov/thredds/dodsC/namanl/201609/20160929/namanl_218_20160929_1800_006.grb\"\n\nabout:\n  home: http://www.unidata.ucar.edu/software/netcdf/\n  license: MIT\n  license_file: COPYRIGHT\n  summary: 'Libraries and data formats that support array-oriented scientific data'\n\nextra:\n  recipe-maintainers:\n    - groutr\n    - kmuehlbauer\n    - ocefpaf\n    - mingwandroid\n    - msarahan\n    - beckermr\n",
 "req":{
  "__set__":true,
  "elements":[
   "bzip2",
   "c_compiler_stub",
   "cmake",
   "curl",
   "hdf4",
   "hdf5",
   "jpeg",
   "libssh2",
   "make",
   "msinttypes",
   "nompi",
   "pkg-config",
   "zlib"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://github.com/Unidata/netcdf-c/archive/v4.7.1.tar.gz",
 "version":"4.7.1"
}