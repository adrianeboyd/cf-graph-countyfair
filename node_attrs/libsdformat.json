{
 "bad":{
  "exception":"Failed to put item: An error occurred (ValidationException) on request (S5IV8LALC7T4PKPI2E19VJA6KFVV4KQNSO5AEMVJF66Q9ASUAAJG) on table (pr_json) when calling the PutItem operation: Attempting to store more than 38 significant digits in a Number",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 674, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 210, in run",
   "    PRJson.dump(pr_json)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/dynamo_models.py\", line 33, in dump",
   "    item.save()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/pynamodb/models.py\", line 405, in save",
   "    data = self._get_connection().put_item(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/pynamodb/connection/table.py\", line 139, in put_item",
   "    return_item_collection_metrics=return_item_collection_metrics)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/pynamodb/connection/base.py\", line 972, in put_item",
   "    six.raise_from(PutError(\"Failed to put item: {}\".format(e), e), None)",
   "  File \"<string>\", line 3, in raise_from",
   "pynamodb.exceptions.PutError: Failed to put item: An error occurred (ValidationException) on request (S5IV8LALC7T4PKPI2E19VJA6KFVV4KQNSO5AEMVJF66Q9ASUAAJG) on table (pr_json) when calling the PutItem operation: Attempting to store more than 38 significant digits in a Number",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"libsdformat",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://sdformat.org/",
   "license":"Apache-2.0",
   "license_file":"LICENSE",
   "summary":"Simulation Description Format (SDF) parser and description files.\n"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core",
    "seanyen",
    "j-rivero",
    "conda-forge/ros-core"
   ]
  },
  "package":{
   "name":"libsdformat",
   "version":"9.1.0"
  },
  "requirements":{
   "build":[
    "vs2017_win-64",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "ruby",
    "cmake",
    "pkg-config"
   ],
   "host":[
    "libignition-math6",
    "urdfdom",
    "boost-cpp >=1.71",
    "tinyxml",
    "console_bridge",
    "libignition-math6",
    "urdfdom",
    "boost-cpp >=1.71",
    "tinyxml",
    "console_bridge",
    "libignition-math6",
    "urdfdom",
    "boost-cpp >=1.71",
    "tinyxml",
    "console_bridge"
   ],
   "run":[
    "libignition-math6",
    "urdfdom",
    "boost-cpp >=1.71",
    "tinyxml",
    "console_bridge",
    "libignition-math6",
    "urdfdom",
    "boost-cpp >=1.71",
    "tinyxml",
    "console_bridge",
    "libignition-math6",
    "urdfdom",
    "boost-cpp >=1.71",
    "tinyxml",
    "console_bridge"
   ]
  },
  "source":[
   {
    "patches":[
     "sdformat.patch"
    ],
    "sha256":"407599011850143d4de8ca9d5d7370b9f48f2b1d6404d381dfdd4ec23b4e6520",
    "url":"https://bitbucket.org/osrf/sdformat/get/sdformat9_9.1.0.tar.gz"
   },
   {
    "patches":[
     "sdformat.patch"
    ],
    "sha256":"407599011850143d4de8ca9d5d7370b9f48f2b1d6404d381dfdd4ec23b4e6520",
    "url":"https://bitbucket.org/osrf/sdformat/get/sdformat9_9.1.0.tar.gz"
   },
   {
    "patches":[
     "sdformat.patch"
    ],
    "sha256":"407599011850143d4de8ca9d5d7370b9f48f2b1d6404d381dfdd4ec23b4e6520",
    "url":"https://bitbucket.org/osrf/sdformat/get/sdformat9_9.1.0.tar.gz"
   }
  ],
  "test":{
   "commands":[
    "if not exist %LIBRARY_INC%\\\\sdformat-9.1\\\\sdf\\\\sdf.hh exit 1",
    "if not exist %LIBRARY_LIB%\\\\sdformat9.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\sdformat9.dll exit 1",
    "if not exist %LIBRARY_LIB%\\\\cmake\\\\sdformat9\\\\sdformat9-config.cmake exit 1",
    "test -f ${PREFIX}/include/sdformat-9.1/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/cmake/sdformat9/sdformat9-config.cmake",
    "test -f ${PREFIX}/include/sdformat-9.1/sdf/sdf.hh",
    "test -f ${PREFIX}/lib/libsdformat9.so",
    "test -f ${PREFIX}/lib/cmake/sdformat9/sdformat9-config.cmake"
   ]
  }
 },
 "name":"libsdformat",
 "new_version":false,
 "raw_meta_yaml":"{% set name = \"libsdformat\" %}\n{% set version = \"9.1.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://bitbucket.org/osrf/sdformat/get/sdformat{{ version.split('.')[0] }}_{{ version }}.tar.gz\n    sha256: 407599011850143d4de8ca9d5d7370b9f48f2b1d6404d381dfdd4ec23b4e6520\n    patches:\n      - sdformat.patch\n\nbuild:\n  number: 0\n  skip: true  # [osx or win and vc<14]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}              # [not win]\n    - {{ compiler('c') }}                # [not win]\n    - vs2017_win-64                      # [win64]\n    - vs2017_win-32                      # [win32]\n    - ninja                              # [not win]\n    - ruby                               # [not win]\n    - cmake\n    - pkg-config\n  host:\n    - libignition-math6\n    - urdfdom\n    - boost-cpp >=1.71\n    - tinyxml\n    - console_bridge\n  run:\n    - libignition-math6\n    - urdfdom\n    - boost-cpp >=1.71\n    - tinyxml\n    - console_bridge\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/sdformat-9.1/sdf/sdf.hh  # [not win]\n    - test -f ${PREFIX}/lib/libsdformat9.so  # [linux]\n    - test -f ${PREFIX}/lib/cmake/sdformat9/sdformat9-config.cmake  # [not win]\n    - if not exist %LIBRARY_INC%\\\\sdformat-9.1\\\\sdf\\\\sdf.hh exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\sdformat9.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\sdformat9.dll exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\cmake\\\\sdformat9\\\\sdformat9-config.cmake exit 1  # [win]\n\nabout:\n  home: http://sdformat.org/\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: |\n    Simulation Description Format (SDF) parser and description files.\n\nextra:\n  recipe-maintainers:\n    - seanyen\n    - j-rivero\n    - conda-forge/ros-core\n",
 "req":{
  "__set__":true,
  "elements":[
   "boost-cpp",
   "c_compiler_stub",
   "cmake",
   "console_bridge",
   "cxx_compiler_stub",
   "libignition-math6",
   "ninja",
   "pkg-config",
   "ruby",
   "tinyxml",
   "urdfdom",
   "vs2017_win-64"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby",
    "vs2017_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost-cpp",
    "console_bridge",
    "libignition-math6",
    "tinyxml",
    "urdfdom"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost-cpp",
    "console_bridge",
    "libignition-math6",
    "tinyxml",
    "urdfdom"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "ruby",
    "vs2017_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost-cpp >=1.71",
    "console_bridge",
    "libignition-math6",
    "tinyxml",
    "urdfdom"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost-cpp >=1.71",
    "console_bridge",
    "libignition-math6",
    "tinyxml",
    "urdfdom"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://bitbucket.org/osrf/sdformat/get/sdformat6_6.2.0.tar.gz",
 "version":"9.1.0"
}