{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/196933259.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222703464.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339439045.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/395387562.json"
   },
   "data": {
    "bot_rerun": 1600812303.8980768,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492045844.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Download error (37) Couldn't read a file:// file [file:///tmp/tmprsrxklkr/noarch/repodata.json]",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 937, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run",
   "    solvable, errors, _ = is_recipe_solvable(feedstock_dir)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 418, in is_recipe_solvable",
   "    additional_channels=additional_channels,",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 518, in _is_recipe_solvable_on_platform",
   "    mamba_solver = _mamba_factory(tuple(channel_sources), f\"{platform}-{arch}\")",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 299, in _mamba_factory",
   "    return MambaSolver(list(channels), platform)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 241, in __init__",
   "    index = get_index(channels, platform=platform)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 141, in get_index",
   "    is_downloaded = dlist.download(True)",
   "RuntimeError: Download error (37) Couldn't read a file:// file [file:///tmp/tmprsrxklkr/noarch/repodata.json]",
   ""
  ]
 },
 "conda-forge.yml": {},
 "feedstock_name": "lightfm",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "1002",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "1002",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm._lightfm_fast_openmp",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "name": "lightfm",
 "new_version": "1.15",
 "osx_64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "1002",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "pinning_version": "2020.09.23.12.58.01",
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package scipy-0.19.1-py27h069396b_3 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set version = \"1.15\" %}\n\npackage:\n  name: lightfm\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lightfm/lightfm-{{ version }}.tar.gz\n  sha256: 7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806\n\nbuild:\n  number: 1002\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n    - scipy >=0.17\n    - requests\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.17\n    - requests\n\ntest:\n  imports:\n    # ensure OpenMP backend is used on linux\n    - lightfm._lightfm_fast_openmp  # [linux]\n    - lightfm\n    - lightfm.lightfm\n\nabout:\n  home: https://github.com/lyst/lightfm\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'A Python implementation of LightFM, a hybrid recommendation algorithm.'\n  description: |\n      LightFM is a Python implementation of a number of popular recommendation\n      algorithms for both implicit and explicit feedback, including efficient\n      implementation of BPR and WARP ranking losses. It's easy to use,\n      fast (via multithreaded model estimation), and produces high quality results.\n  doc_url: http://lyst.github.io/lightfm/docs/home.html\n  dev_url: https://github.com/lyst/lightfm\n\nextra:\n  recipe-maintainers:\n    - maciejkula\n    - rth\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python",
   "requests",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy >=0.17"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy >=0.17"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz",
 "version": "1.15",
 "win_64_meta_yaml": {
  "about": {
   "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
   "dev_url": "https://github.com/lyst/lightfm",
   "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
   "home": "https://github.com/lyst/lightfm",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
  },
  "build": {
   "number": "1002",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "maciejkula",
    "rth",
    "maciejkula",
    "rth",
    "maciejkula",
    "rth"
   ]
  },
  "package": {
   "name": "lightfm",
   "version": "1.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "pip",
    "cython",
    "numpy",
    "scipy >=0.17",
    "requests"
   ],
   "run": [
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests",
    "python",
    "numpy",
    "scipy >=0.17",
    "requests"
   ]
  },
  "source": {
   "sha256": "7dc3fd48f0ef32c7e8de8e38b2bbe7063b56b570c702453d7467b43b413f6806",
   "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.15.tar.gz"
  },
  "test": {
   "imports": [
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm",
    "lightfm",
    "lightfm.lightfm"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "requests",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}