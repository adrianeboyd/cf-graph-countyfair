{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.23.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/200480828.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/217391771.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.25.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/220717073.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/234314339.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.26.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/241597735.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.27.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/260505164.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.27.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/260945847.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.28.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283781896.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.29.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/292513535.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/326911410.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.30.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335622489.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"feedstock_repo() missing 1 required positional argument: 'feedstock'",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 658, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 120, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 115, in get_repo",
   "    feedstock_reponame = feedstock_repo(fctx=fctx)",
   "TypeError: feedstock_repo() missing 1 required positional argument: 'feedstock'",
   ""
  ]
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"llvmlite",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/numba/llvmlite",
   "doc_url":"http://llvmlite.pydata.org/",
   "home":"http://llvmlite.pydata.org",
   "license":"BSD-2-clause",
   "license_file":"LICENSE",
   "summary":"A lightweight LLVM python binding for writing JIT compilers."
  },
  "build":{
   "number":"1"
  },
  "extra":{
   "recipe-maintainers":[
    "souravsingh",
    "souravsingh",
    "souravsingh"
   ]
  },
  "package":{
   "name":"llvmlite",
   "version":"0.30.0"
  },
  "requirements":{
   "build":[
    "vs2017_win-64",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host":[
    "python",
    "llvmdev 8.0.*",
    "llvm 8.0.*",
    "python",
    "llvmdev 8.0.*",
    "llvm 8.0.*",
    "zlib",
    "python",
    "llvmdev 8.0.*",
    "llvm 8.0.*",
    "zlib"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"llvmlite-0.30.0.tar.gz",
   "sha256":"4eaa398d4cafb76e2d8f30ca6ab875039a1023c91e7a690c6ddec20e58bb9a07",
   "url":"https://pypi.io/packages/source/l/llvmlite/llvmlite-0.30.0.tar.gz"
  },
  "test":{
   "commands":[
    "python -m llvmlite.tests",
    "python -m llvmlite.tests",
    "python -m llvmlite.tests"
   ],
   "imports":[
    "llvmlite",
    "llvmlite.binding",
    "llvmlite",
    "llvmlite.binding",
    "llvmlite",
    "llvmlite.binding"
   ]
  }
 },
 "name":"llvmlite",
 "new_version":"0.31.0",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set name = \"llvmlite\" %}\n{% set version = \"0.30.0\" %}\n{% set sha256 = \"4eaa398d4cafb76e2d8f30ca6ab875039a1023c91e7a690c6ddec20e58bb9a07\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  # don't use github generated tar-ball as the sha256 value may not be stable\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  skip: true  # [win and py==27]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}    # [unix or (win and py==27)]\n    - {{ compiler('cxx') }}  # [unix or (win and py==27)]\n    - vs2017_win-64          # [win64 and py>27]\n    - vs2017_win-32          # [win32 and py>27]\n    # The DLL build uses cmake on Windows\n    - cmake                  # [win]\n    - make                   # [unix]\n  host:\n    - python\n    - llvmdev 8.0.*\n    - llvm 8.0.*\n    - enum34          # [py27]\n    # llvmdev is built with libz compression support\n    - zlib            # [unix]\n  run:\n    - python\n    - enum34          # [py27]\n\ntest:\n  imports:\n    - llvmlite\n    - llvmlite.binding\n  commands:\n    - python -m llvmlite.tests\n\nabout:\n  home: http://llvmlite.pydata.org\n  license: BSD-2-clause\n  license_file: LICENSE\n  summary: A lightweight LLVM python binding for writing JIT compilers.\n  doc_url: http://llvmlite.pydata.org/\n  dev_url: https://github.com/numba/llvmlite\n\nextra:\n  recipe-maintainers:\n    - souravsingh\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "llvm",
   "llvmdev",
   "make",
   "python",
   "vs2017_win-64",
   "zlib"
  ]
 },
 "smithy_version":"3.6.1",
 "url":"https://pypi.io/packages/source/l/llvmlite/llvmlite-0.29.0.tar.gz",
 "version":"0.30.0"
}