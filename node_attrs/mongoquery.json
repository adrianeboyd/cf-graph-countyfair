{
 "bad":{
  "exception":"Command '['git', 'remote', 'add', 'upstream', 'https://github.com/conda-forge/mongoquery-feedstock.git', '-q']' returned non-zero exit status 129.",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 750, in main",
   "    dry_run=args.dry_run)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 83, in run",
   "    gh=gh)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.xsh\", line 146, in get_repo",
   "    git remote add upstream @(upstream) -q",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/xonsh/__amalgam__.py\", line 22475, in subproc_captured_hiddenobject",
   "    return run_subproc(cmds, captured=\"hiddenobject\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/xonsh/__amalgam__.py\", line 22438, in run_subproc",
   "    command.end()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/xonsh/__amalgam__.py\", line 15680, in end",
   "    self._end(tee_output=tee_output)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/xonsh/__amalgam__.py\", line 15699, in _end",
   "    self._raise_subproc_error()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/xonsh/__amalgam__.py\", line 15825, in _raise_subproc_error",
   "    raise subprocess.CalledProcessError(rtn, spec.args, output=self.output)",
   "subprocess.CalledProcessError: Command '['git', 'remote', 'add', 'upstream', 'https://github.com/conda-forge/mongoquery-feedstock.git', '-q']' returned non-zero exit status 129.",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"mongoquery",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/kapouille/mongoquery",
   "license":"Public Domain",
   "summary":"A utility library that provides a MongoDB-like query language for querying python collections. It's mainly intended to parse objects structured as fundamental types in a similar fashion to what is produced by JSON or YAML parsers.\n"
  },
  "build":{
   "noarch":"python",
   "number":"1",
   "script":"python setup.py install --single-version-externally-managed --record=record.txt"
  },
  "extra":{
   "recipe-maintainers":[
    "ericdill",
    "kapouille",
    "licode",
    "tacaswell",
    "CJ-Wright",
    "ericdill",
    "kapouille",
    "licode",
    "tacaswell",
    "CJ-Wright",
    "ericdill",
    "kapouille",
    "licode",
    "tacaswell",
    "CJ-Wright"
   ]
  },
  "package":{
   "name":"mongoquery",
   "version":"1.1.0"
  },
  "requirements":{
   "build":[
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"mongoquery-v1.1.0.tar.gz",
   "sha256":"d1e87f6038ea074273610b6258e5af7477de61c782f6424fc7ecf3416df3e645",
   "url":"https://github.com/kapouille/mongoquery/archive/v1.1.0.tar.gz"
  },
  "test":{
   "imports":[
    "mongoquery",
    "mongoquery",
    "mongoquery"
   ]
  }
 },
 "name":"mongoquery",
 "new_version":"1.3.5",
 "raw_meta_yaml":"{% set version = \"1.1.0\" %}\n\npackage:\n    name: mongoquery\n    version: {{ version }}\n\nsource:\n    url: https://github.com/kapouille/mongoquery/archive/v{{ version }}.tar.gz\n    fn: mongoquery-v{{ version }}.tar.gz\n    sha256: d1e87f6038ea074273610b6258e5af7477de61c782f6424fc7ecf3416df3e645\n\nbuild:\n    noarch: python\n    number: 1 \n    script: python setup.py install --single-version-externally-managed --record=record.txt\n\nrequirements:\n    build:\n        - setuptools\n        - python\n    run:\n        - python\n\ntest:\n    imports:\n        - mongoquery\n\nabout:\n    home: https://github.com/kapouille/mongoquery\n    license: Public Domain\n    summary: >\n        A utility library that provides a MongoDB-like query\n        language for querying python collections. It's mainly\n        intended to parse objects structured as fundamental types in\n        a similar fashion to what is produced by JSON or YAML\n        parsers.\n\nextra:\n    recipe-maintainers:\n        - ericdill\n        - kapouille\n        - licode\n        - tacaswell\n        - CJ-Wright\n",
 "req":{
  "__set__":true,
  "elements":[
   "python",
   "setuptools"
  ]
 },
 "time":1568135268.703214,
 "url":"https://github.com/kapouille/mongoquery/archive/v1.1.0.tar.gz",
 "version":"1.1.0"
}