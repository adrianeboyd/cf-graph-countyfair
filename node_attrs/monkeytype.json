{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"18.5.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/209610288.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"18.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245397503.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245960258.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/278479913.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/342440014.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.11.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/348047705.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"19.11.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"monkeytype",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"MonkeyType collects runtime types of function arguments and return values,\nand can automatically generate stub files or even add draft type\nannotations directly to your Python code based on the types collected at\nruntime.\n",
   "home":"https://github.com/Instagram/MonkeyType",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"src/LICENSE",
   "summary":"Generating type annotations from sampled production types"
  },
  "build":{
   "entry_points":[
    "monkeytype=monkeytype.cli:entry_point_main",
    "monkeytype=monkeytype.cli:entry_point_main",
    "monkeytype=monkeytype.cli:entry_point_main"
   ],
   "noarch":"python",
   "number":"0",
   "script":"cd dist && python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "bollwyvl",
    "nehaljwani",
    "bollwyvl",
    "nehaljwani",
    "bollwyvl",
    "nehaljwani"
   ]
  },
  "package":{
   "name":"monkeytype",
   "version":"19.11.0"
  },
  "requirements":{
   "build":[
    "pip",
    "python >=3.6",
    "setuptools",
    "pip",
    "python >=3.6",
    "setuptools",
    "pip",
    "python >=3.6",
    "setuptools"
   ],
   "run":[
    "mypy_extensions",
    "python >=3.6",
    "retype",
    "stringcase",
    "mypy_extensions",
    "python >=3.6",
    "retype",
    "stringcase",
    "mypy_extensions",
    "python >=3.6",
    "retype",
    "stringcase"
   ]
  },
  "source":[
   {
    "folder":"dist",
    "sha256":"1e951ea7ce9c7f1e4b56608404c55dff30f4ff86cba738c651aff1a89d92ab76",
    "url":"https://pypi.io/packages/source/M/MonkeyType/MonkeyType-19.11.0.tar.gz"
   },
   {
    "folder":"src",
    "sha256":"c137be1c47db1c7905e778aa04161a9667608d37f3e4746dac9a5fb268c00313",
    "url":"https://github.com/Instagram/MonkeyType/archive/v19.11.0.tar.gz"
   },
   {
    "folder":"dist",
    "sha256":"1e951ea7ce9c7f1e4b56608404c55dff30f4ff86cba738c651aff1a89d92ab76",
    "url":"https://pypi.io/packages/source/M/MonkeyType/MonkeyType-19.11.0.tar.gz"
   },
   {
    "folder":"src",
    "sha256":"c137be1c47db1c7905e778aa04161a9667608d37f3e4746dac9a5fb268c00313",
    "url":"https://github.com/Instagram/MonkeyType/archive/v19.11.0.tar.gz"
   },
   {
    "folder":"dist",
    "sha256":"1e951ea7ce9c7f1e4b56608404c55dff30f4ff86cba738c651aff1a89d92ab76",
    "url":"https://pypi.io/packages/source/M/MonkeyType/MonkeyType-19.11.0.tar.gz"
   },
   {
    "folder":"src",
    "sha256":"c137be1c47db1c7905e778aa04161a9667608d37f3e4746dac9a5fb268c00313",
    "url":"https://github.com/Instagram/MonkeyType/archive/v19.11.0.tar.gz"
   }
  ],
  "test":{
   "commands":[
    "monkeytype --help",
    "cd src && cd tests",
    "python -m pytest -k \"not test_includes_otherwise\"",
    "monkeytype --help",
    "cd src && cd tests",
    "python -m pytest -k \"not test_includes_otherwise\"",
    "monkeytype --help",
    "cd src && cd tests",
    "python -m pytest -k \"not test_includes_otherwise\""
   ],
   "imports":[
    "monkeytype",
    "monkeytype",
    "monkeytype"
   ],
   "requires":[
    "cython",
    "django",
    "pytest",
    "c_compiler_stub",
    "cython",
    "django",
    "pytest",
    "c_compiler_stub",
    "cython",
    "django",
    "pytest",
    "c_compiler_stub"
   ],
   "source_files":[
    "src/tests",
    "src/tests",
    "src/tests"
   ]
  }
 },
 "name":"monkeytype",
 "new_version":"19.11.2",
 "pinning_version":"2019.11.26",
 "raw_meta_yaml":"{% set name = \"MonkeyType\" %}\n{% set version = \"19.11.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: 1e951ea7ce9c7f1e4b56608404c55dff30f4ff86cba738c651aff1a89d92ab76\n  - folder: src\n    url: https://github.com/Instagram/{{ name }}/archive/v{{ version }}.tar.gz\n    sha256: c137be1c47db1c7905e778aa04161a9667608d37f3e4746dac9a5fb268c00313\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - monkeytype=monkeytype.cli:entry_point_main\n  script: cd dist && python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - pip\n    - python >=3.6\n    - setuptools\n  run:\n    - mypy_extensions\n    - python >=3.6\n    - retype\n    - stringcase\n\ntest:\n  source_files:\n    - src/tests\n  requires:\n    - cython\n    - django\n    - pytest\n    - {{ compiler('c') }}\n  imports:\n    - monkeytype\n  commands:\n    - monkeytype --help\n    - cd src && cd tests\n    - python -m pytest -k \"not test_includes_otherwise\"\n\n\nabout:\n  home: https://github.com/Instagram/MonkeyType\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: src/LICENSE\n  summary: Generating type annotations from sampled production types\n\n  description: |\n    MonkeyType collects runtime types of function arguments and return values,\n    and can automatically generate stub files or even add draft type\n    annotations directly to your Python code based on the types collected at\n    runtime.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - nehaljwani\n",
 "req":{
  "__set__":true,
  "elements":[
   "mypy_extensions",
   "pip",
   "python",
   "retype",
   "setuptools",
   "stringcase"
  ]
 },
 "smithy_version":"3.6.3",
 "url":"https://pypi.io/packages/source/M/MonkeyType/MonkeyType-19.5.0.tar.gz",
 "version":"19.11.0"
}