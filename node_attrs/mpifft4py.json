{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/196996673.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222700911.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339437743.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 654, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 139, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/spectralDNS/mpiFFT4py/tar.gz/mpiFFT4py-4py-1.1"
 },
 "conda-forge.yml":{},
 "feedstock_name":"mpifft4py",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"mpiFFT4py performs FFTs in parallel in Python. It is developed to be able\nto do FFTs in parallel on a three-dimensional computational box\n(a structured grid), but there are also routines for doing the FFTs on a\n2D mesh. It implements both the slab and the pencil decompositions.\n",
   "home":"https://github.com/spectralDNS/mpiFFT4py",
   "license":"LGPL-3.0",
   "license_file":"LICENSE",
   "summary":"Parallel FFT in 3D or 2D using MPI for Python. Slab or pencil decomposition possible in 3D."
  },
  "build":{
   "number":"3",
   "script":" -m pip install . --no-deps -vv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "mikaem",
    "mikaem",
    "mikaem"
   ]
  },
  "package":{
   "name":"mpifft4py",
   "version":"1.0.2"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "cython",
    "numpy",
    "pip",
    "python",
    "cython",
    "numpy",
    "pip",
    "python",
    "cython",
    "numpy",
    "pip"
   ],
   "run":[
    "python",
    "compatible_pin_stub",
    "scipy",
    "mpi4py",
    "pyfftw",
    "python",
    "compatible_pin_stub",
    "scipy",
    "mpi4py",
    "pyfftw",
    "python",
    "compatible_pin_stub",
    "scipy",
    "mpi4py",
    "pyfftw"
   ]
  },
  "source":{
   "sha256":"5d2bc067123b3b4d068bc85bccd693aa7287600d8c34c079ea1ca069342f9b58",
   "url":"https://github.com/spectralDNS/mpiFFT4py/archive/mpiFFT4py-1.0.2.tar.gz"
  },
  "test":{
   "imports":[
    "mpiFFT4py",
    "mpiFFT4py",
    "mpiFFT4py"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name":"mpifft4py",
 "new_version":"4py-1.1",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set version = \"1.0.2\" %}\n\npackage:\n  name: mpifft4py\n  version: {{ version }}\n\nsource:\n  url: https://github.com/spectralDNS/mpiFFT4py/archive/mpiFFT4py-{{ version }}.tar.gz\n  sha256: 5d2bc067123b3b4d068bc85bccd693aa7287600d8c34c079ea1ca069342f9b58\n\nbuild:\n  number: 3\n  skip: true  # [win]\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - cython\n    - numpy\n    - pip\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - mpi4py\n    - pyfftw\n\ntest:\n  requires:\n    - pytest\n  imports:\n    - mpiFFT4py\n\nabout:\n  home: https://github.com/spectralDNS/mpiFFT4py\n  license: LGPL-3.0\n  license_file: LICENSE\n  summary: 'Parallel FFT in 3D or 2D using MPI for Python. Slab or pencil decomposition possible in 3D.'\n  description: |\n    mpiFFT4py performs FFTs in parallel in Python. It is developed to be able\n    to do FFTs in parallel on a three-dimensional computational box\n    (a structured grid), but there are also routines for doing the FFTs on a\n    2D mesh. It implements both the slab and the pencil decompositions.\n\nextra:\n  recipe-maintainers:\n    - mikaem\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "compatible_pin_stub",
   "cython",
   "mpi4py",
   "numpy",
   "pip",
   "pyfftw",
   "python",
   "scipy"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "compatible_pin_stub",
    "mpi4py",
    "pyfftw",
    "python",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pytest"
   ]
  }
 },
 "smithy_version":"3.6.2",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "compatible_pin_stub",
    "mpi4py",
    "pyfftw",
    "python",
    "scipy"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pytest"
   ]
  }
 },
 "url":"https://github.com/spectralDNS/mpiFFT4py/archive/mpiFFT4py-1.0.2.tar.gz",
 "version":"1.0.2"
}