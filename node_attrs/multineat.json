{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/240004271.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283404905.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/283423110.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-cpp-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "id":"9191db8f-396d-484a-a8de-764f8bb58d49",
    "merged_at":"never issued",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/3d64a5c5-856e-421a-996d-7647abd21ffd.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/de0e4af9-7559-4c96-b6b8-ec37bc070368.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 267, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 328, in recv_into",
   "    return self.recv_into(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 725, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 403, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 428, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 543, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 777, in main",
   "    or mctx.gh.rate_limit()[\"resources\"][\"core\"][\"remaining\"] == 0",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1867, in rate_limit",
   "    return self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"multineat",
 "meta_yaml":{
  "about":{
   "description":"MultiNEAT is a portable software library for performing neuroevolution, a form of machine learning that trains neural networks with a genetic algorithm. It is based on NEAT, an advanced method for evolving neural networks through complexification. The neural networks in NEAT begin evolution with very simple genomes which grow over successive generations. The individuals in the evolving population are grouped by similarity into species, and each of them can compete only with the individuals in the same species.\n",
   "dev_url":"https://github.com/MultiNEAT/MultiNEAT",
   "doc_url":"http://multineat.com/docs.html",
   "home":"http://MultiNEAT.com",
   "license":"LGPL-3.0",
   "license_family":"LGPL",
   "license_file":"LICENSE",
   "summary":"Portable NeuroEvolution Library. Implements NEAT, rtNETA, HyperNEAT, Novelty Search and others."
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "anton-matosov",
    "anton-matosov",
    "anton-matosov"
   ]
  },
  "package":{
   "name":"multineat",
   "version":"0.5.2"
  },
  "requirements":{
   "build":[
    "python",
    "setuptools",
    "cmake",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "python",
    "setuptools",
    "cmake",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "python",
    "setuptools",
    "cmake",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67"
   ],
   "run":[
    "python",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "numpy>=1.11.3",
    "matplotlib>=2.2",
    "opencv>=3.3",
    "psutil",
    "ipyparallel",
    "python",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "numpy>=1.11.3",
    "matplotlib>=2.2",
    "opencv>=3.3",
    "psutil",
    "ipyparallel",
    "python",
    "psutil",
    "boost>=1.67",
    "boost-cpp>=1.67",
    "numpy>=1.11.3",
    "matplotlib>=2.2",
    "opencv>=3.3",
    "psutil",
    "ipyparallel"
   ]
  },
  "source":{
   "git_rev":"release/0.5.2",
   "git_url":"https://github.com/MultiNEAT/MultiNEAT.git"
  },
  "test":{
   "source_files":[
    "examples/TestTraits.py",
    "examples/NoveltySearch.py",
    "examples/TestNEAT_xor.py",
    "examples/TestHyperNEAT_xor.py",
    "examples/TestTraits.py",
    "examples/NoveltySearch.py",
    "examples/TestNEAT_xor.py",
    "examples/TestHyperNEAT_xor.py",
    "examples/TestTraits.py",
    "examples/NoveltySearch.py",
    "examples/TestNEAT_xor.py",
    "examples/TestHyperNEAT_xor.py"
   ]
  }
 },
 "name":"multineat",
 "new_version":false,
 "pinning_version":"2020.02.20",
 "raw_meta_yaml":"\n{% set name = \"multineat\" %}\n{% set version = \"0.5.2\" %}\n{% set sha256 = \"d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  git_tag: release/{{ version }}\n  git_url: https://github.com/MultiNEAT/MultiNEAT.git\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - python\n    - setuptools\n    - cmake\n    - psutil\n    - boost>=1.67\n    - boost-cpp>=1.67\n  run:\n    - python\n    - psutil\n    - boost>=1.67\n    - boost-cpp>=1.67\n    - numpy>=1.11.3\n    - matplotlib>=2.2\n    - opencv>=3.3\n    - psutil\n    - ipyparallel\n    - progressbar  # [py<=2.7]\n\ntest:\n  source_files:\n    - examples/TestTraits.py\n    - examples/NoveltySearch.py\n    - examples/TestNEAT_xor.py\n    - examples/TestHyperNEAT_xor.py\n\nabout:\n  home: http://MultiNEAT.com\n  license: LGPL-3.0\n  license_family: LGPL\n  license_file: LICENSE\n  summary: \n    Portable NeuroEvolution Library. Implements NEAT, rtNETA, HyperNEAT, Novelty Search and others.\n  description: |\n    MultiNEAT is a portable software library for performing neuroevolution, a form of machine learning that trains neural networks with a genetic algorithm. It is based on NEAT, an advanced method for evolving neural networks through complexification. The neural networks in NEAT begin evolution with very simple genomes which grow over successive generations. The individuals in the evolving population are grouped by similarity into species, and each of them can compete only with the individuals in the same species.\n  doc_url: http://multineat.com/docs.html\n  dev_url: https://github.com/MultiNEAT/MultiNEAT\n\nextra:\n  recipe-maintainers:\n    - anton-matosov\n",
 "req":{
  "__set__":true,
  "elements":[
   "boost",
   "boost-cpp",
   "cmake",
   "ipyparallel",
   "matplotlib",
   "numpy",
   "opencv",
   "psutil",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "cmake",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost",
    "boost-cpp",
    "ipyparallel",
    "matplotlib",
    "numpy",
    "opencv",
    "psutil",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.8",
 "strong_exports":false,
 "time":1568135295.5254986,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "boost-cpp>=1.67",
    "boost>=1.67",
    "cmake",
    "psutil",
    "python",
    "setuptools"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "boost-cpp>=1.67",
    "boost>=1.67",
    "ipyparallel",
    "matplotlib>=2.2",
    "numpy>=1.11.3",
    "opencv>=3.3",
    "psutil",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":null,
 "version":"0.5.2"
}