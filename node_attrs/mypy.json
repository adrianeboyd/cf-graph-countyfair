{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.610"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/201401505.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.620"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/215997041.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.630"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222968384.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.641"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/227066691.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/236981519.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.650"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245335687.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.660"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.670"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/267983546.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.700"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/271079332.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.701"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/289914865.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.710"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/291211572.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.711"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/297228119.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.720"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"mypy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Add type annotations to your Python programs, and use mypy to type check\nthem. Mypy is essentially a Python linter on steroids, and it can catch\nmany programming errors by analyzing your program, withoutactually having\nto run it.  Mypy has a powerful type system with features such as type\ninference, gradual typing, generics and union types.\n",
   "dev_url":"https://github.com/python/mypy",
   "doc_url":"http://mypy.readthedocs.io",
   "home":"http://www.mypy-lang.org/",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Optional static typing for Python"
  },
  "build":{
   "entry_points":[
    "mypy = mypy.__main__:console_entry",
    "stubgen = mypy.stubgen:main",
    "dmyp = mypy.dmypy.client:console_entry",
    "mypy = mypy.__main__:console_entry",
    "stubgen = mypy.stubgen:main",
    "dmyp = mypy.dmypy.client:console_entry",
    "mypy = mypy.__main__:console_entry",
    "stubgen = mypy.stubgen:main",
    "dmyp = mypy.dmypy.client:console_entry"
   ],
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "nehaljwani",
    "ocefpaf",
    "nehaljwani",
    "ocefpaf",
    "nehaljwani",
    "ocefpaf"
   ]
  },
  "package":{
   "name":"mypy",
   "version":"0.720"
  },
  "requirements":{
   "host":[
    "python >=3.5",
    "pip",
    "python >=3.5",
    "pip",
    "python >=3.5",
    "pip"
   ],
   "run":[
    "python >=3.5",
    "mypy_extensions >=0.4.0,<0.5.0",
    "typed-ast >=1.4.0,<1.5.0",
    "psutil >=4.0",
    "typing_extensions >=3.7.4",
    "python >=3.5",
    "mypy_extensions >=0.4.0,<0.5.0",
    "typed-ast >=1.4.0,<1.5.0",
    "psutil >=4.0",
    "typing_extensions >=3.7.4",
    "python >=3.5",
    "mypy_extensions >=0.4.0,<0.5.0",
    "typed-ast >=1.4.0,<1.5.0",
    "psutil >=4.0",
    "typing_extensions >=3.7.4"
   ]
  },
  "source":{
   "sha256":"49925f9da7cee47eebf3420d7c0e00ec662ec6abb2780eb0a16260a7ba25f9c4",
   "url":"https://pypi.io/packages/source/m/mypy/mypy-0.720.tar.gz"
  },
  "test":{
   "commands":[
    "mypy --help",
    "stubgen --help",
    "dmypy --help",
    "mypy --help",
    "stubgen --help",
    "dmypy --help",
    "mypy --help",
    "stubgen --help",
    "dmypy --help"
   ],
   "imports":[
    "mypy",
    "mypy.plugins",
    "mypy.server",
    "mypy.test",
    "mypy",
    "mypy.plugins",
    "mypy.server",
    "mypy.test",
    "mypy",
    "mypy.plugins",
    "mypy.server",
    "mypy.test"
   ]
  }
 },
 "name":"mypy",
 "new_version":"0.720",
 "pinning_version":"2019.07.10",
 "raw_meta_yaml":"{% set version = \"0.720\" %}\n\npackage:\n  name: mypy\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/m/mypy/mypy-{{ version }}.tar.gz\n  sha256: 49925f9da7cee47eebf3420d7c0e00ec662ec6abb2780eb0a16260a7ba25f9c4\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n  entry_points:\n    - mypy = mypy.__main__:console_entry\n    - stubgen = mypy.stubgen:main\n    - dmyp = mypy.dmypy.client:console_entry\n\nrequirements:\n  host:\n    - python >=3.5\n    - pip\n  run:\n    - python >=3.5\n    - mypy_extensions >=0.4.0,<0.5.0\n    - typed-ast >=1.4.0,<1.5.0\n    - psutil >=4.0\n    - typing_extensions >=3.7.4\n\ntest:\n  imports:\n    - mypy\n    - mypy.plugins\n    - mypy.server\n    - mypy.test\n  commands:\n    - mypy --help\n    - stubgen --help\n    - dmypy --help\n\nabout:\n  home: http://www.mypy-lang.org/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Optional static typing for Python\n  description: |\n    Add type annotations to your Python programs, and use mypy to type check\n    them. Mypy is essentially a Python linter on steroids, and it can catch\n    many programming errors by analyzing your program, withoutactually having\n    to run it.  Mypy has a powerful type system with features such as type\n    inference, gradual typing, generics and union types.\n  doc_url: http://mypy.readthedocs.io\n  dev_url: https://github.com/python/mypy\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "mypy_extensions",
   "pip",
   "psutil",
   "python",
   "typed-ast",
   "typing_extensions"
  ]
 },
 "smithy_version":"3.4.0",
 "time":1568050650.5798004,
 "url":"https://pypi.io/packages/source/m/mypy/mypy-0.720.tar.gz",
 "version":"0.720"
}