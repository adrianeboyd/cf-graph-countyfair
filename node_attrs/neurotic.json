{
 "PRed":[
  {
   "PR":{
    "id":"78269098-3f2e-4540-b035-38b69eac6caa",
    "merged_at":"never issued",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":504,
  "exception":"HTTP Error 504: Gateway Time-out",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 745, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 504: Gateway Time-out",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/n/neurotic/neurotic-1.2.1.zip"
 },
 "conda-forge.yml":{},
 "feedstock_name":"neurotic",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"neurotic is an app for Windows, macOS, and Linux that allows you to easily\nreview and annotate your electrophysiology data and simultaneously captured\nvideo. It is an easy way to load your Neo-compatible data into ephyviewer\nwithout doing any programming. Share a single metadata file with your\ncolleagues and they too will quickly be looking at the same datasets!\n",
   "dev_url":"https://github.com/jpgill86/neurotic",
   "doc_url":"https://neurotic.readthedocs.io/",
   "home":"https://github.com/jpgill86/neurotic",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Curate, visualize, annotate, and share your behavioral ephys data using Python"
  },
  "build":{
   "entry_points":[
    "neurotic=neurotic.scripts:main",
    "neurotic=neurotic.scripts:main",
    "neurotic=neurotic.scripts:main"
   ],
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "jpgill86",
    "jpgill86",
    "jpgill86"
   ]
  },
  "package":{
   "name":"neurotic",
   "version":"1.2.0"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run":[
    "av",
    "ephyviewer >=1.2.0",
    "numpy",
    "packaging",
    "pandas",
    "pyqt",
    "python",
    "python-neo >=0.7.2",
    "pyyaml",
    "quantities",
    "scipy",
    "setuptools",
    "tqdm",
    "av",
    "ephyviewer >=1.2.0",
    "numpy",
    "packaging",
    "pandas",
    "pyqt",
    "python",
    "python-neo >=0.7.2",
    "pyyaml",
    "quantities",
    "scipy",
    "setuptools",
    "tqdm",
    "av",
    "ephyviewer >=1.2.0",
    "numpy",
    "packaging",
    "pandas",
    "pyqt",
    "python",
    "python-neo >=0.7.2",
    "pyyaml",
    "quantities",
    "scipy",
    "setuptools",
    "tqdm"
   ]
  },
  "source":{
   "sha256":"6760fe4e624d63ee4a2ae734e5ee941679049674792d2b2b2d2706217bbff71b",
   "url":"https://pypi.io/packages/source/n/neurotic/neurotic-1.2.0.tar.gz"
  },
  "test":{
   "commands":[
    "neurotic --help",
    "neurotic --help",
    "neurotic --help"
   ],
   "imports":[
    "neurotic",
    "neurotic.datasets",
    "neurotic.gui",
    "neurotic.gui.icons",
    "neurotic.tests",
    "neurotic",
    "neurotic.datasets",
    "neurotic.gui",
    "neurotic.gui.icons",
    "neurotic.tests",
    "neurotic",
    "neurotic.datasets",
    "neurotic.gui",
    "neurotic.gui.icons",
    "neurotic.tests"
   ]
  }
 },
 "name":"neurotic",
 "new_version":"1.2.1",
 "pinning_version":"2019.11.14",
 "raw_meta_yaml":"{% set name = \"neurotic\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 6760fe4e624d63ee4a2ae734e5ee941679049674792d2b2b2d2706217bbff71b\n\nbuild:\n  number: 0\n  entry_points:\n    - neurotic=neurotic.scripts:main\n  skip: True  # [py<36]\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - av\n    - ephyviewer >=1.2.0\n    - numpy\n    - packaging\n    - pandas\n    - pyqt\n    - python\n    - python-neo >=0.7.2\n    - pyyaml\n    - quantities\n    - scipy\n    - setuptools\n    - tqdm\n\ntest:\n  imports:\n    - neurotic\n    - neurotic.datasets\n    - neurotic.gui\n    - neurotic.gui.icons\n    - neurotic.tests\n  commands:\n    - neurotic --help\n\nabout:\n  home: https://github.com/jpgill86/neurotic\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Curate, visualize, annotate, and share your behavioral ephys data using Python\n  description: |\n    neurotic is an app for Windows, macOS, and Linux that allows you to easily\n    review and annotate your electrophysiology data and simultaneously captured\n    video. It is an easy way to load your Neo-compatible data into ephyviewer\n    without doing any programming. Share a single metadata file with your\n    colleagues and they too will quickly be looking at the same datasets!\n  doc_url: https://neurotic.readthedocs.io/\n  dev_url: https://github.com/jpgill86/neurotic\n\nextra:\n  recipe-maintainers:\n    - jpgill86\n",
 "req":{
  "__set__":true,
  "elements":[
   "av",
   "ephyviewer",
   "numpy",
   "packaging",
   "pandas",
   "pip",
   "pyqt",
   "python",
   "python-neo",
   "pyyaml",
   "quantities",
   "scipy",
   "setuptools",
   "tqdm"
  ]
 },
 "smithy_version":"3.6.2",
 "url":"https://pypi.io/packages/source/n/neurotic/neurotic-1.1.1.tar.gz",
 "version":"1.2.0"
}