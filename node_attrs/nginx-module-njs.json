{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 655, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 99, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://nginx.org/download/nginx-.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"nginx-module-njs",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"njs is a subset of the JavaScript language that allows extending nginx functionality. It\ncan be used to: create complex access control and security checks in njs before a request\nreaches an upstream server; manipulate response headers; and write flexible asynchronous\ncontent handlers and filters.\n",
   "dev_url":"https://github.com/nginx/njs",
   "doc_url":"http://nginx.org/en/docs/njs",
   "home":"http://nginx.org/en/docs/njs",
   "license":"BSD-2-Clause",
   "license_family":"BSD",
   "license_file":"njs/LICENSE",
   "summary":"The njs scripting language"
  },
  "build":{
   "number":"2",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "sodre",
    "sodre",
    "sodre"
   ]
  },
  "package":{
   "name":"nginx-module-njs",
   "version":"0.2.7"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "nginx",
    "nginx",
    "nginx"
   ],
   "run":[
    "nginx",
    "nginx",
    "nginx"
   ]
  },
  "source":[
   {
    "folder":"njs",
    "patches":null,
    "sha256":"e386f391b8dda7e6396418109270b30bd44c507767c67d9f041d45fe3f0348a9",
    "url":"https://github.com/nginx/njs/archive/0.2.7.tar.gz"
   },
   {
    "folder":"nginx",
    "sha256":null,
    "url":"https://nginx.org/download/nginx-.tar.gz"
   },
   {
    "folder":"njs",
    "patches":[
     "0001-osx-gettimeofday.patch"
    ],
    "sha256":"e386f391b8dda7e6396418109270b30bd44c507767c67d9f041d45fe3f0348a9",
    "url":"https://github.com/nginx/njs/archive/0.2.7.tar.gz"
   },
   {
    "folder":"nginx",
    "sha256":null,
    "url":"https://nginx.org/download/nginx-.tar.gz"
   },
   {
    "folder":"njs",
    "patches":null,
    "sha256":"e386f391b8dda7e6396418109270b30bd44c507767c67d9f041d45fe3f0348a9",
    "url":"https://github.com/nginx/njs/archive/0.2.7.tar.gz"
   },
   {
    "folder":"nginx",
    "sha256":null,
    "url":"https://nginx.org/download/nginx-.tar.gz"
   }
  ],
  "test":{
   "commands":[
    "test -f $PREFIX/lib/nginx/modules/ngx_http_js_module.so",
    "test -f $PREFIX/lib/nginx/modules/ngx_stream_js_module.so",
    "cp js-site.conf $PREFIX/etc/nginx/sites.d/js-site.conf",
    "cp hello_world.js $PREFIX/etc/nginx/sites.d/hello_world.js",
    "nginx -t",
    "test -f $PREFIX/lib/nginx/modules/ngx_http_js_module.so",
    "test -f $PREFIX/lib/nginx/modules/ngx_stream_js_module.so",
    "cp js-site.conf $PREFIX/etc/nginx/sites.d/js-site.conf",
    "cp hello_world.js $PREFIX/etc/nginx/sites.d/hello_world.js",
    "nginx -t",
    "test -f $PREFIX/lib/nginx/modules/ngx_http_js_module.so",
    "test -f $PREFIX/lib/nginx/modules/ngx_stream_js_module.so",
    "cp js-site.conf $PREFIX/etc/nginx/sites.d/js-site.conf",
    "cp hello_world.js $PREFIX/etc/nginx/sites.d/hello_world.js",
    "nginx -t"
   ],
   "files":[
    "js-site.conf",
    "hello_world.js",
    "js-site.conf",
    "hello_world.js",
    "js-site.conf",
    "hello_world.js"
   ],
   "requires":[
    "curl",
    "curl",
    "curl"
   ]
  }
 },
 "name":"nginx-module-njs",
 "new_version":"0.3.5",
 "pinning_version":"2019.01.29",
 "raw_meta_yaml":"{% set name = \"njs\" %}\n{% set version = \"0.2.7\" %}\n\npackage:\n  name: nginx-module-{{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - folder: njs\n    url: https://github.com/nginx/{{ name }}/archive/{{ version }}.tar.gz\n    sha256: e386f391b8dda7e6396418109270b30bd44c507767c67d9f041d45fe3f0348a9\n    patches:\n      - 0001-osx-gettimeofday.patch  # [osx]\n  - folder: nginx\n    url: https://nginx.org/download/nginx-{{ nginx }}.tar.gz\n    sha256: {{ nginx_sha256 }}\n\nbuild:\n  number: 2\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - nginx {{ nginx }}\n  run: \n    - nginx\n\ntest:\n  files:\n    - js-site.conf\n    - hello_world.js\n  requires:\n    - curl\n  commands:\n    - test -f $PREFIX/lib/nginx/modules/ngx_http_js_module.so\n    - test -f $PREFIX/lib/nginx/modules/ngx_stream_js_module.so\n    - cp js-site.conf $PREFIX/etc/nginx/sites.d/js-site.conf\n    - cp hello_world.js $PREFIX/etc/nginx/sites.d/hello_world.js\n    - nginx -t\n\nabout:\n  home: http://nginx.org/en/docs/njs\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: njs/LICENSE\n  summary: 'The njs scripting language'\n\n  # The remaining entries in this section are optional, but recommended\n  description: |\n    njs is a subset of the JavaScript language that allows extending nginx functionality. It \n    can be used to: create complex access control and security checks in njs before a request\n    reaches an upstream server; manipulate response headers; and write flexible asynchronous\n    content handlers and filters.\n  doc_url: http://nginx.org/en/docs/njs\n  dev_url: https://github.com/nginx/njs\n\nextra:\n  recipe-maintainers:\n    - sodre\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "nginx"
  ]
 },
 "smithy_version":"3.2.12",
 "time":1568135300.3058476,
 "url":"https://github.com/nginx/njs/archive/0.2.7.tar.gz",
 "version":"0.2.7"
}