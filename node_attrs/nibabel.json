{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199881032.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/223426669.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/241800210.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/245537661.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/266370343.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/282646927.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/304068416.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"nibabel",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://nipy.org/nibabel",
   "license":"MIT",
   "license_file":"COPYING",
   "summary":"Python package to access a cacophony of neuro-imaging file formats"
  },
  "build":{
   "entry_points":[
    "parrec2nii   = nibabel.cmdline.parrec2nii:main",
    "nib-ls       = nibabel.cmdline.ls:main",
    "nib-dicomfs  = nibabel.cmdline.dicomfs:main",
    "nib-nifti-dx = nibabel.cmdline.nifti_dx:main",
    "nib-tck2trk  = nibabel.cmdline.tck2trk:main",
    "nib-trk2tck  = nibabel.cmdline.trk2tck:main",
    "nib-diff     = nibabel.cmdline.diff:main",
    "parrec2nii   = nibabel.cmdline.parrec2nii:main",
    "nib-ls       = nibabel.cmdline.ls:main",
    "nib-dicomfs  = nibabel.cmdline.dicomfs:main",
    "nib-nifti-dx = nibabel.cmdline.nifti_dx:main",
    "nib-tck2trk  = nibabel.cmdline.tck2trk:main",
    "nib-trk2tck  = nibabel.cmdline.trk2tck:main",
    "nib-diff     = nibabel.cmdline.diff:main",
    "parrec2nii   = nibabel.cmdline.parrec2nii:main",
    "nib-ls       = nibabel.cmdline.ls:main",
    "nib-dicomfs  = nibabel.cmdline.dicomfs:main",
    "nib-nifti-dx = nibabel.cmdline.nifti_dx:main",
    "nib-tck2trk  = nibabel.cmdline.tck2trk:main",
    "nib-trk2tck  = nibabel.cmdline.trk2tck:main",
    "nib-diff     = nibabel.cmdline.diff:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "arokem",
    "grlee77",
    "effigies",
    "arokem",
    "grlee77",
    "effigies",
    "arokem",
    "grlee77",
    "effigies"
   ]
  },
  "package":{
   "name":"nibabel",
   "version":"2.5.0"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run":[
    "python",
    "numpy",
    "scipy",
    "h5py",
    "pydicom",
    "six",
    "bz2file",
    "python",
    "numpy",
    "scipy",
    "h5py",
    "pydicom",
    "six",
    "bz2file",
    "python",
    "numpy",
    "scipy",
    "h5py",
    "pydicom",
    "six",
    "bz2file"
   ]
  },
  "source":{
   "fn":"nibabel-2.5.0.tar.gz",
   "sha256":"8a00735f766c948f6cc6080f928741ee5581eb1b5a84e18dd653c7faa04e1e22",
   "url":"https://github.com/nipy/nibabel/archive/2.5.0.tar.gz"
  },
  "test":{
   "commands":[
    "parrec2nii --help",
    "nib-ls --help",
    "nib-dicomfs --help",
    "nib-nifti-dx --help",
    "nib-tck2trk --help",
    "nib-trk2tck --help",
    "nib-diff --help",
    "parrec2nii --help",
    "nib-ls --help",
    "nib-dicomfs --help",
    "nib-nifti-dx --help",
    "nib-tck2trk --help",
    "nib-trk2tck --help",
    "nib-diff --help",
    "parrec2nii --help",
    "nib-ls --help",
    "nib-dicomfs --help",
    "nib-nifti-dx --help",
    "nib-tck2trk --help",
    "nib-trk2tck --help",
    "nib-diff --help"
   ],
   "imports":[
    "nibabel",
    "nibabel",
    "nibabel"
   ]
  }
 },
 "name":"nibabel",
 "new_version":"2.5.0",
 "pinning_version":"2019.07.26",
 "raw_meta_yaml":"# Jinja variables help maintain the recipe as you'll update the version only here.\n{% set name = \"nibabel\" %}\n{% set version = \"2.5.0\" %}\n{% set sha256 = \"8a00735f766c948f6cc6080f928741ee5581eb1b5a84e18dd653c7faa04e1e22\" %}\n\n# sha256 is the prefered checksum -- you can get it for a file with:\n#  `openssl sha256 <file name>`.\n# You may need the openssl package, available on conda-forge\n#  `conda install openssl -c conda-forge``\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/nipy/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n    noarch: python\n    number: 0\n    script: \"{{ PYTHON }} -m pip install . -vv\"\n    entry_points:\n      - parrec2nii   = nibabel.cmdline.parrec2nii:main\n      - nib-ls       = nibabel.cmdline.ls:main\n      - nib-dicomfs  = nibabel.cmdline.dicomfs:main\n      - nib-nifti-dx = nibabel.cmdline.nifti_dx:main\n      - nib-tck2trk  = nibabel.cmdline.tck2trk:main\n      - nib-trk2tck  = nibabel.cmdline.trk2tck:main\n      - nib-diff     = nibabel.cmdline.diff:main\n\nrequirements:\n  host:\n    - pip\n    - python\n  run:\n    - python\n    - numpy\n    - scipy\n    - h5py\n    - pydicom\n    - six\n    - bz2file\n\ntest:\n  imports:\n    - nibabel\n  commands:\n    - parrec2nii --help\n    - nib-ls --help\n    - nib-dicomfs --help\n    - nib-nifti-dx --help\n    - nib-tck2trk --help\n    - nib-trk2tck --help\n    - nib-diff --help\n\n\nabout:\n  home: https://nipy.org/nibabel\n  license: MIT\n  license_file: COPYING\n  summary: Python package to access a cacophony of neuro-imaging file formats\n\nextra:\n  recipe-maintainers:\n    - arokem\n    - grlee77\n    - effigies\n",
 "req":{
  "__set__":true,
  "elements":[
   "bz2file",
   "h5py",
   "numpy",
   "pip",
   "pydicom",
   "python",
   "scipy",
   "six"
  ]
 },
 "smithy_version":"3.4.1",
 "time":1568070537.1132014,
 "url":"https://github.com/nipy/nibabel/archive/2.5.0.tar.gz",
 "version":"2.5.0"
}