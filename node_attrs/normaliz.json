{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/288950785.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"boost-cpp-1.70.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/303387011.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "head":{
     "ref":"<this_is_not_a_branch>"
    },
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/322499751.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/344804326.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.8.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 257, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 693, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 83, in run",
   "    gh=gh)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.xsh\", line 111, in get_repo",
   "    repo = gh.repository('conda-forge', feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"normaliz",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/Normaliz/Normaliz",
   "home":"https://www.normaliz.uni-osnabrueck.de",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"COPYING",
   "summary":" Normaliz is an open source tool for computations in affine monoids, vector configurations, lattice polytopes, and rational cones."
  },
  "build":{
   "number":"0",
   "run_exports":[
    "subpackage_stub",
    "subpackage_stub",
    "subpackage_stub"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum",
    "isuruf",
    "saraedum"
   ]
  },
  "package":{
   "name":"normaliz",
   "version":"3.8.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "autotools_clang_conda",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "autoconf",
    "automake",
    "libtool",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "libtool"
   ],
   "host":[
    "boost-cpp",
    "mpir",
    "llvm-openmp",
    "nauty",
    "pthreads-win32",
    "libflint",
    "boost-cpp",
    "gmp",
    "llvm-openmp",
    "e-antic",
    "nauty",
    "libflint",
    "boost-cpp",
    "gmp",
    "e-antic",
    "nauty"
   ],
   "run":null
  },
  "source":{
   "patches":[
    "extern-kill.patch",
    "extern-kill.patch",
    "extern-kill.patch"
   ],
   "sha256":"89d4551a8d527623768cea2e265200af35b896ab5e70352940769b7408bad3e1",
   "url":"https://github.com/Normaliz/Normaliz/releases/download/v3.8.1/normaliz-3.8.1-full.zip"
  },
  "test":{
   "commands":[
    "if not exist %LIBRARY_LIB%\\\\normaliz.lib exit 1",
    "if not exist %LIBRARY_LIB%\\\\normaliz_static.lib exit 1",
    "if not exist %LIBRARY_INC%\\\\libnormaliz\\\\matrix.h exit 1",
    "test -f \"$PREFIX/lib/libnormaliz.a\"",
    "test -f \"$PREFIX/lib/libnormaliz${SHLIB_EXT}\"",
    "test -f \"$PREFIX/include/libnormaliz/matrix.h\"",
    "test -f \"$PREFIX/lib/libnormaliz.a\"",
    "test -f \"$PREFIX/lib/libnormaliz${SHLIB_EXT}\"",
    "test -f \"$PREFIX/include/libnormaliz/matrix.h\""
   ]
  }
 },
 "name":"normaliz",
 "new_version":"3.8.3",
 "pinning_version":"2019.11.20",
 "raw_meta_yaml":"{% set name = \"normaliz\" %}\n{% set version = \"3.8.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Normaliz/Normaliz/releases/download/v{{ version }}/normaliz-{{ version }}-full.zip\n  sha256: 89d4551a8d527623768cea2e265200af35b896ab5e70352940769b7408bad3e1\n  patches:\n   - extern-kill.patch\n\nbuild:\n  number: 0\n  skip: True  # [win and vc<14]\n  run_exports:\n    - {{ pin_subpackage(\"normaliz\") }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - llvm-openmp          # [osx or win]\n    - autotools_clang_conda  # [win]\n    - autoconf             # [not win]\n    - automake             # [not win]\n    - libtool              # [not win]\n  host:\n    - libflint             # [not win]\n    - boost-cpp\n    - gmp                  # [not win]\n    - mpir                 # [win]\n    - llvm-openmp          # [osx or win]\n    - e-antic              # [not win]\n    - nauty\n    - pthreads-win32       # [win]\n  run:\n    - llvm-openmp          # [osx or win]\n\ntest:\n  commands:\n    - test -f \"$PREFIX/lib/libnormaliz.a\"                       # [not win]\n    - test -f \"$PREFIX/lib/libnormaliz${SHLIB_EXT}\"             # [not win]\n    - test -f \"$PREFIX/include/libnormaliz/matrix.h\"            # [not win]\n    - if not exist %LIBRARY_LIB%\\\\normaliz.lib exit 1         # [win]\n    - if not exist %LIBRARY_LIB%\\\\normaliz_static.lib exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\\\libnormaliz\\\\matrix.h exit 1   # [win]\n\nabout:\n  home: https://www.normaliz.uni-osnabrueck.de\n  license: GPL-3.0\n  license_family: GPL\n  license_file: COPYING\n  summary: ' Normaliz is an open source tool for computations in affine monoids, vector configurations, lattice polytopes, and rational cones.'\n  dev_url: https://github.com/Normaliz/Normaliz\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - saraedum\n",
 "req":{
  "__set__":true,
  "elements":[
   "autoconf",
   "automake",
   "autotools_clang_conda",
   "boost-cpp",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "e-antic",
   "gmp",
   "libflint",
   "libtool",
   "llvm-openmp",
   "mpir",
   "nauty",
   "pthreads-win32"
  ]
 },
 "smithy_version":"3.6.2",
 "url":"https://github.com/Normaliz/Normaliz/releases/download/v3.7.4/normaliz-3.7.4-full.zip",
 "version":"3.8.1"
}