{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/269745162.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.4.11"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/283746347.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.5.30"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/309237811.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.8.20"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339121298.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2019.11.9"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/422886524.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.5.24"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/472068906.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "2020.8.22"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/473312588.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/473313020.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "conda-forge.yml": {},
 "feedstock_name": "nox",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "nox is a command-line tool that automates testing in multiple Python\nenvironments, similar to Tox. Unlike Tox, Nox uses a standard Python\nfile for configuration.\n",
   "dev_url": "https://github.com/theacodes/nox",
   "doc_url": "https://nox.thea.codes",
   "home": "https://nox.thea.codes",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Flexible test automation for Python"
  },
  "build": {
   "entry_points": [
    "nox = nox.__main__:main",
    "tox-to-nox = nox.tox_to_nox:main"
   ],
   "number": "0",
   "script": "-m pip install . --no-deps --ignore-installed -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "kynan",
    "MarckK",
    "tswast"
   ]
  },
  "package": {
   "name": "nox",
   "version": "2020.8.22"
  },
  "requirements": {
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python",
    "argcomplete >=1.9.4,<2.0",
    "colorlog >=2.6.1,<4.0.0",
    "py >=1.4.0,<2.0.0",
    "virtualenv >=14.0.0",
    "importlib_metadata",
    "jinja2",
    "tox"
   ]
  },
  "source": {
   "sha256": "efa5adcf1134012f96bcd0a496ccebd4c9e9da53a831888a2a779462440eebcf",
   "url": "https://pypi.io/packages/source/n/nox/nox-2020.8.22.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check"
   ],
   "imports": [
    "nox",
    "nox.tox_to_nox"
   ],
   "requires": [
    "python",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "colorlog",
    "importlib_metadata",
    "jinja2",
    "py",
    "python",
    "tox",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "nox is a command-line tool that automates testing in multiple Python\nenvironments, similar to Tox. Unlike Tox, Nox uses a standard Python\nfile for configuration.\n",
   "dev_url": "https://github.com/theacodes/nox",
   "doc_url": "https://nox.thea.codes",
   "home": "https://nox.thea.codes",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Flexible test automation for Python"
  },
  "build": {
   "entry_points": [
    "nox = nox.__main__:main",
    "tox-to-nox = nox.tox_to_nox:main"
   ],
   "number": "0",
   "script": "-m pip install . --no-deps --ignore-installed -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "kynan",
    "MarckK",
    "tswast"
   ]
  },
  "package": {
   "name": "nox",
   "version": "2020.8.22"
  },
  "requirements": {
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python",
    "argcomplete >=1.9.4,<2.0",
    "colorlog >=2.6.1,<4.0.0",
    "py >=1.4.0,<2.0.0",
    "virtualenv >=14.0.0",
    "importlib_metadata",
    "jinja2",
    "tox"
   ]
  },
  "source": {
   "sha256": "efa5adcf1134012f96bcd0a496ccebd4c9e9da53a831888a2a779462440eebcf",
   "url": "https://pypi.io/packages/source/n/nox/nox-2020.8.22.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check"
   ],
   "imports": [
    "nox",
    "nox.tox_to_nox"
   ],
   "requires": [
    "python",
    "pip"
   ]
  }
 },
 "name": "nox",
 "new_version": "2020.8.22",
 "new_version_attempts": {
  "2020.5.24": 1,
  "2020.8.22": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "nox is a command-line tool that automates testing in multiple Python\nenvironments, similar to Tox. Unlike Tox, Nox uses a standard Python\nfile for configuration.\n",
   "dev_url": "https://github.com/theacodes/nox",
   "doc_url": "https://nox.thea.codes",
   "home": "https://nox.thea.codes",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Flexible test automation for Python"
  },
  "build": {
   "entry_points": [
    "nox = nox.__main__:main",
    "tox-to-nox = nox.tox_to_nox:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps --ignore-installed -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "kynan",
    "MarckK",
    "tswast"
   ]
  },
  "package": {
   "name": "nox",
   "version": "2020.5.24"
  },
  "requirements": {
   "host": [
    "python >=3.5",
    "pip"
   ],
   "run": [
    "python >=3.5",
    "argcomplete >=1.9.4,<2.0",
    "colorlog >=2.6.1,<4.0.0",
    "py >=1.4.0,<2.0.0",
    "virtualenv >=14.0.0",
    "jinja2",
    "tox"
   ]
  },
  "source": {
   "sha256": "61a55705736a1a73efbd18d5b262a43d55a1176546e0eb28b29064cfcffe26c0",
   "url": "https://pypi.io/packages/source/n/nox/nox-2020.5.24.tar.gz"
  },
  "test": {
   "imports": [
    "nox",
    "nox.tox_to_nox"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "colorlog",
    "jinja2",
    "py",
    "python",
    "tox",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "pinning_version": "2020.08.25.14.55.21",
 "raw_meta_yaml": "{% set version = \"2020.8.22\" %}\n\npackage:\n  name: nox\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/n/nox/nox-{{ version }}.tar.gz\n  sha256: efa5adcf1134012f96bcd0a496ccebd4c9e9da53a831888a2a779462440eebcf\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vvv\n  entry_points:\n    - nox = nox.__main__:main\n    - tox-to-nox = nox.tox_to_nox:main\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - argcomplete >=1.9.4,<2.0\n    - colorlog >=2.6.1,<4.0.0\n    - py >=1.4.0,<2.0.0\n    - virtualenv >=14.0.0\n    - importlib_metadata  # [py<38]\n    - jinja2\n    - tox\n\ntest:\n  requires:\n    - python\n    - pip\n  imports:\n    - nox\n    - nox.tox_to_nox\n  commands:\n    - python -m pip check\n\nabout:\n  home: https://nox.thea.codes\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Flexible test automation for Python\n\n  description: |\n    nox is a command-line tool that automates testing in multiple Python\n    environments, similar to Tox. Unlike Tox, Nox uses a standard Python\n    file for configuration.\n  doc_url: https://nox.thea.codes\n  dev_url: https://github.com/theacodes/nox\n\nextra:\n  recipe-maintainers:\n    - kynan\n    - MarckK\n    - tswast\n",
 "req": {
  "__set__": true,
  "elements": [
   "argcomplete",
   "colorlog",
   "importlib_metadata",
   "jinja2",
   "pip",
   "py",
   "python",
   "tox",
   "virtualenv"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "colorlog",
    "importlib_metadata",
    "jinja2",
    "py",
    "python",
    "tox",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete >=1.9.4,<2.0",
    "colorlog >=2.6.1,<4.0.0",
    "importlib_metadata",
    "jinja2",
    "py >=1.4.0,<2.0.0",
    "python",
    "tox",
    "virtualenv >=14.0.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/n/nox/nox-2019.8.20.tar.gz",
 "version": "2020.8.22",
 "win_64_meta_yaml": {
  "about": {
   "description": "nox is a command-line tool that automates testing in multiple Python\nenvironments, similar to Tox. Unlike Tox, Nox uses a standard Python\nfile for configuration.\n",
   "dev_url": "https://github.com/theacodes/nox",
   "doc_url": "https://nox.thea.codes",
   "home": "https://nox.thea.codes",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Flexible test automation for Python"
  },
  "build": {
   "entry_points": [
    "nox = nox.__main__:main",
    "tox-to-nox = nox.tox_to_nox:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps --ignore-installed -vvv"
  },
  "extra": {
   "recipe-maintainers": [
    "kynan",
    "MarckK",
    "tswast"
   ]
  },
  "package": {
   "name": "nox",
   "version": "2020.5.24"
  },
  "requirements": {
   "host": [
    "python >=3.5",
    "pip"
   ],
   "run": [
    "python >=3.5",
    "argcomplete >=1.9.4,<2.0",
    "colorlog >=2.6.1,<4.0.0",
    "py >=1.4.0,<2.0.0",
    "virtualenv >=14.0.0",
    "jinja2",
    "tox"
   ]
  },
  "source": {
   "sha256": "61a55705736a1a73efbd18d5b262a43d55a1176546e0eb28b29064cfcffe26c0",
   "url": "https://pypi.io/packages/source/n/nox/nox-2020.5.24.tar.gz"
  },
  "test": {
   "imports": [
    "nox",
    "nox.tox_to_nox"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "argcomplete",
    "colorlog",
    "jinja2",
    "py",
    "python",
    "tox",
    "virtualenv"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}