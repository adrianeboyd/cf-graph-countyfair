{
 "bad":"Upstream: Error getting upstream version",
 "conda-forge.yml":{},
 "feedstock_name":"nvcc",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/conda-forge/nvcc-feedstock",
   "license":"BSD 3-Clause",
   "license_file":"LICENSE.txt",
   "summary":"A meta-package to enable the right nvcc."
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "dillon-cullinan",
    "isuruf",
    "jakirkham",
    "kkraus14",
    "mike-wendt",
    "raydouglass",
    "dillon-cullinan",
    "isuruf",
    "jakirkham",
    "kkraus14",
    "mike-wendt",
    "raydouglass",
    "dillon-cullinan",
    "isuruf",
    "jakirkham",
    "kkraus14",
    "mike-wendt",
    "raydouglass"
   ]
  },
  "outputs":[
   {
    "about":{
     "home":"https://github.com/conda-forge/nvcc-feedstock",
     "license":"BSD 3-Clause",
     "license_file":"LICENSE.txt",
     "summary":"A meta-package to enable the right nvcc."
    },
    "build":{
     "ignore_run_exports":[
      "libgcc-ng"
     ],
     "run_exports":{
      "strong":[
       "cudatoolkit |.*"
      ]
     },
     "script_env":[
      "CUDA_HOME"
     ]
    },
    "name":"nvcc_",
    "requirements":{
     "host":[
      "c_compiler_stub"
     ],
     "run":null
    },
    "script":"install_nvcc.sh",
    "test":{
     "commands":[
      "test -f \"$(${CC} --print-sysroot)/lib/libcuda.so\"",
      "test -f \"${PREFIX}/etc/conda/activate.d/_activate.sh\"",
      "test -f \"${PREFIX}/etc/conda/deactivate.d/_deactivate.sh\"",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi",
      "source ${PREFIX}/etc/conda/deactivate.d/_deactivate.sh",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after deactivation \"; else echo \"CUDA_HOME is set to '$CUDA_HOME' after deactivation\" && exit 1; fi",
      "source ${PREFIX}/etc/conda/activate.d/_activate.sh",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi",
      "nvcc test.cu"
     ],
     "files":[
      "test.cu"
     ],
     "requires":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    },
    "version":""
   },
   {
    "about":{
     "home":"https://github.com/conda-forge/nvcc-feedstock",
     "license":"BSD 3-Clause",
     "license_file":"LICENSE.txt",
     "summary":"A meta-package to enable the right nvcc."
    },
    "build":{
     "ignore_run_exports":[
      "libgcc-ng"
     ],
     "run_exports":{
      "strong":[
       "cudatoolkit |.*"
      ]
     },
     "script_env":[
      "CUDA_HOME"
     ]
    },
    "name":"nvcc_",
    "requirements":{
     "host":[
      "c_compiler_stub"
     ],
     "run":null
    },
    "script":"install_nvcc.sh",
    "test":{
     "commands":[
      "test -f \"$(${CC} --print-sysroot)/lib/libcuda.so\"",
      "test -f \"${PREFIX}/etc/conda/activate.d/_activate.sh\"",
      "test -f \"${PREFIX}/etc/conda/deactivate.d/_deactivate.sh\"",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi",
      "source ${PREFIX}/etc/conda/deactivate.d/_deactivate.sh",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after deactivation \"; else echo \"CUDA_HOME is set to '$CUDA_HOME' after deactivation\" && exit 1; fi",
      "source ${PREFIX}/etc/conda/activate.d/_activate.sh",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi",
      "nvcc test.cu"
     ],
     "files":[
      "test.cu"
     ],
     "requires":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    },
    "version":""
   },
   {
    "about":{
     "home":"https://github.com/conda-forge/nvcc-feedstock",
     "license":"BSD 3-Clause",
     "license_file":"LICENSE.txt",
     "summary":"A meta-package to enable the right nvcc."
    },
    "build":{
     "ignore_run_exports":[
      "libgcc-ng"
     ],
     "run_exports":{
      "strong":[
       "cudatoolkit |.*"
      ]
     },
     "script_env":[
      "CUDA_HOME"
     ]
    },
    "name":"nvcc_",
    "requirements":{
     "host":[
      "c_compiler_stub"
     ],
     "run":null
    },
    "script":"install_nvcc.sh",
    "test":{
     "commands":[
      "test -f \"$(${CC} --print-sysroot)/lib/libcuda.so\"",
      "test -f \"${PREFIX}/etc/conda/activate.d/_activate.sh\"",
      "test -f \"${PREFIX}/etc/conda/deactivate.d/_deactivate.sh\"",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi",
      "source ${PREFIX}/etc/conda/deactivate.d/_deactivate.sh",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after deactivation \"; else echo \"CUDA_HOME is set to '$CUDA_HOME' after deactivation\" && exit 1; fi",
      "source ${PREFIX}/etc/conda/activate.d/_activate.sh",
      "if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi",
      "nvcc test.cu"
     ],
     "files":[
      "test.cu"
     ],
     "requires":[
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    },
    "version":""
   }
  ],
  "package":{
   "name":"nvcc"
  }
 },
 "name":"nvcc",
 "new_version":false,
 "raw_meta_yaml":"{% set name = \"nvcc\" %}\n\npackage:\n  name: \"{{ name }}\"\n\nbuild:\n  number: 0\n  skip: true  # [not linux]\n\noutputs:\n  - name: \"{{ name }}_{{ target_platform }}\"\n    version: \"{{ CUDA_VER }}\"\n    script: install_nvcc.sh\n    build:\n      script_env:\n        - CUDA_HOME\n      ignore_run_exports:\n        - libgcc-ng\n      run_exports:\n        strong:\n          - cudatoolkit {{ CUDA_VER }}|{{ CUDA_VER }}.*\n    requirements:\n      host:\n        # Needed to symlink libcuda into sysroot libs.\n        - {{ compiler(\"c\") }}\n      run:\n    test:\n      requires:\n        - {{ compiler(\"c\") }}\n        # Host code is forwarded to a C++ compiler\n        - {{ compiler(\"cxx\") }}\n      files:\n        - test.cu\n      commands:\n        # Verify the symlink to the libcuda stub library exists.\n        - test -f \"$(${CC} --print-sysroot)/lib/libcuda.so\"\n        # Verify the activation scripts are in-place.\n        {% for state in [\"activate\", \"deactivate\"] %}\n        - test -f \"${PREFIX}/etc/conda/{{ state }}.d/{{ PKG_NAME }}_{{ state }}.sh\"\n        {% endfor %}\n        # Try using the activation scripts.\n        - if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi\n        - source ${PREFIX}/etc/conda/deactivate.d/{{ PKG_NAME }}_deactivate.sh\n        - if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after deactivation \"; else echo \"CUDA_HOME is set to '$CUDA_HOME' after deactivation\" && exit 1; fi\n        - source ${PREFIX}/etc/conda/activate.d/{{ PKG_NAME }}_activate.sh\n        - if [ -z ${CUDA_HOME+x} ]; then echo \"CUDA_HOME is unset after activation\" && exit 1; else echo \"CUDA_HOME is set to '$CUDA_HOME'\"; fi\n        # Try building something.\n        - nvcc test.cu\n    about:\n      home: https://github.com/conda-forge/nvcc-feedstock\n      license: BSD 3-Clause\n      license_file: LICENSE.txt\n      summary: A meta-package to enable the right nvcc.\n\nabout:\n  home: https://github.com/conda-forge/nvcc-feedstock\n  license: BSD 3-Clause\n  license_file: LICENSE.txt\n  summary: A meta-package to enable the right nvcc.\n\nextra:\n  recipe-maintainers:\n    - dillon-cullinan\n    - isuruf\n    - jakirkham\n    - kkraus14\n    - mike-wendt\n    - raydouglass\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub"
  ]
 },
 "time":1568135311.4851289
}