{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/196597120.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/212244272.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/222625676.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/247817556.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/261533053.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_object_version":3,
    "migrator_version":0,
    "name":"libprotobuf-3.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/273249754.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/292513658.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"libprotobuf-3.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"onnx",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Open Neural Network Exchange (ONNX) is the first step toward an open\necosystem that empowers AI developers to choose the right tools as their\nproject evolves. ONNX provides an open source format for AI models. It\ndefines an extensible computation graph model, as well as definitions of\nbuilt-in operators and standard data types. Initially we focus on the\ncapabilities needed for inferencing (evaluation).\n",
   "home":"https://github.com/onnx/onnx/",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE",
   "summary":"Open Neural Network Exchange library"
  },
  "build":{
   "entry_points":[
    "check-model = onnx.bin.checker:check_model",
    "check-node = onnx.bin.checker:check_node",
    "backend-test-tools = onnx.backend.test.cmd_tools:main",
    "check-model = onnx.bin.checker:check_model",
    "check-node = onnx.bin.checker:check_node",
    "backend-test-tools = onnx.backend.test.cmd_tools:main",
    "check-model = onnx.bin.checker:check_model",
    "check-node = onnx.bin.checker:check_node",
    "backend-test-tools = onnx.backend.test.cmd_tools:main"
   ],
   "number":"2",
   "script":[
    "set \"ONNX_ML=1\"",
    "python -m pip install --no-deps --ignore-installed --verbose .",
    "export ONNX_ML=1",
    "export CONDA_PREFIX=\"$PREFIX\"",
    "python -m pip install --no-deps --ignore-installed --verbose .",
    "export ONNX_ML=1",
    "export CONDA_PREFIX=\"$PREFIX\"",
    "python -m pip install --no-deps --ignore-installed --verbose ."
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "ezyang",
    "dougalsutherland",
    "marcelotrevisani",
    "ezyang",
    "dougalsutherland",
    "marcelotrevisani",
    "ezyang",
    "dougalsutherland",
    "marcelotrevisani"
   ]
  },
  "package":{
   "name":"onnx",
   "version":"1.5.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host":[
    "python",
    "pip",
    "protobuf",
    "pytest-runner",
    "ninja",
    "pybind11",
    "python",
    "pip",
    "protobuf",
    "pytest-runner",
    "ninja",
    "pybind11",
    "python",
    "pip",
    "protobuf",
    "pytest-runner",
    "ninja",
    "pybind11"
   ],
   "run":[
    "python",
    "protobuf",
    "numpy",
    "six",
    "python",
    "protobuf",
    "numpy",
    "six",
    "python",
    "protobuf",
    "numpy",
    "six"
   ]
  },
  "source":{
   "fn":"onnx-1.5.0.tar.gz",
   "sha256":"707887fffd79f36213baea7012fd1599c2c6d14ca4974484f1363dced4f7357a",
   "url":"https://github.com/onnx/onnx/archive/v1.5.0.tar.gz"
  },
  "test":{
   "commands":[
    "check-model --help",
    "check-node --help",
    "backend-test-tools --help",
    "check-model --help",
    "check-node --help",
    "backend-test-tools --help",
    "conda inspect linkages -p $PREFIX onnx",
    "conda inspect objects -p $PREFIX onnx",
    "check-model --help",
    "check-node --help",
    "backend-test-tools --help",
    "conda inspect linkages -p $PREFIX onnx"
   ],
   "imports":[
    "onnx",
    "onnx",
    "onnx"
   ]
  }
 },
 "name":"onnx",
 "new_version":"1.5.0",
 "pinning_version":"2019.06.27",
 "raw_meta_yaml":"{% set name = \"onnx\" %}\n{% set version = \"1.5.0\" %}\n{% set sha256 = \"707887fffd79f36213baea7012fd1599c2c6d14ca4974484f1363dced4f7357a\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/onnx/onnx/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script:\n    - export ONNX_ML=1  # [unix]\n    - set \"ONNX_ML=1\"  # [win]\n    # build script looks at this, but not set on\n    - export CONDA_PREFIX=\"$PREFIX\"  # [unix]\n    - python -m pip install --no-deps --ignore-installed --verbose .\n  entry_points:\n    - check-model = onnx.bin.checker:check_model\n    - check-node = onnx.bin.checker:check_node\n    - backend-test-tools = onnx.backend.test.cmd_tools:main\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - python\n    - pip\n    - protobuf\n    - pytest-runner\n    - ninja\n    - pybind11\n  run:\n    - python\n    - protobuf\n    - numpy\n    - six\n    - typing  # [py2k]\n\ntest:\n  imports:\n    - onnx\n  commands:\n    - check-model --help\n    - check-node --help\n    - backend-test-tools --help\n    - conda inspect linkages -p $PREFIX {{ name }}  # [unix]\n    - conda inspect objects -p $PREFIX {{ name }}   # [osx]\n\nabout:\n  home: https://github.com/onnx/onnx/\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Open Neural Network Exchange library\n  description: |\n    Open Neural Network Exchange (ONNX) is the first step toward an open\n    ecosystem that empowers AI developers to choose the right tools as their\n    project evolves. ONNX provides an open source format for AI models. It\n    defines an extensible computation graph model, as well as definitions of\n    built-in operators and standard data types. Initially we focus on the\n    capabilities needed for inferencing (evaluation).\n\nextra:\n  recipe-maintainers:\n    - ezyang\n    - dougalsutherland\n    - marcelotrevisani\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "ninja",
   "numpy",
   "pip",
   "protobuf",
   "pybind11",
   "pytest-runner",
   "python",
   "six"
  ]
 },
 "smithy_version":"3.4.0",
 "time":1568050622.1447232,
 "url":"https://github.com/onnx/onnx/archive/v1.5.0.tar.gz",
 "version":"1.5.0"
}