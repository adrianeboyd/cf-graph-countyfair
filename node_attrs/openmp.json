{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/198232414.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"6.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/198532033.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/203952423.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Pinning",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216584150.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/229922085.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/238893990.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"7.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/262806247.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"8.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"openmp",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://openmp.llvm.org/",
   "license":"NCSA",
   "license_file":"LICENSE.txt",
   "summary":"The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf",
    "inducer",
    "jakirkham",
    "yesimon",
    "isuruf"
   ]
  },
  "outputs":[
   {
    "build":{
     "run_exports":{
      "strong":[
       "subpackage_stub"
      ]
     }
    },
    "name":"llvm-openmp",
    "requirements":{
     "build":[
      "cxx_compiler_stub",
      "cmake",
      "perl",
      "ninja"
     ],
     "host":[
      "llvmdev 8.0.1|8.0.1.*"
     ],
     "run_constrained":[
      "clangdev 8.0.1|8.0.1.*",
      "llvmdev 8.0.1|8.0.1.*",
      "openmp 8.0.1|8.0.1.*"
     ]
    },
    "script":"bld-llvm-openmp.bat"
   },
   {
    "name":"openmp",
    "requirements":{
     "run":[
      "subpackage_stub"
     ]
    }
   },
   {
    "build":{
     "run_exports":{
      "strong":[
       "subpackage_stub"
      ]
     }
    },
    "name":"llvm-openmp",
    "requirements":{
     "build":[
      "cxx_compiler_stub",
      "cmake",
      "perl"
     ],
     "host":[
      "llvmdev 8.0.1|8.0.1.*"
     ],
     "run_constrained":[
      "clangdev 8.0.1|8.0.1.*",
      "llvmdev 8.0.1|8.0.1.*",
      "openmp 8.0.1|8.0.1.*"
     ]
    },
    "script":"build-llvm-openmp.sh"
   },
   {
    "name":"openmp",
    "requirements":{
     "run":[
      "subpackage_stub"
     ]
    }
   },
   {
    "build":{
     "run_exports":{
      "strong":[
       "subpackage_stub"
      ]
     }
    },
    "name":"llvm-openmp",
    "requirements":{
     "build":[
      "cxx_compiler_stub",
      "cmake",
      "perl"
     ],
     "host":[
      "llvmdev 8.0.1|8.0.1.*"
     ],
     "run_constrained":[
      "clangdev 8.0.1|8.0.1.*",
      "llvmdev 8.0.1|8.0.1.*",
      "openmp 8.0.1|8.0.1.*"
     ]
    },
    "script":"build-llvm-openmp.sh"
   },
   {
    "name":"openmp",
    "requirements":{
     "run":[
      "subpackage_stub"
     ]
    }
   }
  ],
  "package":{
   "name":"llvm-openmp",
   "version":"8.0.1"
  },
  "source":{
   "patches":[
    "D65714.patch",
    "D65714.patch",
    "D65714.patch"
   ],
   "sha256":"3e85dd3cad41117b7c89a41de72f2e6aa756ea7b4ef63bb10dcddf8561a7722c",
   "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/openmp-8.0.1.src.tar.xz"
  },
  "test":{
   "commands":[
    "if not exist %LIBRARY_BIN%\\\\libomp.dll exit 1",
    "if not exist %LIBRARY_LIB%\\\\libomp.lib exit 1",
    "if not exist %LIBRARY_INC%\\\\omp.h exit 1",
    "%LIBRARY_BIN%\\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe",
    "%cd%\\omp_hello.exe",
    "test -f $PREFIX/lib/libomp.dylib",
    "test -f $PREFIX/include/omp.h",
    "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
    "./omp_hello",
    "test -f $PREFIX/lib/libomp.so",
    "test -f $PREFIX/include/omp.h",
    "$PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello",
    "./omp_hello"
   ],
   "files":[
    "omp_hello.c",
    "omp_hello.c",
    "omp_hello.c"
   ],
   "requires":[
    "clangdev",
    "clangdev",
    "clangdev",
    "cxx_compiler_stub"
   ]
  }
 },
 "name":"llvm-openmp",
 "new_version":"llvmorg-8.0.1",
 "pinning_version":"2019.03.17",
 "raw_meta_yaml":"{% set name = \"llvm-openmp\" %}\n{% set version = \"8.0.1\" %}\n{% set sha256 = \"3e85dd3cad41117b7c89a41de72f2e6aa756ea7b4ef63bb10dcddf8561a7722c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/openmp-{{ version }}.src.tar.xz\n  sha256: {{ sha256 }}\n  patches:\n    - D65714.patch\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\ntest:\n  requires:\n    - clangdev\n    - {{ compiler('cxx') }}  # [linux]\n  commands:\n    - if not exist %LIBRARY_BIN%\\\\libomp.dll exit 1   # [win]\n    - test -f $PREFIX/lib/libomp.so                   # [linux]\n    - test -f $PREFIX/lib/libomp.dylib                # [osx]\n    - if not exist %LIBRARY_LIB%\\\\libomp.lib exit 1   # [win]\n    - if not exist %LIBRARY_INC%\\\\omp.h exit 1        # [win]\n    - test -f $PREFIX/include/omp.h                   # [unix]\n    - $PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello  # [not win]\n    - \"%LIBRARY_BIN%\\\\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe\"  # [win]\n    - ./omp_hello            # [unix]\n    - \"%cd%\\\\omp_hello.exe\"  # [win]\n  files:\n    - omp_hello.c\n\noutputs:\n  - name: llvm-openmp\n    script: build-llvm-openmp.sh  # [not win]\n    script: bld-llvm-openmp.bat   # [win]\n    build:\n      run_exports:\n        strong:\n          - {{ pin_subpackage(\"llvm-openmp\", max_pin=None) }}\n    requirements:\n      build:\n        - {{ compiler(\"cxx\") }}\n        - cmake\n        - perl\n        - ninja  # [win]\n      host:\n        - llvmdev {{ version }}|{{ version }}.*\n      run_constrained:\n        - clangdev {{ version }}|{{ version }}.*\n        - llvmdev {{ version }}|{{ version }}.*\n        - openmp {{ version }}|{{ version }}.*\n\n  - name: openmp\n    requirements:\n      run:\n        - {{ pin_subpackage(\"llvm-openmp\", exact=True) }}\n\nabout:\n  home: http://openmp.llvm.org/\n  license: NCSA\n  license_file: LICENSE.txt\n  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - jakirkham\n    - yesimon\n    - isuruf\n",
 "req":{
  "__set__":true,
  "elements":[
   "cmake",
   "cxx_compiler_stub",
   "llvmdev",
   "ninja",
   "perl",
   "subpackage_stub"
  ]
 },
 "smithy_version":"3.3.0",
 "time":1568072489.2698967,
 "url":"https://github.com/llvm/llvm-project/releases/download/llvmorg-8.0.1/openmp-8.0.1.src.tar.xz",
 "version":"8.0.1"
}