{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/223867637.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/285649471.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"hdf5-1.10.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "linux_aarch64":"default",
   "linux_ppc64le":"default",
   "win":"azure"
  }
 },
 "feedstock_name":"openpmd-api",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5, ADIOS and JSON.\nLanguage bindings are provided for C++11 (or newer) and Python 3.\nThis conda-forge package only provides serial I/O, please build from source\nfor MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\nJSON.\n",
   "dev_url":"https://github.com/openPMD/openPMD-api",
   "doc_url":"https://openpmd-api.readthedocs.io",
   "home":"https://www.openPMD.org",
   "license":"LGPL 3",
   "license_family":"LGPL",
   "license_file":"COPYING.LESSER",
   "summary":"C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files."
  },
  "build":{
   "number":"102",
   "run_exports":[
    "openpmd-api * nompi_*",
    "subpackage_stub",
    "openpmd-api * nompi_*",
    "subpackage_stub",
    "openpmd-api * nompi_*",
    "subpackage_stub"
   ],
   "string":"nompi_pyh_102"
  },
  "extra":{
   "recipe-maintainers":[
    "ax3l",
    "C0nsultant",
    "ax3l",
    "C0nsultant",
    "ax3l",
    "C0nsultant"
   ]
  },
  "package":{
   "name":"openpmd-api",
   "version":"0.9.0a"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake >=3.11",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake >=3.11",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "cmake >=3.11"
   ],
   "host":[
    "nompi",
    "python",
    "pybind11 >=2.3.0",
    "hdf5  >=1.8.13",
    "hdf5  >=1.8.13 = mpi_nompi_*",
    "nompi",
    "python",
    "pybind11 >=2.3.0",
    "adios >=1.13.1",
    "hdf5  >=1.8.13",
    "adios >=1.13.1 = mpi_nompi_*",
    "hdf5  >=1.8.13 = mpi_nompi_*",
    "nompi",
    "python",
    "pybind11 >=2.3.0",
    "adios >=1.13.1",
    "hdf5  >=1.8.13",
    "adios >=1.13.1 = mpi_nompi_*",
    "hdf5  >=1.8.13 = mpi_nompi_*"
   ],
   "run":[
    "nompi",
    "python",
    "numpy >=1.15.0",
    "blosc",
    "zlib",
    "bzip2",
    "nompi",
    "python",
    "numpy >=1.15.0",
    "blosc",
    "zlib",
    "bzip2",
    "nompi",
    "python",
    "numpy >=1.15.0",
    "blosc",
    "zlib",
    "bzip2"
   ]
  },
  "source":{
   "fn":"0.9.0-alpha.tar.gz",
   "sha256":"2fd84f276453122b89ce66d4467ec162669315be2c75ae45d2a514d7b96a3a42",
   "url":"https://github.com/openPMD/openPMD-api/archive/0.9.0-alpha.tar.gz"
  },
  "test":{
   "commands":[
    "python -c \"import openpmd_api; print(openpmd_api.__version__);\"",
    "python -c \"import openpmd_api; print(openpmd_api.variants)\"",
    "if exist %LIBRARY_PREFIX%\\bin\\openPMD.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\cmake\\openPMDConfig.cmake (exit 0) else (exit 1)",
    "python -c \"import openpmd_api; print(openpmd_api.__version__);\"",
    "python -c \"import openpmd_api; print(openpmd_api.variants)\"",
    "test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake",
    "otool -L ${PREFIX}/lib/libopenPMD.dylib",
    "otool -L ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.dylib",
    "python -c \"import openpmd_api; print(openpmd_api.__version__);\"",
    "python -c \"import openpmd_api; print(openpmd_api.variants)\"",
    "test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake",
    "test -f ${PREFIX}/lib/libopenPMD.so",
    "ldd ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.so"
   ],
   "imports":[
    "openpmd_api",
    "openpmd_api",
    "openpmd_api"
   ]
  }
 },
 "name":"openpmd-api",
 "new_version":false,
 "pinning_version":"2019.06.05",
 "raw_meta_yaml":"{% set name = \"openpmd-api\" %}\n{% set version = \"0.9.0a\" %}\n{% set build = 2 %}\n{% set version_fn = version.replace(\"a\", \"-alpha\") %}\n{% set sha256 = \"2fd84f276453122b89ce66d4467ec162669315be2c75ae45d2a514d7b96a3a42\" %}\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\n# prioritize nompi variant via build number\n{% if mpi == 'nompi' %}\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version_fn }}.tar.gz\n  url: https://github.com/openPMD/openPMD-api/archive/{{ version_fn }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: True  # [py27]\n\n  # add build string so packages can depend on\n  # mpi or nompi variants\n  # dependencies:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi == 'nompi' %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% else %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    # strict runtime dependency on build-time MPI flavor\n    - {{ name }} * {{ mpi_prefix }}_* \n    # https://conda.io/docs/user-guide/tasks/build-packages/variants.html#referencing-subpackages\n    # in 0.X.*, newer minor versions are compatible\n    - {{ pin_subpackage('openpmd-api', min_pin='x.x', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n    - cmake >=3.11\n  host:\n    - {{ mpi }}  # [mpi != 'nompi'] \n    - python\n    - pybind11 >=2.3.0\n    # need to list hdf5|adios twice to get version pinning from conda_build_config\n    # and build pinning from {{ mpi_prefix }}\n    - adios >=1.13.1                    # [unix]\n    - hdf5  >=1.8.13\n    - adios >=1.13.1 = mpi_{{ mpi }}_*  # [unix and mpi != 'nompi']\n    - hdf5  >=1.8.13 = mpi_{{ mpi }}_*  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - python\n    - numpy >=1.15.0\n    # FIXME: for some reason warnings about this (ADIOS1 deps)\n    - blosc\n    - zlib\n    - bzip2\n\ntest:\n  imports:\n    - openpmd_api\n  commands:\n    - python -c \"import openpmd_api; print(openpmd_api.__version__);\"\n    - python -c \"import openpmd_api; print(openpmd_api.variants)\"\n    - test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake                     # [unix]\n    - test -f ${PREFIX}/lib/libopenPMD.so                                         # [linux]\n    - otool -L ${PREFIX}/lib/libopenPMD.dylib                                     # [osx]\n    - if exist %LIBRARY_PREFIX%\\bin\\openPMD.dll (exit 0) else (exit 1)            # [win]\n    - otool -L ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.dylib                       # [osx]\n    - ldd ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.so                               # [linux]\n    - if exist %LIBRARY_PREFIX%\\cmake\\openPMDConfig.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://www.openPMD.org\n  license: LGPL 3\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  summary: 'C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files.'\n\n  description: |\n    This library provides a common high-level API for openPMD writing and\n    reading. It provides a common interface to I/O libraries and file formats\n    such as HDF5, ADIOS and JSON.\n    Language bindings are provided for C++11 (or newer) and Python 3.\n    This conda-forge package only provides serial I/O, please build from source\n    for MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\n    JSON.\n  doc_url: https://openpmd-api.readthedocs.io\n  dev_url: https://github.com/openPMD/openPMD-api\n\nextra:\n  recipe-maintainers:\n    - ax3l\n    - C0nsultant\n",
 "req":{
  "__set__":true,
  "elements":[
   "adios",
   "blosc",
   "bzip2",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "hdf5",
   "make",
   "nompi",
   "numpy",
   "pybind11",
   "python",
   "zlib"
  ]
 },
 "smithy_version":"3.3.6",
 "time":1568070564.3160965,
 "url":"https://github.com/openPMD/openPMD-api/archive/0.9.0-alpha.tar.gz",
 "version":"0.9.0a"
}