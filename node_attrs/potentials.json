{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/340281428.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/370898020.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/372096026.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.1.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375698044.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/400459577.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/445119368.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/455371753.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/458506761.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/484336808.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.3"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/485399448.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.4"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/488965522.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/493277586.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.6"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Variant configuration errors in ./feedstocks/potentials-feedstock/.ci_support/linux_64_python3.6.____cpython.yaml:\n  zip fields in zip_key group ('cdt_name', 'docker_image') are not all the same length",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 937, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run",
   "    solvable, errors, _ = is_recipe_solvable(feedstock_dir)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 433, in is_recipe_solvable",
   "    additional_channels=additional_channels,",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 516, in _is_recipe_solvable_on_platform",
   "    cbc, _ = conda_build.variants.get_package_combined_spec(recipe_dir, config=config)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda_build/variants.py\", line 523, in get_package_combined_spec",
   "    validate_spec(f, spec)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda_build/variants.py\", line 171, in validate_spec",
   "    raise ValueError(\"Variant configuration errors in {}:\\n{}\".format(src, \"\\n\".join(errors)))",
   "ValueError: Variant configuration errors in ./feedstocks/potentials-feedstock/.ci_support/linux_64_python3.6.____cpython.yaml:",
   "  zip fields in zip_key group ('cdt_name', 'docker_image') are not all the same length",
   ""
  ]
 },
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "potentials",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Potentials provides a lightweight database of interatomic potentials\nand force fields. Right now, the database contains listings for the\npotentials stored in the NIST Interatomic Potentials Repository, as\nwell as about 75% of OpenKIM models.\n",
   "dev_url": "https://github.com/usnistgov/potentials",
   "doc_url": "https://github.com/usnistgov/potentials",
   "home": "https://github.com/usnistgov/potentials",
   "license": "OTHER",
   "license_family": "OTHER",
   "license_file": "LICENSE.TXT",
   "summary": "Alternative host of Interatomic Potentials Repository content"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99"
   ]
  },
  "package": {
   "name": "potentials",
   "version": "0.2.6"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy"
   ]
  },
  "source": {
   "sha256": "f9af2fbd910f47bb157dcc0f8611a63739e2e8ce008e157cd8ea3d86ae445aca",
   "url": "https://pypi.io/packages/source/p/potentials/potentials-0.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "potentials",
    "potentials",
    "potentials"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bibtexparser",
    "cdcs",
    "datamodeldict",
    "habanero",
    "ipython",
    "ipywidgets",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pip",
    "python",
    "requests",
    "scipy",
    "xmltodict"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Potentials provides a lightweight database of interatomic potentials\nand force fields. Right now, the database contains listings for the\npotentials stored in the NIST Interatomic Potentials Repository, as\nwell as about 75% of OpenKIM models.\n",
   "dev_url": "https://github.com/usnistgov/potentials",
   "doc_url": "https://github.com/usnistgov/potentials",
   "home": "https://github.com/usnistgov/potentials",
   "license": "OTHER",
   "license_family": "OTHER",
   "license_file": "LICENSE.TXT",
   "summary": "Alternative host of Interatomic Potentials Repository content"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99"
   ]
  },
  "package": {
   "name": "potentials",
   "version": "0.2.6"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy"
   ]
  },
  "source": {
   "sha256": "f9af2fbd910f47bb157dcc0f8611a63739e2e8ce008e157cd8ea3d86ae445aca",
   "url": "https://pypi.io/packages/source/p/potentials/potentials-0.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "potentials",
    "potentials",
    "potentials",
    "potentials",
    "potentials",
    "potentials",
    "potentials",
    "potentials",
    "potentials"
   ]
  }
 },
 "name": "potentials",
 "new_version": "0.2.6",
 "new_version_attempts": {
  "0.2.0": 1,
  "0.2.1": 1,
  "0.2.2": 1,
  "0.2.3": 1,
  "0.2.4": 1,
  "0.2.5": 1,
  "0.2.6": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "Potentials provides a lightweight database of interatomic potentials\nand force fields. Right now, the database contains listings for the\npotentials stored in the NIST Interatomic Potentials Repository, as\nwell as about 75% of OpenKIM models.\n",
   "dev_url": "https://github.com/usnistgov/potentials",
   "doc_url": "https://github.com/usnistgov/potentials",
   "home": "https://github.com/usnistgov/potentials",
   "license": "OTHER",
   "license_family": "OTHER",
   "license_file": "LICENSE.TXT",
   "summary": "Alternative host of Interatomic Potentials Repository content"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99"
   ]
  },
  "package": {
   "name": "potentials",
   "version": "0.2.6"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy"
   ]
  },
  "source": {
   "sha256": "f9af2fbd910f47bb157dcc0f8611a63739e2e8ce008e157cd8ea3d86ae445aca",
   "url": "https://pypi.io/packages/source/p/potentials/potentials-0.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "potentials",
    "potentials",
    "potentials"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bibtexparser",
    "cdcs",
    "datamodeldict",
    "habanero",
    "ipython",
    "ipywidgets",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pip",
    "python",
    "requests",
    "scipy",
    "xmltodict"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "pinning_version": "2020.09.25.13.11.25",
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_python3.9.____cpython: Encountered problems while solving.\\nProblem: package scipy-0.19.1-py27h069396b_3 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"potentials\" %}\n{% set version = \"0.2.6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f9af2fbd910f47bb157dcc0f8611a63739e2e8ce008e157cd8ea3d86ae445aca\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [py2k]\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pip\n    - xmltodict\n    - datamodeldict\n    - numpy\n    - matplotlib-base\n    - pandas\n    - requests\n    - habanero\n    - bibtexparser\n    - cdcs =0.1.4\n    - ipython\n    - ipywidgets\n    - scipy\n\ntest:\n  imports:\n    - potentials\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/usnistgov/potentials\n  license: OTHER\n  license_family: OTHER\n  license_file: LICENSE.TXT\n  summary: Alternative host of Interatomic Potentials Repository content\n\n  description: |\n    Potentials provides a lightweight database of interatomic potentials \n    and force fields. Right now, the database contains listings for the \n    potentials stored in the NIST Interatomic Potentials Repository, as \n    well as about 75% of OpenKIM models.\n  doc_url: https://github.com/usnistgov/potentials\n  dev_url: https://github.com/usnistgov/potentials\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - lmhale99\n",
 "req": {
  "__set__": true,
  "elements": [
   "bibtexparser",
   "cdcs",
   "datamodeldict",
   "habanero",
   "ipython",
   "ipywidgets",
   "matplotlib-base",
   "numpy",
   "pandas",
   "pip",
   "python",
   "requests",
   "scipy",
   "xmltodict"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bibtexparser",
    "cdcs",
    "datamodeldict",
    "habanero",
    "ipython",
    "ipywidgets",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pip",
    "python",
    "requests",
    "scipy",
    "xmltodict"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bibtexparser",
    "cdcs =0.1.4",
    "datamodeldict",
    "habanero",
    "ipython",
    "ipywidgets",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pip",
    "python",
    "requests",
    "scipy",
    "xmltodict"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/p/potentials/potentials-0.0.1.tar.gz",
 "version": "0.2.6",
 "win_64_meta_yaml": {
  "about": {
   "description": "Potentials provides a lightweight database of interatomic potentials\nand force fields. Right now, the database contains listings for the\npotentials stored in the NIST Interatomic Potentials Repository, as\nwell as about 75% of OpenKIM models.\n",
   "dev_url": "https://github.com/usnistgov/potentials",
   "doc_url": "https://github.com/usnistgov/potentials",
   "home": "https://github.com/usnistgov/potentials",
   "license": "OTHER",
   "license_family": "OTHER",
   "license_file": "LICENSE.TXT",
   "summary": "Alternative host of Interatomic Potentials Repository content"
  },
  "build": {
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99",
    "jan-janssen",
    "lmhale99"
   ]
  },
  "package": {
   "name": "potentials",
   "version": "0.2.6"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy",
    "python",
    "pip",
    "xmltodict",
    "datamodeldict",
    "numpy",
    "matplotlib-base",
    "pandas",
    "requests",
    "habanero",
    "bibtexparser",
    "cdcs =0.1.4",
    "ipython",
    "ipywidgets",
    "scipy"
   ]
  },
  "source": {
   "sha256": "f9af2fbd910f47bb157dcc0f8611a63739e2e8ce008e157cd8ea3d86ae445aca",
   "url": "https://pypi.io/packages/source/p/potentials/potentials-0.2.6.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "potentials",
    "potentials",
    "potentials"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bibtexparser",
    "cdcs",
    "datamodeldict",
    "habanero",
    "ipython",
    "ipywidgets",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pip",
    "python",
    "requests",
    "scipy",
    "xmltodict"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}