{
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 579, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 97, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 334, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 264, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/genotrance/px/tar.gz/v2018-11-20"
 },
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"px-proxy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Px is a HTTP(s) proxy server that allows applications to authenticate through\nan NTLM or Windows Kerberos authenticated proxy server, typically used in\ncorporate deployments, without having to deal with the actual handshake. It is\nprimarily designed to run on Windows systems and authenticates on behalf of the\napplication using the currently logged in Windows user account.\n",
   "home":"https://github.com/genotrance/px",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"An HTTP proxy server to automatically authenticate through an NTLM proxy"
  },
  "build":{
   "entry_points":[
    "px = px:main",
    "px = px:main",
    "px = px:main"
   ],
   "number":"1",
   "script":" -m pip install . -vv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "fcollonval",
    "genotrance",
    "fcollonval",
    "genotrance",
    "fcollonval",
    "genotrance"
   ]
  },
  "package":{
   "name":"px-proxy",
   "version":"0.4.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "netaddr",
    "psutil",
    "pywin32",
    "winkerberos",
    "python",
    "netaddr",
    "psutil",
    "pywin32",
    "winkerberos",
    "python",
    "netaddr",
    "psutil",
    "pywin32",
    "winkerberos"
   ]
  },
  "source":{
   "patches":[
    "setup.patch",
    "setup.patch",
    "setup.patch"
   ],
   "sha256":"b6546e70483461357033b3918ee2b72f812c34025b030b37db2059eb68a4f459",
   "url":"https://github.com/genotrance/px/archive/v0.4.0.tar.gz"
  },
  "test":{
   "imports":[
    "px",
    "px",
    "px"
   ]
  }
 },
 "name":"px-proxy",
 "new_version":"2018-11-20",
 "raw_meta_yaml":"{% set name = \"px-proxy\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/genotrance/{{ name[:2] }}/archive/v{{ version }}.tar.gz\n  sha256: b6546e70483461357033b3918ee2b72f812c34025b030b37db2059eb68a4f459\n  patches:\n    - setup.patch\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  skip: True  # [not win]\n  entry_points:\n    - px = px:main\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - futures  # [py2k]\n    - netaddr\n    - psutil\n    - pywin32\n    - winkerberos\n\ntest:\n  imports:\n    - px\n\nabout:\n  home: https://github.com/genotrance/px\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'An HTTP proxy server to automatically authenticate through an NTLM proxy'\n  description: |\n    Px is a HTTP(s) proxy server that allows applications to authenticate through\n    an NTLM or Windows Kerberos authenticated proxy server, typically used in\n    corporate deployments, without having to deal with the actual handshake. It is\n    primarily designed to run on Windows systems and authenticates on behalf of the\n    application using the currently logged in Windows user account.\n\nextra:\n  recipe-maintainers:\n    - fcollonval\n    - genotrance\n",
 "req":{
  "__set__":true,
  "elements":[
   "netaddr",
   "pip",
   "psutil",
   "python",
   "pywin32",
   "winkerberos"
  ]
 },
 "time":1568117326.6209538,
 "url":"https://github.com/genotrance/px/archive/v0.4.0.tar.gz",
 "version":"0.4.0"
}