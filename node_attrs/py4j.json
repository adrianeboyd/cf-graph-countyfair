{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199882843.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224534764.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.10.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 622, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 136, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/p/py4j/py4j-0.10.9.zip"
 },
 "conda-forge.yml":{},
 "feedstock_name":"py4j",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/bartdag/py4j",
   "doc_url":"http://py4j.sourceforge.net/",
   "home":"http://py4j.sourceforge.net/",
   "license":"BSD 3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.txt",
   "summary":"Enables Python programs to dynamically access arbitrary Java objects"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "pmlandwehr",
    "parente",
    "pmlandwehr",
    "parente",
    "pmlandwehr",
    "parente"
   ]
  },
  "package":{
   "name":"py4j",
   "version":"0.10.8.1"
  },
  "requirements":{
   "host":[
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools",
    "pip",
    "python",
    "setuptools"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "fn":"py4j-0.10.8.1.zip",
   "sha256":"8329bb156a0cf37be9642a2a060dbdb627b5fcb827919be65d95102daccca274",
   "url":"https://pypi.io/packages/source/p/py4j/py4j-0.10.8.1.zip"
  },
  "test":{
   "imports":[
    "py4j",
    "py4j.tests",
    "py4j",
    "py4j.tests",
    "py4j",
    "py4j.tests"
   ]
  }
 },
 "name":"py4j",
 "new_version":"0.10.9",
 "pinning_version":"2018.10.16",
 "raw_meta_yaml":"{% set name = \"py4j\" %}\n{% set version = \"0.10.8.1\" %}\n{% set bundle = \"zip\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash = \"8329bb156a0cf37be9642a2a060dbdb627b5fcb827919be65d95102daccca274\" %}\n{% set build = 0 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ bundle }}\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ bundle }}\n  {{ hash_type }}: {{ hash }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n\n  run:\n    - python\n\ntest:\n  imports:\n    - py4j\n    - py4j.tests\n\nabout:\n  home: http://py4j.sourceforge.net/\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: 'Enables Python programs to dynamically access arbitrary Java objects'\n  dev_url: https://github.com/bartdag/py4j\n  doc_url: http://py4j.sourceforge.net/\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n    - parente\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.1.12",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/p/py4j/py4j-0.10.8.1.zip",
 "version":"0.10.8.1"
}