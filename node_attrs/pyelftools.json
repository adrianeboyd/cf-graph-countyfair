{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/212548485.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.25"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/220207320.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335809544.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":504,
  "exception":"HTTP Error 504: Gateway Time-out",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 745, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 504: Gateway Time-out",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/p/pyelftools/pyelftools-0.26.zip"
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35"
 },
 "feedstock_name":"pyelftools",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/eliben/pyelftools",
   "license":"Public Domain",
   "license_file":"LICENSE",
   "summary":"Library for analyzing ELF files and DWARF debugging information"
  },
  "build":{
   "number":"1000",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "msarahan",
    "ocefpaf",
    "msarahan",
    "ocefpaf",
    "msarahan",
    "ocefpaf"
   ]
  },
  "package":{
   "name":"pyelftools",
   "version":"0.25"
  },
  "requirements":{
   "build":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "sha256":"89c6da6f56280c37a5ff33468591ba9a124e17d71fe42de971818cbff46c1b24",
   "url":"https://pypi.org/packages/source/p/pyelftools/pyelftools-0.25.tar.gz"
  },
  "test":{
   "imports":[
    "elftools",
    "elftools.common",
    "elftools.construct",
    "elftools.construct.lib",
    "elftools.dwarf",
    "elftools.elf",
    "elftools",
    "elftools.common",
    "elftools.construct",
    "elftools.construct.lib",
    "elftools.dwarf",
    "elftools.elf",
    "elftools",
    "elftools.common",
    "elftools.construct",
    "elftools.construct.lib",
    "elftools.dwarf",
    "elftools.elf"
   ]
  }
 },
 "name":"pyelftools",
 "new_version":"0.26",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set version = \"0.25\" %}\n\npackage:\n  name: pyelftools\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/p/pyelftools/pyelftools-{{ version }}.tar.gz\n  sha256: 89c6da6f56280c37a5ff33468591ba9a124e17d71fe42de971818cbff46c1b24\n\nbuild:\n  number: 1000\n  skip: True  # [not linux]\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - elftools\n    - elftools.common\n    - elftools.construct\n    - elftools.construct.lib\n    - elftools.dwarf\n    - elftools.elf\n\nabout:\n  home: https://github.com/eliben/pyelftools\n  license: Public Domain\n  license_file: LICENSE\n  summary: Library for analyzing ELF files and DWARF debugging information\n\nextra:\n  recipe-maintainers:\n    - msarahan\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python"
  ]
 },
 "smithy_version":"3.6.1",
 "url":"https://pypi.org/packages/source/p/pyelftools/pyelftools-0.25.tar.gz",
 "version":"0.25"
}