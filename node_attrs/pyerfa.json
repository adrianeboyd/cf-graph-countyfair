{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/426780601.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/426781629.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived":false,
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"pyerfa",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
   "dev_url":"https://github.com/liberfa/pyerfa",
   "doc_url":"https://pyerfa.readthedocs.io/",
   "home":"https://pyerfa.readthedocs.io/",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.rst",
   "summary":"Python bindings for ERFA routines"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "mwcraig",
    "astrofrog-conda-forge",
    "mwcraig",
    "astrofrog-conda-forge",
    "mwcraig",
    "astrofrog-conda-forge"
   ]
  },
  "package":{
   "name":"pyerfa",
   "version":"1.7.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "pip",
    "setuptools_scm",
    "jinja2 >=2.10.3",
    "python",
    "numpy 1.16.*",
    "pip",
    "setuptools_scm",
    "jinja2 >=2.10.3",
    "python",
    "numpy 1.16.*",
    "pip",
    "setuptools_scm",
    "jinja2 >=2.10.3",
    "python",
    "numpy 1.16.*"
   ],
   "run":[
    "python",
    "numpy >=1.16",
    "python",
    "numpy >=1.16",
    "python",
    "numpy >=1.16"
   ]
  },
  "source":{
   "sha256":"58cd5fbc27e31211102568f952fdbac410b184563be4da57743cbe5e5ccebe47",
   "url":"https://pypi.io/packages/source/p/pyerfa/pyerfa-1.7.0.tar.gz"
  },
  "test":{
   "imports":[
    "erfa",
    "erfa",
    "erfa"
   ]
  }
 },
 "name":"pyerfa",
 "new_version":"1.7.0",
 "pinning_version":"2020.06.02.12.20.38",
 "raw_meta_yaml":"{% set name = \"pyerfa\" %}\n{% set version = \"1.7.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: 58cd5fbc27e31211102568f952fdbac410b184563be4da57743cbe5e5ccebe47\n\nbuild:\n  number: 0\n  skip: true  # [py<3.6]\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - setuptools_scm\n    - jinja2 >=2.10.3\n    - python\n    - numpy 1.16.*\n  run:\n    - python\n    - numpy >=1.16\n\ntest:\n  imports:\n    - erfa\n\n\nabout:\n  home: https://pyerfa.readthedocs.io/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.rst\n  summary: \"Python bindings for ERFA routines\"\n  description: |\n    PyERFA is the Python wrapper for the ERFA library (Essential Routines for\n    Fundamental Astronomy), a C library containing key algorithms for astronomy,\n    which is based on the SOFA library published by the International\n    Astronomical Union (IAU). All C routines are wrapped as Numpy universal\n    functions, so that they can be called with scalar or array inputs.\n\n    The project is a split of astropy._erfa module, developed in the context of\n    Astropy project, into a standalone package. It contains the ERFA C source\n    code as a git submodule. The wrapping is done with help of the Jinja2\n    template engine.\n  doc_url: https://pyerfa.readthedocs.io/\n  dev_url: https://github.com/liberfa/pyerfa\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n    - astrofrog-conda-forge\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "jinja2",
   "numpy",
   "pip",
   "python",
   "setuptools_scm"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "jinja2",
    "numpy",
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "jinja2 >=2.10.3",
    "numpy 1.16.*",
    "pip",
    "python",
    "setuptools_scm"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy >=1.16",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/p/pyerfa/pyerfa-1.7.0.tar.gz",
 "version":"1.7.0"
}