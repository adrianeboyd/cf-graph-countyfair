{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.19"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/307704336.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.20"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/368408919.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"pygcn",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN),\nis a system for distributing astronomical alerts, largely focused on\noperations of and detections from high-energy satellite missions.\n\nGCN/TAN disseminates both Notices (prompt, machine-readable alerts) and\nCirculars (human-readable correspondence) through a handful of delivery\nmethods and formats.\n\nThis package implements a simple client that anonymously listens for\nVOEvent XML format notices over the custom TCP/IP VOEvent Transport\nProtocol.\n",
   "home":"https://github.com/lpsinger/pygcn",
   "license":"GPLv2+",
   "license_family":"GPL",
   "license_file":"COPYING",
   "summary":"Anonymous VOEvent client for receiving GCN/TAN notices in XML format"
  },
  "build":{
   "entry_points":[
    "pygcn-listen = gcn.cmdline:listen_main",
    "pygcn-serve = gcn.cmdline:serve_main",
    "pygcn-listen = gcn.cmdline:listen_main",
    "pygcn-serve = gcn.cmdline:serve_main",
    "pygcn-listen = gcn.cmdline:listen_main",
    "pygcn-serve = gcn.cmdline:serve_main"
   ],
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "duncanmmacleod",
    "lpsinger",
    "duncanmmacleod",
    "lpsinger",
    "duncanmmacleod",
    "lpsinger"
   ]
  },
  "package":{
   "name":"pygcn",
   "version":"1.0.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "setuptools >=30.3.0",
    "python",
    "pip",
    "setuptools >=30.3.0",
    "python",
    "pip",
    "setuptools >=30.3.0"
   ],
   "run":[
    "python",
    "lxml",
    "six",
    "python",
    "lxml",
    "six",
    "python",
    "lxml",
    "six"
   ]
  },
  "source":{
   "sha256":"34a5387572a7f8dfd7639cb944a768fa86ab1703eef0c28bf553785e15275aab",
   "url":"https://pypi.io/packages/source/p/pygcn/pygcn-1.0.0.tar.gz"
  },
  "test":{
   "commands":[
    "pygcn-listen --help",
    "pygcn-serve --help",
    "python -m pytest --pyargs gcn",
    "pygcn-listen --help",
    "pygcn-serve --help",
    "python -m pytest --pyargs gcn",
    "pygcn-listen --help",
    "pygcn-serve --help",
    "python -m pytest --pyargs gcn"
   ],
   "imports":[
    "gcn",
    "gcn.handlers",
    "gcn.notice_types",
    "gcn.voeventclient",
    "gcn",
    "gcn.handlers",
    "gcn.notice_types",
    "gcn.voeventclient",
    "gcn",
    "gcn.handlers",
    "gcn.notice_types",
    "gcn.voeventclient"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name":"pygcn",
 "new_version":"1.0.0",
 "pinning_version":"2020.01.27",
 "raw_meta_yaml":"{% set name = \"pygcn\" %}\n{% set version = \"1.0.0\" %}\n{% set sha256 = \"34a5387572a7f8dfd7639cb944a768fa86ab1703eef0c28bf553785e15275aab\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . -vvv\"\n  entry_points:\n    - pygcn-listen = gcn.cmdline:listen_main\n    - pygcn-serve = gcn.cmdline:serve_main\n\nrequirements:\n  host:\n    - python\n    - pip\n    - setuptools >=30.3.0\n  run:\n    - python\n    - lxml\n    - six\n\ntest:\n  imports:\n    - gcn\n    - gcn.handlers\n    - gcn.notice_types\n    - gcn.voeventclient\n  requires:\n    - pytest\n  commands:\n    - pygcn-listen --help\n    - pygcn-serve --help\n    - python -m pytest --pyargs gcn\n\nabout:\n  home: https://github.com/lpsinger/pygcn\n  license: GPLv2+\n  license_family: GPL\n  license_file: COPYING\n  summary: Anonymous VOEvent client for receiving GCN/TAN notices in XML format\n  description: |\n    The Gamma-ray Coordinates Network/Transient Astronomy Network (GCN/TAN),\n    is a system for distributing astronomical alerts, largely focused on\n    operations of and detections from high-energy satellite missions.\n\n    GCN/TAN disseminates both Notices (prompt, machine-readable alerts) and\n    Circulars (human-readable correspondence) through a handful of delivery\n    methods and formats.\n\n    This package implements a simple client that anonymously listens for\n    VOEvent XML format notices over the custom TCP/IP VOEvent Transport\n    Protocol.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - lpsinger\n",
 "req":{
  "__set__":true,
  "elements":[
   "lxml",
   "pip",
   "python",
   "setuptools",
   "six"
  ]
 },
 "smithy_version":"3.6.6",
 "url":"https://pypi.io/packages/source/p/pygcn/pygcn-0.1.19.tar.gz",
 "version":"1.0.0"
}