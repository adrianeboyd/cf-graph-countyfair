{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.43"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/200529486.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.44"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/213775147.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.45"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216698160.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.46"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216989397.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.47"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/231070946.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.48"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/243166498.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.49"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/247857018.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.50"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.51"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 658, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 133, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 644, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/core.py\", line 523, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/p/pyhocon/pyhocon-0.3.53.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"pyhocon",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"HOCON parser for Python",
   "dev_url":"http://github.com/chimpler/pyhocon/",
   "doc_url":"https://pythonhosted.org/pyhocon/",
   "home":"http://github.com/chimpler/pyhocon/",
   "license":"Apache-2.0",
   "license_family":"APACHE",
   "summary":"HOCON parser for Python"
  },
  "build":{
   "entry_points":[
    "pyhocon=pyhocon.tool:main",
    "pyhocon=pyhocon.tool:main",
    "pyhocon=pyhocon.tool:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "nelson-liu",
    "shahin",
    "nelson-liu",
    "shahin",
    "nelson-liu",
    "shahin"
   ]
  },
  "package":{
   "name":"pyhocon",
   "version":"0.3.51"
  },
  "requirements":{
   "build":[
    "pip",
    "python",
    "pyparsing >=2.0.3",
    "pip",
    "python",
    "pyparsing >=2.0.3",
    "pip",
    "python",
    "pyparsing >=2.0.3"
   ],
   "run":[
    "python",
    "pyparsing >=2.0.3",
    "python",
    "pyparsing >=2.0.3",
    "python",
    "pyparsing >=2.0.3"
   ]
  },
  "source":{
   "fn":"pyhocon-0.3.51.tar.gz",
   "sha256":"94ceda402ce1718ead26fc725695a4f5a5671ce643da3c50514e049017098082",
   "url":"https://pypi.io/packages/source/p/pyhocon/pyhocon-0.3.51.tar.gz"
  },
  "test":{
   "commands":[
    "pyhocon --help",
    "pyhocon --help",
    "pyhocon --help"
   ],
   "imports":[
    "pyhocon",
    "pyhocon",
    "pyhocon"
   ]
  }
 },
 "name":"pyhocon",
 "new_version":"0.3.53",
 "pinning_version":"2019.02.11",
 "raw_meta_yaml":"{% set pkgname = \"pyhocon\" %}\n{% set version = \"0.3.51\" %}\n{% set file_ext = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"94ceda402ce1718ead26fc725695a4f5a5671ce643da3c50514e049017098082\" %}\n\npackage:\n  name: {{ pkgname }}\n  version: {{ version }}\n\nsource:\n  fn: '{{ pkgname }}-{{ version }}.{{ file_ext }}'\n  url: https://pypi.io/packages/source/{{ pkgname[0] }}/{{ pkgname }}/{{ pkgname }}-{{ version }}.{{ file_ext }}\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  noarch: python\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n  entry_points:\n    - pyhocon=pyhocon.tool:main\n\nrequirements:\n  build:\n    - pip\n    - python\n    - pyparsing >=2.0.3\n\n  run:\n    - python\n    - pyparsing >=2.0.3\n\ntest:\n  imports:\n    - pyhocon\n\n  commands:\n    - pyhocon --help\n\nabout:\n  home: http://github.com/chimpler/pyhocon/\n  license: Apache-2.0\n  license_family: APACHE\n  summary: 'HOCON parser for Python'\n  description: 'HOCON parser for Python'\n  doc_url: https://pythonhosted.org/pyhocon/\n  dev_url: http://github.com/chimpler/pyhocon/\n\nextra:\n  recipe-maintainers:\n    - nelson-liu\n    - shahin\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "pyparsing",
   "python"
  ]
 },
 "smithy_version":"3.2.13",
 "url":"https://pypi.io/packages/source/p/pyhocon/pyhocon-0.3.51.tar.gz",
 "version":"0.3.51"
}