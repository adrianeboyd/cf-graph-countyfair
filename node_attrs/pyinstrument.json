{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/199912820.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/202024966.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/206198784.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/210923819.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224507605.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/243500040.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/280311454.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "code":504,
  "exception":"HTTP Error 504: Gateway Time-out",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 745, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 98, in run",
   "    migrate_return = migrator.migrate(recipe_dir, attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 467, in migrate",
   "    new_patterns = self.get_hash_patterns('meta.yaml', urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators.xsh\", line 384, in get_hash_patterns",
   "    hash = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 641, in http_response",
   "    'http', request, response, code, msg, hdrs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 503, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 504: Gateway Time-out",
   ""
  ],
  "url":"https://files.pythonhosted.org/packages/source/p/pyinstrument/pyinstrument-3.1.0.tar.gz"
 },
 "conda-forge.yml":{},
 "feedstock_name":"pyinstrument",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "dev_url":"https://github.com/joerick/pyinstrument",
   "home":"https://github.com/joerick/pyinstrument",
   "license":"BSD 3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"A call stack profiler for Python. Inspired by Apple's Instruments.app"
  },
  "build":{
   "entry_points":[
    "pyinstrument = pyinstrument.__main__:main",
    "pyinstrument = pyinstrument.__main__:main",
    "pyinstrument = pyinstrument.__main__:main"
   ],
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "pmlandwehr",
    "moorepants",
    "asmeurer",
    "pmlandwehr",
    "moorepants",
    "asmeurer",
    "pmlandwehr",
    "moorepants",
    "asmeurer"
   ]
  },
  "package":{
   "name":"pyinstrument",
   "version":"3.0.3"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "pytest-runner",
    "nodejs",
    "python",
    "pip",
    "pytest-runner",
    "nodejs",
    "python",
    "pip",
    "pytest-runner",
    "nodejs"
   ],
   "run":[
    "python",
    "pyinstrument_cext",
    "python",
    "pyinstrument_cext",
    "python",
    "pyinstrument_cext"
   ]
  },
  "source":{
   "fn":"pyinstrument-3.0.3.tar.gz",
   "sha256":"747e80cdc4d9d7a484aa50719e369b215af9492313eef5756e4a6b4341babea5",
   "url":"https://pypi.org/packages/source/p/pyinstrument/pyinstrument-3.0.3.tar.gz"
  },
  "test":{
   "commands":[
    "pyinstrument --help",
    "pyinstrument --help",
    "pyinstrument --help"
   ],
   "imports":[
    "pyinstrument",
    "pyinstrument",
    "pyinstrument"
   ]
  }
 },
 "name":"pyinstrument",
 "new_version":"3.1.0",
 "pinning_version":"2019.05.11",
 "raw_meta_yaml":"{% set name = \"pyinstrument\" %}\n{% set version = \"3.0.3\" %}\n{% set bundle = \"tar.gz\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_val = \"747e80cdc4d9d7a484aa50719e369b215af9492313eef5756e4a6b4341babea5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.{{ bundle }}\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ bundle }}\n  {{ hash_type }}: {{ hash_val }}\n\nbuild:\n  noarch: python\n  entry_points:\n    - pyinstrument = pyinstrument.__main__:main\n\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n    - pytest-runner\n    - nodejs\n\n  run:\n    - python\n    - pyinstrument_cext\n\ntest:\n  imports:\n    - pyinstrument\n\n  commands:\n    - pyinstrument --help\n\nabout:\n  home: https://github.com/joerick/pyinstrument\n  license: BSD 3-Clause\n  license_file: LICENSE\n  license_family: BSD\n  summary: \"A call stack profiler for Python. Inspired by Apple's Instruments.app\"\n  dev_url: https://github.com/joerick/pyinstrument\n\nextra:\n  recipe-maintainers:\n    - pmlandwehr\n    - moorepants\n    - asmeurer\n",
 "req":{
  "__set__":true,
  "elements":[
   "nodejs",
   "pip",
   "pyinstrument_cext",
   "pytest-runner",
   "python"
  ]
 },
 "smithy_version":"3.3.4",
 "url":"https://pypi.org/packages/source/p/pyinstrument/pyinstrument-3.0.3.tar.gz",
 "version":"3.0.3"
}