{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/318066662.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/319403527.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/324675896.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336094013.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/340648368.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/350324501.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.0.8"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/359194395.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/364070174.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/371552852.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"gsl26"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/377688287.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/378510446.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":2,
    "migrator_version":0,
    "name":"boost172"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/379216598.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/392886733.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"pypy"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/403616552.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/405166666.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"pyinterp",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Tools for interpolating geo-referenced data used in the field of\ngeosciences. There are other libraries that cover this problem, but written\nentirely in Python, the performance of these projects was not quite\nsufficient for our needs. That is why this project was created.\n",
   "dev_url":"https://github.com/CNES/pangeo-pyinterp",
   "doc_url":"https://pangeo-pyinterp.readthedocs.io/",
   "home":"https://github.com/CNES/pangeo-pyinterp",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Python library for optimized geo-referenced interpolation"
  },
  "build":{
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "fbriol",
    "fbriol",
    "fbriol"
   ]
  },
  "package":{
   "name":"pyinterp",
   "version":"0.3.1"
  },
  "requirements":{
   "build":[
    "vs2017_win-64",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host":[
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl",
    "mkl-devel",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "xarray",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl",
    "mkl-devel",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "xarray",
    "eigen",
    "gsl",
    "boost-cpp",
    "mkl",
    "mkl-devel",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "xarray"
   ],
   "run":[
    "numpy",
    "python",
    "mkl",
    "xarray",
    "numpy",
    "python",
    "libblas * *mkl",
    "xarray",
    "numpy",
    "python",
    "libblas * *mkl",
    "xarray"
   ]
  },
  "source":{
   "sha256":"f7132c918709bc78a43017b6034bf36595dfb149e3f591292ccfb3a5c43e4053",
   "url":"https://github.com/CNES/pangeo-pyinterp/releases/download/0.3.1/pyinterp-0.3.1.tar.gz"
  },
  "test":{
   "imports":[
    "pyinterp.core",
    "pyinterp.core",
    "pyinterp.core"
   ]
  }
 },
 "name":"pyinterp",
 "new_version":"0.3.1",
 "new_version_attempts":{
  "0.3.0":1,
  "0.3.1":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.04.17.11.45.02",
 "raw_meta_yaml":"{% set name = \"pyinterp\" %}\n{% set version = \"0.3.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CNES/pangeo-{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f7132c918709bc78a43017b6034bf36595dfb149e3f591292ccfb3a5c43e4053\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [linux32 or win32 or py<36]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}  # [linux or osx]\n    - vs2017_win-64          # [win]\n    - cmake\n  host:\n    - eigen\n    - gsl\n    - boost-cpp\n    - mkl\n    - mkl-devel\n    - numpy\n    - pip\n    - pytest\n    - python\n    - setuptools\n    - xarray\n  run:\n    - {{ pin_compatible('numpy') }}\n    - python\n    - libblas * *mkl  # [linux or osx]\n    - mkl  # [win]\n    - xarray\n\ntest:\n  imports:\n    - pyinterp.core\n\nabout:\n  home: https://github.com/CNES/pangeo-pyinterp\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python library for optimized geo-referenced interpolation\n\n  description: |\n    Tools for interpolating geo-referenced data used in the field of\n    geosciences. There are other libraries that cover this problem, but written\n    entirely in Python, the performance of these projects was not quite\n    sufficient for our needs. That is why this project was created.\n  doc_url: https://pangeo-pyinterp.readthedocs.io/\n  dev_url: https://github.com/CNES/pangeo-pyinterp\n\nextra:\n  recipe-maintainers:\n    - fbriol\n",
 "req":{
  "__set__":true,
  "elements":[
   "boost-cpp",
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "gsl",
   "libblas",
   "mkl",
   "mkl-devel",
   "numpy",
   "pip",
   "pytest",
   "python",
   "setuptools",
   "vs2017_win-64",
   "xarray"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "vs2017_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost-cpp",
    "eigen",
    "gsl",
    "mkl",
    "mkl-devel",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "xarray"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "libblas",
    "mkl",
    "numpy",
    "python",
    "xarray"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.16",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cmake",
    "cxx_compiler_stub",
    "vs2017_win-64"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "boost-cpp",
    "eigen",
    "gsl",
    "mkl",
    "mkl-devel",
    "numpy",
    "pip",
    "pytest",
    "python",
    "setuptools",
    "xarray"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "libblas * *mkl",
    "mkl",
    "numpy",
    "python",
    "xarray"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/CNES/pangeo-pyinterp/releases/download/0.0.3/pyinterp-0.0.3.tar.gz",
 "version":"0.3.1"
}