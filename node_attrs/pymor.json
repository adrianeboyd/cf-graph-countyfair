{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/258077661.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.5.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/281349784.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"pyqt-5.9.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"pymor",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://pymor.org",
   "license":"BSD 2-clause",
   "license_file":"LICENSE.txt",
   "summary":"pyMOR is a software library for building model order reduction applications with the Python programming language. Implemented algorithms include reduced basis methods for parametric linear and non-linear problems, as well as system-theoretic methods such as balanced truncation or IRKA. All algorithms in pyMOR are formulated in terms of abstract interfaces for seamless integration with external PDE solver packages. Moreover, pure Python implementations of finite element and finite volume discretizations using the NumPy/SciPy scientific computing stack are provided for getting started quickly."
  },
  "build":{
   "number":"0",
   "script":[
    "setup.py bdist_wheel",
    "FOR /R %%G in (pymor*.whl) DO  -m pip install %%G --no-deps --ignore-installed -vvv",
    "-m pip install . --no-deps --ignore-installed -vvv",
    "-m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "renefritze",
    "renefritze",
    "renefritze"
   ]
  },
  "package":{
   "name":"pymor",
   "version":"0.5.2"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython >=0.20.1",
    "numpy",
    "packaging",
    "pytest-runner",
    "wheel",
    "python",
    "pip",
    "cython >=0.20.1",
    "numpy",
    "packaging",
    "pytest-runner",
    "python",
    "pip",
    "cython >=0.20.1",
    "numpy",
    "packaging",
    "pytest-runner"
   ],
   "run":[
    "python",
    "ipython >=3.0",
    "ipyparallel",
    "matplotlib",
    "pyopengl",
    "pyqt",
    "pillow",
    "compatible_pin_stub",
    "scipy >=0.13.3",
    "docopt",
    "Qt.py",
    "packaging",
    "jupyter",
    "python",
    "ipython >=3.0",
    "ipyparallel",
    "matplotlib",
    "pyopengl",
    "pyamg",
    "pyqt",
    "pillow",
    "compatible_pin_stub",
    "scipy >=0.13.3",
    "docopt",
    "Qt.py",
    "packaging",
    "mpi4py",
    "jupyter",
    "python",
    "ipython >=3.0",
    "ipyparallel",
    "matplotlib",
    "pyopengl",
    "pyamg",
    "pyqt",
    "xorg-libxi",
    "pillow",
    "compatible_pin_stub",
    "scipy >=0.13.3",
    "docopt",
    "Qt.py",
    "packaging",
    "mpi4py",
    "jupyter"
   ]
  },
  "source":{
   "sha256":"afd21b96682383f40b6707a9a7b5ba2649a8c128300863cbac8dbdef81790271",
   "url":"https://pypi.io/packages/source/p/pymor/pymor-0.5.2.tar.gz"
  },
  "test":{
   "commands":[
    "py.test -v -s -r sxX -k thermalblock_adaptive --pyargs pymortests -o testpaths=pymortests/ -o python_files=\"pymortests/demos.py\"",
    "py.test -v -s -r sxX -k thermalblock_adaptive --pyargs pymortests -o testpaths=pymortests/ -o python_files=\"pymortests/demos.py\"",
    "QT_DEBUG_PLUGINS=1 xvfb-run -a py.test -s -r sxX -k thermalblock --pyargs pymortests -o testpaths=pymortests/ -o python_files=\"pymortests/demos.py\""
   ],
   "imports":[
    "pymor",
    "pymordemos",
    "pymor",
    "pymordemos",
    "pymor",
    "pymordemos"
   ],
   "requires":[
    "pytest >=3.3",
    "packaging",
    "pytest >=3.3",
    "packaging",
    "mpich",
    "pytest >=3.3",
    "packaging",
    "mpich"
   ]
  }
 },
 "name":"pymor",
 "new_version":"0.5.2",
 "pinning_version":"2019.05.21",
 "raw_meta_yaml":"{% set version = \"0.5.2\" %}\n\npackage:\n    name: pymor\n    version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pymor/pymor-{{ version }}.tar.gz\n  sha256: afd21b96682383f40b6707a9a7b5ba2649a8c128300863cbac8dbdef81790271\n\nbuild:\n  number: 0\n  script:\n    # this is split in two to workaround an opaque msvc error\n    - {{ PYTHON }} setup.py bdist_wheel  # [win]\n    # it's really just one file, but windows shell cannot expand glob patterns\n    - FOR /R %%G in (pymor*.whl) DO {{ PYTHON }} -m pip install %%G --no-deps --ignore-installed -vvv  # [win]\n    # on linux + osx we can do the standard install\n    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vvv  # [not win]\n  skip: true  # [py<35]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n\n  host:\n    - python\n    - pip\n    - cython >=0.20.1\n    - numpy\n    - packaging\n    - pytest-runner\n    - wheel  # [win]\n\n  run:\n    - python\n    - ipython >=3.0\n    - ipyparallel\n    - matplotlib\n    - pyopengl\n    - pyamg  # [not win]\n    - pyqt\n    # this should really be a dependcy of pyqt, but isn't\n    - xorg-libxi  # [linux]\n    - pillow\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.13.3\n    - docopt\n    - Qt.py\n    - packaging\n    - mpi4py  # [not win]\n    - jupyter\n\ntest:\n  requires:\n    - pytest >=3.3\n    - packaging\n    - mpich  # [not win]\n\n  commands:\n    - QT_DEBUG_PLUGINS=1 xvfb-run -a py.test -s -r sxX -k thermalblock --pyargs pymortests -o testpaths=pymortests/ -o python_files=\"pymortests/demos.py\"  # [linux]\n    # use something that does not need shaders\n    - py.test -v -s -r sxX -k thermalblock_adaptive --pyargs pymortests -o testpaths=pymortests/ -o python_files=\"pymortests/demos.py\"  # [not linux]\n\n  imports:\n    - pymor\n    - pymordemos\n\nabout:\n  home: https://pymor.org\n  license: BSD 2-clause\n  license_file: LICENSE.txt\n  summary: pyMOR is a software library for building model order reduction applications with the Python programming language. Implemented algorithms include reduced basis methods for parametric linear and non-linear problems, as well as system-theoretic methods such as balanced truncation or IRKA. All algorithms in pyMOR are formulated in terms of abstract interfaces for seamless integration with external PDE solver packages. Moreover, pure Python implementations of finite element and finite volume discretizations using the NumPy/SciPy scientific computing stack are provided for getting started quickly.\n\nextra:\n  recipe-maintainers:\n    - renefritze\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "compatible_pin_stub",
   "cython",
   "docopt",
   "ipyparallel",
   "ipython",
   "jupyter",
   "matplotlib",
   "mpi4py",
   "numpy",
   "packaging",
   "pillow",
   "pip",
   "pyamg",
   "pyopengl",
   "pyqt",
   "pytest-runner",
   "python",
   "qt.py",
   "scipy",
   "wheel",
   "xorg-libxi"
  ]
 },
 "smithy_version":"3.3.4",
 "time":1568070568.4264145,
 "url":"https://pypi.io/packages/source/p/pymor/pymor-0.5.2.tar.gz",
 "version":"0.5.2"
}