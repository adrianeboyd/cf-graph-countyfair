{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/215490264.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/224917649.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/229935651.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/239334741.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/259646827.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2018.2.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/293364812.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/306348458.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/334738247.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"ArchRebuild",
    "migrator_version":1,
    "name":"aarch64 and ppc64le addition"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336082179.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/337893158.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2019.1.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"appveyor"
  }
 },
 "feedstock_name":"pyopencl",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"\nPyOpenCL lets you access GPUs, multi-core CPUs, and other massively\nparallel compute devices from Python, through the OpenCL parallel\ncompute interface.\n",
   "dev_url":"http://github.com/inducer/pyopencl",
   "doc_url":"https://documen.tician.de/pyopencl",
   "home":"http://pypi.python.org/pypi/pyopencl",
   "license":"MIT",
   "license_file":"LICENSE",
   "summary":"Python wrapper for OpenCL"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "inducer",
    "isuruf",
    "inducer",
    "isuruf",
    "inducer",
    "isuruf"
   ]
  },
  "package":{
   "name":"pyopencl",
   "version":"2019.1.2"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "python",
    "libpython",
    "setuptools",
    "pybind11",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "setuptools",
    "pybind11",
    "numpy",
    "khronos-opencl-icd-loader",
    "python",
    "setuptools",
    "pybind11",
    "numpy",
    "ocl-icd"
   ],
   "run":[
    "python",
    "compatible_pin_stub",
    "pytools",
    "setuptools",
    "six",
    "mako",
    "appdirs",
    "khronos-opencl-icd-loader",
    "python",
    "compatible_pin_stub",
    "pytools",
    "setuptools",
    "six",
    "mako",
    "appdirs",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "compatible_pin_stub",
    "pytools",
    "setuptools",
    "six",
    "mako",
    "appdirs",
    "ocl-icd"
   ]
  },
  "source":{
   "fn":"pyopencl-2019.1.2.tar.gz",
   "patches":[
    "osx_flags.diff",
    "osx_flags.diff",
    "osx_flags.diff"
   ],
   "sha256":"7803f3128dbd28ae6f5b851a80ef586a35b9575406ea7bb068b8e1516f8043f0",
   "url":"https://pypi.io/packages/source/p/pyopencl/pyopencl-2019.1.2.tar.gz"
  },
  "test":{
   "commands":null,
   "imports":[
    "pyopencl",
    "pyopencl",
    "pyopencl"
   ],
   "requires":[
    "pytest",
    "pytest",
    "pytest",
    "pocl  >=0.14"
   ],
   "source_files":[
    "test",
    "test",
    "test"
   ]
  }
 },
 "name":"pyopencl",
 "new_version":"2019.1.1",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set name = \"pyopencl\" %}\n{% set version = \"2019.1.2\" %}\n{% set build_number = 0 %}\n{% set sha256 = \"7803f3128dbd28ae6f5b851a80ef586a35b9575406ea7bb068b8e1516f8043f0\" %}\n\npackage:\n    name: {{ name|lower }}\n    version: {{ version }}\n\nsource:\n    fn: {{ name }}-{{ version }}.tar.gz\n    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: {{ sha256 }}\n    patches:\n        - osx_flags.diff\n\nbuild:\n    number: {{ build_number }}\n\nrequirements:\n    build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('m2w64_cxx') }}  # [win and vc<14]\n    host:\n        - python\n        - libpython  # [win and vc<14]\n        - setuptools\n        - pybind11\n        - numpy\n        - ocl-icd  # [linux]\n        - khronos-opencl-icd-loader  # [win or osx]\n\n    run:\n        - python\n        - {{ pin_compatible(\"numpy\") }}\n        - pytools\n        # for pkg_resources\n        - setuptools\n        - six\n        - mako\n        - appdirs\n        - khronos-opencl-icd-loader  # [win or osx]\n        - ocl_icd_wrapper_apple  # [osx]\n        - ocl-icd  # [linux]\n\ntest:\n    requires:\n        - pytest\n        - pocl  >=0.14  # [linux]\n    imports:\n        - {{ name }}\n    source_files:\n        - test\n    commands:\n        - cd test && python -m pytest   # [osx]\n\nabout:\n    home: http://pypi.python.org/pypi/pyopencl\n    doc_url: https://documen.tician.de/pyopencl\n    dev_url: http://github.com/inducer/pyopencl\n    license: MIT\n    license_file: LICENSE\n    summary: Python wrapper for OpenCL\n    description: |\n\n        PyOpenCL lets you access GPUs, multi-core CPUs, and other massively\n        parallel compute devices from Python, through the OpenCL parallel\n        compute interface.\n\nextra:\n    recipe-maintainers:\n        - inducer\n        - isuruf\n",
 "req":{
  "__set__":true,
  "elements":[
   "appdirs",
   "compatible_pin_stub",
   "cxx_compiler_stub",
   "khronos-opencl-icd-loader",
   "libpython",
   "m2w64_cxx_compiler_stub",
   "mako",
   "numpy",
   "ocl-icd",
   "ocl_icd_wrapper_apple",
   "pybind11",
   "python",
   "pytools",
   "setuptools",
   "six"
  ]
 },
 "smithy_version":"3.6.2",
 "url":"https://pypi.io/packages/source/p/pyopencl/pyopencl-2019.1.1.tar.gz",
 "version":"2019.1.2"
}