{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/199916493.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/216184792.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/219218369.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.2.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/227181440.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/244312322.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.3.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/268178423.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299659112.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/300957337.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.1.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/302302160.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336628928.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/336999279.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/339170946.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/356742637.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.4.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"pyparsing",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The pyparsing module is an alternative approach to creating and executing\nsimple grammars, vs. the traditional lex/yacc approach, or the use of\nregular expressions. The pyparsing module provides a library of classes\nthat client code uses to construct the grammar directly in Python code.\n",
   "dev_url":"https://svn.code.sf.net/p/pyparsing/code/",
   "doc_url":"http://pyparsing.wikispaces.com/Documentation",
   "home":"http://pyparsing.wikispaces.com/",
   "license":"MIT",
   "license_file":"LICENSE",
   "summary":"Create and execute simple grammars"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "msarahan",
    "ocefpaf",
    "msarahan",
    "ocefpaf",
    "msarahan",
    "ocefpaf"
   ]
  },
  "package":{
   "name":"pyparsing",
   "version":"2.4.5"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "python",
    "python"
   ]
  },
  "source":{
   "sha256":"4ca62001be367f01bd3e92ecbb79070272a9d4964dce6a48a82ff0b8bc7e683a",
   "url":"https://pypi.io/packages/source/p/pyparsing/pyparsing-2.4.5.tar.gz"
  },
  "test":{
   "imports":[
    "pyparsing",
    "pyparsing",
    "pyparsing"
   ]
  }
 },
 "name":"pyparsing",
 "new_version":"2.4.6",
 "pinning_version":"2019.12.18",
 "raw_meta_yaml":"{% set version = \"2.4.5\" %}\n\npackage:\n  name: pyparsing\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pyparsing/pyparsing-{{ version }}.tar.gz\n  sha256: 4ca62001be367f01bd3e92ecbb79070272a9d4964dce6a48a82ff0b8bc7e683a\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vvv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - pyparsing\n\nabout:\n  home: http://pyparsing.wikispaces.com/\n  license: MIT\n  license_file: LICENSE\n  summary: Create and execute simple grammars\n  description: |\n    The pyparsing module is an alternative approach to creating and executing\n    simple grammars, vs. the traditional lex/yacc approach, or the use of\n    regular expressions. The pyparsing module provides a library of classes\n    that client code uses to construct the grammar directly in Python code.\n  doc_url: http://pyparsing.wikispaces.com/Documentation\n  dev_url: https://svn.code.sf.net/p/pyparsing/code/\n\nextra:\n  recipe-maintainers:\n    - msarahan\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python"
  ]
 },
 "smithy_version":"3.6.5",
 "url":"https://pypi.io/packages/source/p/pyparsing/pyparsing-2.4.2.tar.gz",
 "version":"2.4.5"
}