{
 "archived": false,
 "bad": false,
 "conda-forge.yml": {},
 "feedstock_name": "pysignal",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A Qt style signal implementation that doesn't require QObjects.\nThis supports class methods, functions, lambdas and partials.\n\nSignals can either be created on the instance or on the class, and\ncan be handled either as objects or by string name. Unlike PyQt\nsignals, PySignals do not enforce types by default as I believe this\nis more pythonic.\n",
   "dev_url": "https://github.com/dgovil/PySignal",
   "home": "https://github.com/dgovil/PySignal",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Python Signal Library to mimic the Qt Signal system for event driven connections"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mtsolmn"
   ]
  },
  "package": {
   "name": "pysignal",
   "version": "1.1.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "sha256": "0140bcf675099396f87745725a7cc7f1e37b1ebeb83fbc801681a56d22867695",
   "url": "https://pypi.io/packages/source/p/pysignal/PySignal-1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "PySignal"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A Qt style signal implementation that doesn't require QObjects.\nThis supports class methods, functions, lambdas and partials.\n\nSignals can either be created on the instance or on the class, and\ncan be handled either as objects or by string name. Unlike PyQt\nsignals, PySignals do not enforce types by default as I believe this\nis more pythonic.\n",
   "dev_url": "https://github.com/dgovil/PySignal",
   "home": "https://github.com/dgovil/PySignal",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Python Signal Library to mimic the Qt Signal system for event driven connections"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mtsolmn"
   ]
  },
  "package": {
   "name": "pysignal",
   "version": "1.1.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "sha256": "0140bcf675099396f87745725a7cc7f1e37b1ebeb83fbc801681a56d22867695",
   "url": "https://pypi.io/packages/source/p/pysignal/PySignal-1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "PySignal"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "pysignal",
 "new_version": "1.1.1",
 "raw_meta_yaml": "{% set name = \"pysignal\" %}\n{% set version = \"1.1.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/PySignal-{{ version }}.tar.gz\n  sha256: 0140bcf675099396f87745725a7cc7f1e37b1ebeb83fbc801681a56d22867695\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n\ntest:\n  imports:\n    - PySignal\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/dgovil/PySignal\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Python Signal Library to mimic the Qt Signal system for event driven connections\n\n  description: |\n    A Qt style signal implementation that doesn't require QObjects.\n    This supports class methods, functions, lambdas and partials.\n\n    Signals can either be created on the instance or on the class, and\n    can be handled either as objects or by string name. Unlike PyQt\n    signals, PySignals do not enforce types by default as I believe this\n    is more pythonic.\n  dev_url: https://github.com/dgovil/PySignal\n\nextra:\n  recipe-maintainers:\n    - mtsolmn\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pysignal/PySignal-1.1.1.tar.gz",
 "version": "1.1.1"
}