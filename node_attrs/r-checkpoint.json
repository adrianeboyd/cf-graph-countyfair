{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/233319385.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299645259.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/301789381.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/315313701.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.4.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 1322, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 303, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/http/client.py\", line 264, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/socket.py\", line 669, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 439, in send",
   "    resp = conn.urlopen(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 719, in urlopen",
   "    retries = retries.increment(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 665, in urlopen",
   "    httplib_response = self._make_request(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 330, in _raise_timeout",
   "    raise ReadTimeoutError(",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 659, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 120, in run",
   "    feedstock_dir, repo = get_repo(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 119, in get_repo",
   "    fork_repo = gh.repository(ctx.github_username, feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-checkpoint",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/RevolutionAnalytics/checkpoint",
   "license":"GPL-2",
   "license_family":"GPL2",
   "license_file":[
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary":"The goal of checkpoint is to solve the problem of package reproducibility in R. Specifically, checkpoint allows you to install packages as they existed on CRAN on a specific snapshot date as if you had a CRAN time machine. To achieve reproducibility, the checkpoint() function installs the packages required or called by your project and scripts to a local library exactly as they existed at the specified point in time. Only those packages are available to your project, thereby avoiding any package updates that came later and may have altered your results. In this way, anyone using checkpoint's checkpoint() can ensure the reproducibility of your scripts or projects at any time. To create the snapshot archives, once a day (at midnight UTC) Microsoft refreshes the Austria CRAN mirror on the \"Microsoft R Archived Network\" server (<https://mran.microsoft.com/>). Immediately after completion of the rsync mirror process, the process takes a snapshot, thus creating the archive. Snapshot archives exist starting from 2014-09-17."
  },
  "build":{
   "merge_build_host":true,
   "noarch":"generic",
   "number":"0",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package":{
   "name":"r-checkpoint",
   "version":"0.4.7"
  },
  "requirements":{
   "build":null,
   "host":[
    "r-base",
    "r-base",
    "r-base"
   ],
   "run":[
    "r-base",
    "r-base",
    "r-base"
   ]
  },
  "source":{
   "sha256":"261534e20e1ae4dae46a234498e3b090241fd823c3f8be5a732699cb048c2d01",
   "url":[
    "https://cran.r-project.org/src/contrib/checkpoint_0.4.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/checkpoint/checkpoint_0.4.7.tar.gz",
    "https://cran.r-project.org/src/contrib/checkpoint_0.4.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/checkpoint/checkpoint_0.4.7.tar.gz",
    "https://cran.r-project.org/src/contrib/checkpoint_0.4.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/checkpoint/checkpoint_0.4.7.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('checkpoint')\"",
    "$R -e \"library('checkpoint')\"",
    "$R -e \"library('checkpoint')\""
   ]
  }
 },
 "name":"r-checkpoint",
 "new_version":"0.4.8",
 "pinning_version":"2019.09.08",
 "raw_meta_yaml":"{% set version = '0.4.7' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-checkpoint\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/checkpoint_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/checkpoint/checkpoint_{{ version }}.tar.gz\n  sha256: 261534e20e1ae4dae46a234498e3b090241fd823c3f8be5a732699cb048c2d01\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{posix}}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('checkpoint')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('checkpoint')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/RevolutionAnalytics/checkpoint\n  license: GPL-2\n  summary: The goal of checkpoint is to solve the problem of package reproducibility in R. Specifically,\n    checkpoint allows you to install packages as they existed on CRAN on a specific\n    snapshot date as if you had a CRAN time machine. To achieve reproducibility, the\n    checkpoint() function installs the packages required or called by your project and\n    scripts to a local library exactly as they existed at the specified point in time.\n    Only those packages are available to your project, thereby avoiding any package\n    updates that came later and may have altered your results. In this way, anyone using\n    checkpoint's checkpoint() can ensure the reproducibility of your scripts or projects\n    at any time. To create the snapshot archives, once a day (at midnight UTC) Microsoft\n    refreshes the Austria CRAN mirror on the \"Microsoft R Archived Network\" server (<https://mran.microsoft.com/>).\n    Immediately after completion of the rsync mirror process, the process takes a snapshot,\n    thus creating the archive. Snapshot archives exist starting from 2014-09-17.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: checkpoint\n# Title: Install Packages from Snapshots on the Checkpoint Server for Reproducibility\n# Description: The goal of checkpoint is to solve the problem of package reproducibility in R. Specifically, checkpoint allows you to install packages as they existed on CRAN on a specific snapshot date as if you had a CRAN time machine. To achieve reproducibility, the checkpoint() function installs the packages required or called by your project and scripts to a local library exactly as they existed at the specified point in time. Only those packages are available to your project, thereby avoiding any package updates that came later and may have altered your results. In this way, anyone using checkpoint's checkpoint() can ensure the reproducibility of your scripts or projects at any time. To create the snapshot archives, once a day (at midnight UTC) Microsoft refreshes the Austria CRAN mirror on the \"Microsoft R Archived Network\" server (<https://mran.microsoft.com/>). Immediately after completion of the rsync mirror process, the process takes a snapshot, thus creating the archive. Snapshot archives exist starting from 2014-09-17.\n# Version: 0.4.7\n# Authors@R: c( person(\"Hong\", \"Ooi\", , \"hongooi@microsoft.com\", role=c(\"aut\", \"cre\")), person(\"Microsoft\", role=\"cph\") )\n# License: GPL-2\n# URL: https://github.com/RevolutionAnalytics/checkpoint\n# BugReports: https://www.github.com/RevolutionAnalytics/checkpoint/issues\n# Imports: utils\n# Depends: R(>= 3.0.0)\n# Suggests: knitr, rmarkdown, testthat(>= 0.9), MASS, darts, mockery, cli\n# VignetteBuilder: knitr\n# RoxygenNote: 6.1.1\n# NeedsCompilation: no\n# Packaged: 2019-09-08 21:10:09 UTC; hongo\n# Author: Hong Ooi [aut, cre], Microsoft [cph]\n# Maintainer: Hong Ooi <hongooi@microsoft.com>\n# Repository: CRAN\n# Date/Publication: 2019-09-08 21:30:02 UTC\n",
 "req":{
  "__set__":true,
  "elements":[
   "r-base"
  ]
 },
 "smithy_version":"3.4.5",
 "url":[
  "https://cran.r-project.org/src/contrib/checkpoint_0.4.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/checkpoint/checkpoint_0.4.7.tar.gz",
  "https://cran.r-project.org/src/contrib/checkpoint_0.4.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/checkpoint/checkpoint_0.4.7.tar.gz",
  "https://cran.r-project.org/src/contrib/checkpoint_0.4.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/checkpoint/checkpoint_0.4.7.tar.gz"
 ],
 "version":"0.4.7"
}