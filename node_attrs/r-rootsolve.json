{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/205601511.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Compiler",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/232828484.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299544627.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/309051791.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"GFortranOSXRebuild",
    "migrator_version":0,
    "name":"fortran_compiler_stub-7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/340602493.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.8.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-rootsolve",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://CRAN.R-project.org/package=rootSolve",
   "license":"GPL (>= 2)",
   "license_family":"GPL3",
   "license_file":"/lib/R/share/licenses/GPL-3",
   "summary":"Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
  },
  "build":{
   "merge_build_host":true,
   "number":"1004",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "MathiasHaudgaard",
    "FrodePedersen",
    "ArneKr",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "conda-forge/r",
    "MathiasHaudgaard",
    "FrodePedersen",
    "ArneKr",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "conda-forge/r",
    "MathiasHaudgaard",
    "FrodePedersen",
    "ArneKr",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast"
   ]
  },
  "package":{
   "name":"r-rootsolve",
   "version":"1.7"
  },
  "requirements":{
   "build":[
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make",
    "c_compiler_stub",
    "fortran_compiler_stub",
    "make"
   ],
   "host":[
    "r-base",
    "r-base",
    "r-base"
   ],
   "run":[
    "r-base",
    "gcc-libs",
    "r-base",
    "r-base"
   ]
  },
  "source":{
   "fn":"rootSolve_1.7.tar.gz",
   "sha256":"08b3bb63f04fc0b065cb615b6ca1ef95eb6df7a813eb9eb625bc15c6de332c22",
   "url":[
    "https://cran.r-project.org/src/contrib/rootSolve_1.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.7.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.7.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.7.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('rootSolve')\"",
    "$R -e \"library('rootSolve')\"",
    "$R -e \"library('rootSolve')\""
   ]
  }
 },
 "name":"r-rootsolve",
 "new_version":"1.8.1",
 "pinning_version":"2019.11.13",
 "raw_meta_yaml":"{% set version = '1.7' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rootsolve\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  fn: rootSolve_{{ version }}.tar.gz\n  url:\n    - {{ cran_mirror }}/src/contrib/rootSolve_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/rootSolve/rootSolve_{{ version }}.tar.gz\n  sha256: 08b3bb63f04fc0b065cb615b6ca1ef95eb6df7a813eb9eb625bc15c6de332c22\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1004\n  skip: true  # [win32]\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}        # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('m2w64_fortran') }}        # [win]\n    - {{posix}}filesystem        # [win]\n    - {{posix}}make\n    - {{posix}}sed               # [win]\n    - {{posix}}coreutils         # [win]\n    - {{posix}}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n    - {{native}}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('rootSolve')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('rootSolve')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=rootSolve\n  license: GPL (>= 2)\n  summary: 'Routines to find the root of nonlinear functions, and to perform steady-state and\n    equilibrium analysis of ordinary differential equations (ODE).  Includes routines\n    that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots\n    of non-linear equations by the ''Newton-Raphson'' method,  (3) estimate steady-state\n    conditions of a system of (differential) equations in full, banded or sparse form,\n    using the ''Newton-Raphson'' method, or by dynamically running, (4) solve the steady-state\n    conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations,\n    that have been converted to ordinary differential equations by numerical differencing\n    (using the method-of-lines approach). Includes fortran code.'\n  license_family: GPL3\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - MathiasHaudgaard\n    - FrodePedersen\n    - ArneKr\n    - johanneskoester\n    - bgruening\n    - daler\n    - jdblischak\n    - cbrueffer\n    - dbast\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "coreutils",
   "filesystem",
   "fortran_compiler_stub",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "make",
   "r-base",
   "sed",
   "zip"
  ]
 },
 "smithy_version":"3.6.2",
 "url":[
  "https://cran.r-project.org/src/contrib/rootSolve_1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/rootSolve_1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/rootSolve_1.7.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.7.tar.gz"
 ],
 "version":"1.7"
}