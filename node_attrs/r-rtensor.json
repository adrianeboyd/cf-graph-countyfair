{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/238052874.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/299539237.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"RBaseRebuild",
    "migrator_version":0,
    "name":"r-base-3.6.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"while constructing a mapping\n  in \"<unicode string>\", line 14, column 3:\n      noarch: generic\n      ^ (line: 14)\nfound duplicate key \"noarch\" with value \"generic\" (original value: \"generic\")\n  in \"<unicode string>\", line 16, column 3:\n      noarch: generic\n      ^ (line: 16)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\nDuplicate keys will become an error in future releases, and are errors\nby default when using the new API.\n",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 901, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 166, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 373, in migrate",
   "    cmeta = CondaMetaYAML(fp.read())",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 358, in __init__",
   "    self.meta = YAML_JINJA2.load(\"\".join(lines))",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/main.py\", line 341, in load",
   "    return constructor.get_single_data()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data",
   "    return self.construct_document(node)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 118, in construct_document",
   "    data = self.construct_object(node)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object",
   "    data = self.construct_non_recursive_object(node)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object",
   "    for _dummy in generator:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map",
   "    self.construct_mapping(node, data, deep=True)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1468, in construct_mapping",
   "    value = self.construct_object(value_node, deep=deep)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object",
   "    data = self.construct_non_recursive_object(node)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object",
   "    for _dummy in generator:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map",
   "    self.construct_mapping(node, data, deep=True)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping",
   "    if self.check_mapping_key(node, key_node, maptyp, key, value):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key",
   "    raise DuplicateKeyError(*args)",
   "ruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping",
   "  in \"<unicode string>\", line 14, column 3:",
   "      noarch: generic",
   "      ^ (line: 14)",
   "found duplicate key \"noarch\" with value \"generic\" (original value: \"generic\")",
   "  in \"<unicode string>\", line 16, column 3:",
   "      noarch: generic",
   "      ^ (line: 16)",
   "",
   "To suppress this check see:",
   "    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys",
   "",
   "Duplicate keys will become an error in future releases, and are errors",
   "by default when using the new API.",
   "",
   ""
  ]
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"r-rtensor",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://jamesyili.github.io/rTensor",
   "license":"GPL (>= 2)",
   "license_family":"GPL3",
   "license_file":"/lib/R/share/licenses/GPL-3",
   "summary":"A set of tools for creation, manipulation, and modeling of tensors with arbitrary number of modes. A tensor in the context of data analysis is a multidimensional array. rTensor does this by providing a S4 class 'Tensor' that wraps around the base 'array' class. rTensor provides common tensor operations as methods, including matrix unfolding, summing/averaging across modes, calculating the Frobenius norm, and taking the inner product between two tensors. Familiar array operations are overloaded, such as index subsetting via '[' and element-wise operations. rTensor also implements various tensor decomposition, including CP, GLRAM, MPCA, PVD, and Tucker. For tensors with 3 modes, rTensor also implements transpose, t-product, and t-SVD, as defined in Kilmer et al. (2013). Some auxiliary functions include the Khatri-Rao product, Kronecker product, and the Hamadard product for a list of matrices."
  },
  "build":{
   "merge_build_host":true,
   "noarch":"generic",
   "number":"1001",
   "rpaths":[
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "conda-forge/r",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "PertuyF",
    "tbillet17",
    "conda-forge/r",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "PertuyF",
    "tbillet17",
    "conda-forge/r",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast",
    "PertuyF",
    "tbillet17"
   ]
  },
  "package":{
   "name":"r-rtensor",
   "version":"1.4"
  },
  "requirements":{
   "host":[
    "r-base",
    "r-base",
    "r-base"
   ],
   "run":[
    "r-base",
    "r-base",
    "r-base"
   ]
  },
  "source":{
   "sha256":"f9f35ecae8fbf133728c0f9bfb7904e9d7fcb63e8958de009145c432f7262922",
   "url":[
    "https://cran.r-project.org/src/contrib/rTensor_1.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rTensor/rTensor_1.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rTensor_1.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rTensor/rTensor_1.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rTensor_1.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rTensor/rTensor_1.4.tar.gz"
   ]
  },
  "test":{
   "commands":[
    "\"%R%\" -e \"library('rTensor')\"",
    "$R -e \"library('rTensor')\"",
    "$R -e \"library('rTensor')\""
   ]
  }
 },
 "name":"r-rtensor",
 "new_version":"1.4.1",
 "pinning_version":"2019.07.19",
 "raw_meta_yaml":"{% set version = '1.4' %}\n\npackage:\n  name: r-rtensor\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/rTensor_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/rTensor/rTensor_{{ version }}.tar.gz\n  sha256: f9f35ecae8fbf133728c0f9bfb7904e9d7fcb63e8958de009145c432f7262922\n\nbuild:\n  noarch: generic\n  merge_build_host: True  # [win]\n  noarch: generic\n  number: 1001\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('rTensor')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('rTensor')\\\"\"  # [win]\n\nabout:\n  home: http://jamesyili.github.io/rTensor\n  license: GPL (>= 2)\n  summary: A set of tools for creation, manipulation, and modeling of tensors with arbitrary\n    number of modes. A tensor in the context of data analysis is a multidimensional\n    array. rTensor does this by providing a S4 class 'Tensor' that wraps around the\n    base 'array' class. rTensor provides common tensor operations as methods, including\n    matrix unfolding, summing/averaging across modes, calculating the Frobenius norm,\n    and taking the inner product between two tensors. Familiar array operations are\n    overloaded, such as index subsetting via '[' and element-wise operations. rTensor\n    also implements various tensor decomposition, including CP, GLRAM, MPCA, PVD, and\n    Tucker. For tensors with 3 modes, rTensor also implements transpose, t-product,\n    and t-SVD, as defined in Kilmer et al. (2013). Some auxiliary functions include\n    the Khatri-Rao product, Kronecker product, and the Hamadard product for a list of\n    matrices.\n  license_family: GPL3\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - johanneskoester\n    - bgruening\n    - daler\n    - jdblischak\n    - cbrueffer\n    - dbast\n    - PertuyF\n    - tbillet17\n",
 "req":{
  "__set__":true,
  "elements":[
   "r-base"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.4.1",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "r-base"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":[
  "https://cran.r-project.org/src/contrib/rTensor_1.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rTensor/rTensor_1.4.tar.gz",
  "https://cran.r-project.org/src/contrib/rTensor_1.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rTensor/rTensor_1.4.tar.gz",
  "https://cran.r-project.org/src/contrib/rTensor_1.4.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/rTensor/rTensor_1.4.tar.gz"
 ],
 "version":"1.4"
}