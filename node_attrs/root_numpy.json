{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/243370429.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"4.8.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/338328709.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/384095703.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"root620000"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393627318.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"root_base6202"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 267, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 725, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 403, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 428, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 336, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 543, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 785, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 155, in run",
   "    fork=fork,",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 111, in get_repo",
   "    repo = gh.repository(\"conda-forge\", feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"root_numpy",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"root_numpy is a Python extension module that provides an efficient\ninterface between ROOT and NumPy. root_numpy's internals are compiled\nC++ and can therefore handle large amounts of data much faster than\nequivalent pure Python implementations.\n",
   "dev_url":"https://github.com/scikit-hep/root_numpy",
   "doc_url":"http://scikit-hep.org/root_numpy",
   "home":"http://scikit-hep.org/root_numpy",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"The interface between ROOT and NumPy"
  },
  "build":{
   "number":"5",
   "script":"CFLAGS=\"${CFLAGS} -Wno-register\"  -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "chrisburr",
    "duncanmmacleod",
    "chrisburr",
    "duncanmmacleod",
    "chrisburr",
    "duncanmmacleod"
   ]
  },
  "package":{
   "name":"root_numpy",
   "version":"4.8.0"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host":[
    "pip",
    "python",
    "root_base",
    "root-binaries",
    "numpy",
    "pip",
    "python",
    "root_base",
    "root-binaries",
    "numpy",
    "pip",
    "python",
    "root_base",
    "root-binaries",
    "numpy"
   ],
   "run":[
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source":{
   "patches":[
    "396.patch",
    "396.patch",
    "396.patch"
   ],
   "sha256":"5842bbcde92133f60a61f56e9f0a875a0dbc2a567cc65a9ac141ecd72e416878",
   "url":"https://pypi.io/packages/source/r/root_numpy/root_numpy-4.8.0.tar.gz"
  },
  "test":{
   "commands":[
    "nosetests -s -v root_numpy --exclude='(test_evaluate_func|test_tmva_multiclass)'",
    "nosetests -s -v root_numpy --exclude='(test_evaluate_func|test_tmva_multiclass)'",
    "nosetests -s -v root_numpy --exclude='(test_evaluate_func|test_tmva_multiclass)'"
   ],
   "imports":[
    "root_numpy",
    "root_numpy",
    "root_numpy"
   ],
   "requires":[
    "nose",
    "nose",
    "nose"
   ]
  }
 },
 "name":"root_numpy",
 "new_version":"4.8.0",
 "pinning_version":"2020.03.24",
 "raw_meta_yaml":"{% set name = \"root_numpy\" %}\n{% set version = \"4.8.0\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 5842bbcde92133f60a61f56e9f0a875a0dbc2a567cc65a9ac141ecd72e416878\n  patches:\n    - 396.patch\n\nbuild:\n  number: 5\n  skip: true  # [win]\n  # -Wno-register is required for Python 2.7 in C++17 mode\n  # See: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=231073\n  script: CFLAGS=\"${CFLAGS} -Wno-register\" {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - pip\n    - python\n    - root_base\n    - root-binaries\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - root_numpy\n  requires:\n    - nose\n  commands:\n    - nosetests -s -v {{ name }} --exclude='(test_evaluate_func|test_tmva_multiclass)'\n\nabout:\n  home: http://scikit-hep.org/root_numpy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  doc_url: http://scikit-hep.org/root_numpy\n  dev_url: https://github.com/scikit-hep/root_numpy\n  summary: The interface between ROOT and NumPy\n  description: |\n    root_numpy is a Python extension module that provides an efficient\n    interface between ROOT and NumPy. root_numpy's internals are compiled\n    C++ and can therefore handle large amounts of data much faster than\n    equivalent pure Python implementations.\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n    - duncanmmacleod\n",
 "req":{
  "__set__":true,
  "elements":[
   "cxx_compiler_stub",
   "numpy",
   "pip",
   "python",
   "root-binaries",
   "root_base"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python",
    "root-binaries",
    "root_base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "nose"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.6.15",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "numpy",
    "pip",
    "python",
    "root-binaries",
    "root_base"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "numpy",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "nose"
   ]
  }
 },
 "url":"https://pypi.io/packages/source/r/root_numpy/root_numpy-4.8.0.tar.gz",
 "version":"4.8.0"
}