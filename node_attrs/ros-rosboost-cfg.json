{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/333204836.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.14.7"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/335948533.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1344, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 306, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 267, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 543, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 530, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 643, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 725, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 145, in run",
   "    fork=fork,",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.py\", line 111, in get_repo",
   "    repo = gh.repository(\"conda-forge\", feedstock_reponame)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1981, in repository",
   "    json = self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"ros-rosboost-cfg",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Contains scripts used by the rosboost-cfg tool for determining\ncflags/lflags/etc. of boost on your system\n",
   "home":"http://ros.org/wiki/rosboost_cfg",
   "license":"BSD-3-Clause",
   "license_file":"src/rosboost_cfg/__init__.py",
   "summary":"Contains scripts used by the rosboost-cfg tool for determining cflags/lflags/etc. of boost on your system\n"
  },
  "build":{
   "number":"0",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "wolfv",
    "lesteve",
    "seanyen",
    "wolfv",
    "lesteve",
    "seanyen",
    "wolfv",
    "lesteve",
    "seanyen"
   ]
  },
  "package":{
   "name":"ros-rosboost-cfg",
   "version":"1.14.6"
  },
  "requirements":{
   "build":[
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make"
   ],
   "host":[
    "ros-conda-mutex * melodic",
    "ros-conda-base",
    "python",
    "catkin_pkg",
    "ros-catkin",
    "ros-conda-mutex * melodic",
    "ros-conda-base",
    "python",
    "catkin_pkg",
    "ros-catkin",
    "ros-conda-mutex * melodic",
    "ros-conda-base",
    "python",
    "catkin_pkg",
    "ros-catkin"
   ],
   "run":[
    "ros-conda-mutex * melodic",
    "ros-conda-base",
    "python",
    "ros-conda-mutex * melodic",
    "ros-conda-base",
    "python",
    "ros-conda-mutex * melodic",
    "ros-conda-base",
    "python"
   ]
  },
  "source":{
   "fn":"ros-rosboost-cfg-1.14.6.tar.gz",
   "sha256":"1aad8d583287e022e1f74e4093b5279383ec65589461a3345941daa136b2e57e",
   "url":"https://github.com/ros-gbp/ros-release/archive/release/melodic/rosboost_cfg/1.14.6-0.tar.gz"
  },
  "test":{
   "commands":[
    "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('rosboost_cfg');print(ret)\"",
    "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('rosboost_cfg');print(ret)\"",
    "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('rosboost_cfg');print(ret)\""
   ],
   "requires":[
    "rospkg",
    "rospkg",
    "rospkg"
   ]
  }
 },
 "name":"ros-rosboost-cfg",
 "new_version":"1.14.8",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"package:\n  name: ros-rosboost-cfg\n  version: 1.14.6\n\nsource:\n  url: https://github.com/ros-gbp/ros-release/archive/release/melodic/rosboost_cfg/1.14.6-0.tar.gz\n  fn: ros-rosboost-cfg-1.14.6.tar.gz\n  sha256: 1aad8d583287e022e1f74e4093b5279383ec65589461a3345941daa136b2e57e\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - cmake\n    - make  # [unix]\n  host:\n    - ros-conda-mutex * melodic\n    - ros-conda-base\n    - python\n    - catkin_pkg\n    - ros-catkin\n  run:\n    - ros-conda-mutex * melodic\n    - ros-conda-base\n    - python\n\ntest:\n  requires:\n    - rospkg\n  commands:\n    - export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('rosboost_cfg');print(ret)\"\n\nabout:\n  home: http://ros.org/wiki/rosboost_cfg\n  summary: |\n    Contains scripts used by the rosboost-cfg tool for determining cflags/lflags/etc. of boost on your system\n  description: |\n    Contains scripts used by the rosboost-cfg tool for determining\n    cflags/lflags/etc. of boost on your system\n  license: BSD-3-Clause\n  license_file: src/rosboost_cfg/__init__.py\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - lesteve\n    - seanyen\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "catkin_pkg",
   "cmake",
   "cxx_compiler_stub",
   "make",
   "python",
   "ros-catkin",
   "ros-conda-base",
   "ros-conda-mutex"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "catkin_pkg",
    "python",
    "ros-catkin",
    "ros-conda-base",
    "ros-conda-mutex"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python",
    "ros-conda-base",
    "ros-conda-mutex"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "rospkg"
   ]
  }
 },
 "smithy_version":"3.6.1",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "catkin_pkg",
    "python",
    "ros-catkin",
    "ros-conda-base",
    "ros-conda-mutex * melodic"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "python",
    "ros-conda-base",
    "ros-conda-mutex * melodic"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "rospkg"
   ]
  }
 },
 "url":"https://github.com/ros-gbp/ros-release/archive/release/melodic/rosboost_cfg/1.14.6-0.tar.gz",
 "version":"1.14.6"
}