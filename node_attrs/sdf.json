{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199888576.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/222677396.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/339413667.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "python38"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/375759534.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/452349993.json"
   },
   "data": {
    "bot_rerun": 1600812317.56277,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/492020966.json"
   },
   "data": {
    "bot_rerun": 1603243117.3287306,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/502628264.json"
   },
   "data": {
    "bot_rerun": 1603216840.1168592,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/507206920.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/509621527.json"
   },
   "data": {
    "bot_rerun": 1603657489.8028948,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 2,
    "migrator_version": 0,
    "name": "python39"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 938, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 215, in run",
   "    timeout=300,",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 99, in eval_cmd",
   "    c.check_returncode()",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/subprocess.py\", line 444, in check_returncode",
   "    self.stderr)",
   "subprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.",
   ""
  ]
 },
 "conda-forge.yml": {
  "compiler_stack": "comp7",
  "max_py_ver": "37",
  "max_r_ver": "35",
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "sdf",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ScientificDataFormat/SDF-Python",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE.txt",
   "summary": "Work with the Scientific Data Format in Python"
  },
  "build": {
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "t-sommer",
    "t-sommer",
    "t-sommer"
   ]
  },
  "package": {
   "name": "sdf",
   "version": "0.3.5"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "506aa177aec7748b3387d1449a75dbf559a53d0d018a9018da0ee98749b443f6",
   "url": "https://github.com/ScientificDataFormat/SDF-Python/archive/v0.3.5.tar.gz"
  },
  "test": {
   "imports": [
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/ScientificDataFormat/SDF-Python",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE.txt",
   "summary": "Work with the Scientific Data Format in Python"
  },
  "build": {
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "t-sommer",
    "t-sommer",
    "t-sommer",
    "t-sommer",
    "t-sommer",
    "t-sommer",
    "t-sommer",
    "t-sommer",
    "t-sommer"
   ]
  },
  "package": {
   "name": "sdf",
   "version": "0.3.5"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "506aa177aec7748b3387d1449a75dbf559a53d0d018a9018da0ee98749b443f6",
   "url": "https://github.com/ScientificDataFormat/SDF-Python/archive/v0.3.5.tar.gz"
  },
  "test": {
   "imports": [
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples"
   ]
  }
 },
 "name": "sdf",
 "new_version": "0.3.5",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ScientificDataFormat/SDF-Python",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE.txt",
   "summary": "Work with the Scientific Data Format in Python"
  },
  "build": {
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "t-sommer",
    "t-sommer",
    "t-sommer"
   ]
  },
  "package": {
   "name": "sdf",
   "version": "0.3.5"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "506aa177aec7748b3387d1449a75dbf559a53d0d018a9018da0ee98749b443f6",
   "url": "https://github.com/ScientificDataFormat/SDF-Python/archive/v0.3.5.tar.gz"
  },
  "test": {
   "imports": [
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "pinning_version": "2020.10.24.16.47.03",
 "pre_pr_migrator_status": {
  "python39": "bot error: Traceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 938, in main\n    hash_type=attrs.get(\"hash_type\", \"sha256\"),\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 215, in run\n    timeout=300,\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/utils.py\", line 99, in eval_cmd\n    c.check_returncode()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/subprocess.py\", line 444, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command 'conda smithy rerender -c auto --no-check-uptodate' returned non-zero exit status 1.\n"
 },
 "raw_meta_yaml": "{% set name = \"sdf\" %}\n{% set version = \"0.3.5\" %}\n{% set sha256 = \"506aa177aec7748b3387d1449a75dbf559a53d0d018a9018da0ee98749b443f6\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ScientificDataFormat/SDF-Python/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  # macOS: shasum -a 256 <file>\n  # Windows: certutil -hashfile <file> SHA256\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - python\n    - pip\n  run:\n    - python\n    - h5py\n    - matplotlib-base\n    - numpy\n    - scipy\n\ntest:\n  imports:\n    - sdf\n    - sdf.examples\n\nabout:\n  home: https://github.com/ScientificDataFormat/SDF-Python\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE.txt'\n  summary: \"Work with the Scientific Data Format in Python\"\n\nextra:\n  recipe-maintainers:\n    - t-sommer\n",
 "req": {
  "__set__": true,
  "elements": [
   "h5py",
   "matplotlib-base",
   "numpy",
   "pip",
   "python",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/ScientificDataFormat/SDF-Python/archive/v0.3.4.tar.gz",
 "version": "0.3.5",
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/ScientificDataFormat/SDF-Python",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "/LICENSE.txt",
   "summary": "Work with the Scientific Data Format in Python"
  },
  "build": {
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "t-sommer",
    "t-sommer",
    "t-sommer"
   ]
  },
  "package": {
   "name": "sdf",
   "version": "0.3.5"
  },
  "requirements": {
   "build": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy",
    "python",
    "h5py",
    "matplotlib-base",
    "numpy",
    "scipy"
   ]
  },
  "source": {
   "sha256": "506aa177aec7748b3387d1449a75dbf559a53d0d018a9018da0ee98749b443f6",
   "url": "https://github.com/ScientificDataFormat/SDF-Python/archive/v0.3.5.tar.gz"
  },
  "test": {
   "imports": [
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples",
    "sdf",
    "sdf.examples"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}