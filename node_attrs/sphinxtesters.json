{
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 387, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 2, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 383, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 257, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 317, in recv_into",
   "    raise timeout('The read operation timed out')",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 641, in urlopen",
   "    _stacktrace=sys.exc_info()[2])",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 368, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 686, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 603, in urlopen",
   "    chunked=chunked)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 389, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 307, in _raise_timeout",
   "    raise ReadTimeoutError(self, url, \"Read timed out. (read timeout=%s)\" % timeout_value)",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 546, in get",
   "    return self.request('GET', url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 649, in main",
   "    if gh.rate_limit()['resources']['core']['remaining'] == 0:",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/github.py\", line 1867, in rate_limit",
   "    return self._json(self._get(url), 200)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 211, in _get",
   "    return self._request(\"get\", url, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{},
 "feedstock_name":"sphinxtesters",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Utilities for testing Sphinx extensions\n",
   "dev_url":"http://github.com/matthew-brett/sphinxtesters",
   "doc_url":"http://github.com/matthew-brett/sphinxtesters",
   "home":"http://github.com/matthew-brett/sphinxtesters",
   "license":"BSD-2-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE",
   "summary":"Utilities for testing Sphinx extensions"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"python -m pip install --no-deps --ignore-installed ."
  },
  "extra":{
   "recipe-maintainers":[
    "CurtLH",
    "CurtLH",
    "CurtLH"
   ]
  },
  "package":{
   "name":"sphinxtesters",
   "version":"0.1.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "docutils",
    "sphinx",
    "python",
    "docutils",
    "sphinx",
    "python",
    "docutils",
    "sphinx"
   ]
  },
  "source":{
   "sha256":"0ba0a366436165ec5920c736ed757b49ff29dbd3e4133eeb09d7aaede0867860",
   "url":"https://pypi.io/packages/source/s/sphinxtesters/sphinxtesters-0.1.1.zip"
  },
  "test":{
   "imports":[
    "sphinxtesters",
    "sphinxtesters.tests",
    "sphinxtesters",
    "sphinxtesters.tests",
    "sphinxtesters",
    "sphinxtesters.tests"
   ]
  }
 },
 "name":"sphinxtesters",
 "new_version":"0.2.3",
 "raw_meta_yaml":"{% set name = \"sphinxtesters\" %}\n{% set version = \"0.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip\n  sha256: 0ba0a366436165ec5920c736ed757b49ff29dbd3e4133eeb09d7aaede0867860 \n\nbuild:\n  noarch: python\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - docutils\n    - sphinx\n\ntest:\n  imports:\n    - sphinxtesters\n    - sphinxtesters.tests\n\nabout:\n  home: http://github.com/matthew-brett/sphinxtesters\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Utilities for testing Sphinx extensions\n  \n  description: |\n    Utilities for testing Sphinx extensions\n  doc_url: http://github.com/matthew-brett/sphinxtesters\n  dev_url: http://github.com/matthew-brett/sphinxtesters\n\nextra:\n  recipe-maintainers:\n    - CurtLH \n",
 "req":{
  "__set__":true,
  "elements":[
   "docutils",
   "pip",
   "python",
   "sphinx"
  ]
 },
 "time":1568135299.0304768,
 "url":"https://pypi.io/packages/source/s/sphinxtesters/sphinxtesters-0.1.1.zip",
 "version":"0.1.1"
}