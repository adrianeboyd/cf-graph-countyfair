{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/466236939.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived":false,
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"sqlitecpp",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "description":"SQLiteC++ offers an encapsulation around the native C APIs of SQLite, with\na few intuitive and well documented C++ classes.\n",
   "home":"https://github.com/SRombauts/SQLiteCpp",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper."
  },
  "build":{
   "number":"0",
   "run_exports":[
    "sqlitecpp"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "wolfv",
    "marimeireles",
    "SylvainCorlay",
    "JohanMabille"
   ]
  },
  "package":{
   "name":"sqlitecpp",
   "version":"3.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host":[
    "sqlite",
    "gtest"
   ]
  },
  "source":{
   "sha256":"e45b2a76d70642bf542a0a99b8be2bc88813d0eaa8e86884fd6209d579f2ed01",
   "url":"https://github.com/SRombauts/SQLiteCpp/archive/3.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "test -f $PREFIX/lib/libSQLiteCpp${SHLIB_EXT}",
    "test -f $PREFIX/include/SQLiteCpp/Database.h"
   ]
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gtest",
    "sqlite"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "description":"SQLiteC++ offers an encapsulation around the native C APIs of SQLite, with\na few intuitive and well documented C++ classes.\n",
   "home":"https://github.com/SRombauts/SQLiteCpp",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper."
  },
  "build":{
   "number":"0",
   "run_exports":[
    "sqlitecpp",
    "sqlitecpp"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "wolfv",
    "marimeireles",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "marimeireles",
    "SylvainCorlay",
    "JohanMabille"
   ]
  },
  "package":{
   "name":"sqlitecpp",
   "version":"3.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host":[
    "sqlite",
    "gtest",
    "sqlite",
    "gtest"
   ]
  },
  "source":{
   "sha256":"e45b2a76d70642bf542a0a99b8be2bc88813d0eaa8e86884fd6209d579f2ed01",
   "url":"https://github.com/SRombauts/SQLiteCpp/archive/3.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "test -f $PREFIX/lib/libSQLiteCpp${SHLIB_EXT}",
    "test -f $PREFIX/include/SQLiteCpp/Database.h",
    "test -f $PREFIX/lib/libSQLiteCpp${SHLIB_EXT}",
    "test -f $PREFIX/include/SQLiteCpp/Database.h"
   ]
  }
 },
 "name":"sqlitecpp",
 "new_version":"3.1.0",
 "new_version_attempts":{
  "3.1.0":1
 },
 "new_version_errors":{},
 "osx_64_meta_yaml":{
  "about":{
   "description":"SQLiteC++ offers an encapsulation around the native C APIs of SQLite, with\na few intuitive and well documented C++ classes.\n",
   "home":"https://github.com/SRombauts/SQLiteCpp",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper."
  },
  "build":{
   "number":"0",
   "run_exports":[
    "sqlitecpp"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "wolfv",
    "marimeireles",
    "SylvainCorlay",
    "JohanMabille"
   ]
  },
  "package":{
   "name":"sqlitecpp",
   "version":"3.1.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make"
   ],
   "host":[
    "sqlite",
    "gtest"
   ]
  },
  "source":{
   "sha256":"e45b2a76d70642bf542a0a99b8be2bc88813d0eaa8e86884fd6209d579f2ed01",
   "url":"https://github.com/SRombauts/SQLiteCpp/archive/3.1.0.tar.gz"
  },
  "test":{
   "commands":[
    "test -f $PREFIX/lib/libSQLiteCpp${SHLIB_EXT}",
    "test -f $PREFIX/include/SQLiteCpp/Database.h"
   ]
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gtest",
    "sqlite"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "pinning_version":"2020.08.10.21.36.31",
 "raw_meta_yaml":"{% set name = \"sqlitecpp\" %}\n{% set version = \"3.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/SRombauts/SQLiteCpp/archive/{{ version }}.tar.gz\n  sha256: e45b2a76d70642bf542a0a99b8be2bc88813d0eaa8e86884fd6209d579f2ed01\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x' ) }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n  host:\n    - sqlite\n    - gtest\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libSQLiteCpp${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/include/SQLiteCpp/Database.h  # [unix]\n\nabout:\n  home: https://github.com/SRombauts/SQLiteCpp\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper.\n  description: |\n    SQLiteC++ offers an encapsulation around the native C APIs of SQLite, with\n    a few intuitive and well documented C++ classes.\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - marimeireles\n    - SylvainCorlay\n    - JohanMabille\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "gtest",
   "make",
   "sqlite"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gtest",
    "sqlite"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.8",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gtest",
    "sqlite"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/SRombauts/SQLiteCpp/archive/3.0.0.tar.gz",
 "version":"3.1.0",
 "win_64_meta_yaml":{
  "about":{
   "description":"SQLiteC++ offers an encapsulation around the native C APIs of SQLite, with\na few intuitive and well documented C++ classes.\n",
   "home":"https://github.com/SRombauts/SQLiteCpp",
   "license":"MIT",
   "license_family":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"SQLiteC++ (SQLiteCpp) is a smart and easy to use C++ SQLite3 wrapper."
  },
  "build":{
   "number":"0",
   "run_exports":[
    "sqlitecpp"
   ],
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "wolfv",
    "marimeireles",
    "SylvainCorlay",
    "JohanMabille"
   ]
  },
  "package":{
   "name":"sqlitecpp",
   "version":"3.0.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host":[
    "sqlite",
    "gtest"
   ]
  },
  "source":{
   "sha256":"152673de2d0deb918974be503dc624145c2c383e02eef9356fa67c08eb4c20f4",
   "url":"https://github.com/SRombauts/SQLiteCpp/archive/3.0.0.tar.gz"
  },
  "test":{
   "commands":null
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "gtest",
    "sqlite"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}