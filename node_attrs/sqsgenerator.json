{
 "PRed":[
  {
   "PR":{
    "id":"d0c85cee-eb01-404c-854a-9f370a6c9312",
    "merged_at":"never issued",
    "state":"closed"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"MigrationYaml",
    "migrator_object_version":1,
    "migrator_version":0,
    "name":"python38"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":{
  "code":404,
  "exception":"HTTP Error 404: Not Found",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 622, in main",
   "    migrator_uid, pr_json = run(",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.py\", line 136, in run",
   "    migrate_return = migrator.migrate(recipe_dir, feedstock_ctx.attrs, **kwargs)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 223, in migrate",
   "    new_patterns = self.get_hash_patterns(\"meta.yaml\", urls, hash_type)",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/migrators/version.py\", line 102, in get_hash_patterns",
   "    hash_ = hash_url(url, hash_type)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 207, in hash_url",
   "    for b in stream_url_progress(url, verb='Hashing', quiet=quiet):",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/site-packages/rever/tools.xsh\", line 179, in stream_url_progress",
   "    with urllib.request.urlopen(url) as f:",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 222, in urlopen",
   "    return opener.open(url, data, timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 563, in error",
   "    result = self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 755, in http_error_302",
   "    return self.parent.open(new, timeout=req.timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 531, in open",
   "    response = meth(req, response)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 640, in http_response",
   "    response = self.parent.error(",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 569, in error",
   "    return self._call_chain(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 502, in _call_chain",
   "    result = func(*args)",
   "  File \"/opt/conda/envs/run_env/lib/python3.8/urllib/request.py\", line 649, in http_error_default",
   "    raise HTTPError(req.full_url, code, msg, hdrs, fp)",
   "urllib.error.HTTPError: HTTP Error 404: Not Found",
   ""
  ],
  "url":"https://codeload.github.com/dgehringer/sqsgenerator/tar.gz/0.0.4"
 },
 "conda-forge.yml":{},
 "feedstock_name":"sqsgenerator",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"This package is a Special Quasirandom Structure generator written\nin Python3/Cython. Please note that the programm currently only\nworks with Python 3.\n",
   "dev_url":"https://github.com/dnoeger/sqsgenerator",
   "doc_url":"https://github.com/dnoeger/sqsgenerator",
   "home":"https://github.com/dnoeger/sqsgenerator",
   "license":"GPL-3.0",
   "license_family":"GPL",
   "license_file":"LICENSE",
   "summary":"A command line tool written in Python/Cython for finding optimized SQS structures"
  },
  "build":{
   "number":"0",
   "script":" -m pip install . -vv",
   "skip":true
  },
  "extra":{
   "recipe-maintainers":[
    "jan-janssen",
    "dnoeger",
    "jan-janssen",
    "dnoeger",
    "jan-janssen",
    "dnoeger"
   ]
  },
  "package":{
   "name":"sqsgenerator",
   "version":"0.0.1"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host":[
    "python",
    "pip",
    "cython",
    "gmp",
    "pymatgen",
    "python",
    "pip",
    "cython",
    "gmp",
    "pymatgen",
    "python",
    "pip",
    "cython",
    "gmp",
    "pymatgen"
   ],
   "run":[
    "python",
    "gmp",
    "pymatgen",
    "python",
    "gmp",
    "pymatgen",
    "python",
    "gmp",
    "pymatgen"
   ]
  },
  "source":{
   "sha256":"b7550c645af75e5b50711c1c83a6ba4ef6461616cdf48f33cb42cb8893ce2c83",
   "url":"https://github.com/dnoeger/sqsgenerator/archive/0.0.1.tar.gz"
  },
  "test":{
   "imports":[
    "sqsgenerator",
    "sqsgenerator",
    "sqsgenerator"
   ]
  }
 },
 "name":"sqsgenerator",
 "new_version":"0.0.4",
 "pinning_version":"2019.11.01",
 "raw_meta_yaml":"{% set name = \"sqsgenerator\" %}\n{% set version = \"0.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dnoeger/{{name}}/archive/{{version}}.tar.gz\n  sha256: b7550c645af75e5b50711c1c83a6ba4ef6461616cdf48f33cb42cb8893ce2c83\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  skip: true  # [not linux or py<35]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - gmp \n    - pymatgen\n  run:\n    - python\n    - gmp \n    - pymatgen\n\ntest:\n  imports:\n    - sqsgenerator\n\nabout:\n  home: https://github.com/dnoeger/sqsgenerator\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'A command line tool written in Python/Cython for finding optimized SQS structures'\n\n  description: |\n    This package is a Special Quasirandom Structure generator written \n    in Python3/Cython. Please note that the programm currently only \n    works with Python 3.\n  doc_url: https://github.com/dnoeger/sqsgenerator\n  dev_url: https://github.com/dnoeger/sqsgenerator\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - dnoeger \n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cython",
   "gmp",
   "pip",
   "pymatgen",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "gmp",
    "pip",
    "pymatgen",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gmp",
    "pymatgen",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"3.6.2",
 "strong_exports":false,
 "time":1568135305.8179314,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "cython",
    "gmp",
    "pip",
    "pymatgen",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "gmp",
    "pymatgen",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/dnoeger/sqsgenerator/archive/0.0.1.tar.gz",
 "version":"0.0.1"
}