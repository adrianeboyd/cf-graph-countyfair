{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/505124085.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "pypy"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/505124440.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MatplotlibBase",
    "migrator_version": 0,
    "name": "matplotlib-to-matplotlib-base"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "archived": false,
 "bad": {
  "exception": "Variant configuration errors in ./feedstocks/tofu-feedstock/.ci_support/linux_64_numpy1.16python3.6.____cpython.yaml:\n  zip fields in zip_key group ('cdt_name', 'docker_image') are not all the same length",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 937, in main",
   "    hash_type=attrs.get(\"hash_type\", \"sha256\"),",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 249, in run",
   "    solvable, errors, _ = is_recipe_solvable(feedstock_dir)",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 433, in is_recipe_solvable",
   "    additional_channels=additional_channels,",
   "  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/mamba_solver.py\", line 516, in _is_recipe_solvable_on_platform",
   "    cbc, _ = conda_build.variants.get_package_combined_spec(recipe_dir, config=config)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda_build/variants.py\", line 523, in get_package_combined_spec",
   "    validate_spec(f, spec)",
   "  File \"/usr/share/miniconda/envs/run_env/lib/python3.7/site-packages/conda_build/variants.py\", line 171, in validate_spec",
   "    raise ValueError(\"Variant configuration errors in {}:\\n{}\".format(src, \"\\n\".join(errors)))",
   "ValueError: Variant configuration errors in ./feedstocks/tofu-feedstock/.ci_support/linux_64_numpy1.16python3.6.____cpython.yaml:",
   "  zip fields in zip_key group ('cdt_name', 'docker_image') are not all the same length",
   ""
  ]
 },
 "conda-forge.yml": {},
 "feedstock_name": "tofu",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "tofu stands for Tomography for Fusion, it is an IMAS-compatible open-source\nmachine-independent python library with non-open source plugins containing all machine-dependent routines.\nIt aims at providing the fusion and plasma community with an object-oriented, transparent and documented tool\nfor designing tomography diagnostics, computing synthetic signal (direct problem) as well as tomographic\ninversions (inverse problem). It gives access to a full 3D description of the diagnostic geometry, thus reducing\nthe impact of geometrical approximations on the direct and, most importantly, on the inverse problem.\ntofu is relevant for all diagnostics integrating, in a finitie field of view or along a set of lines of sight,\na quantity (scalar or vector) for which the plasma can be considered transparent (e.g.: light in the visible, UV,\nsoft and hard X-ray ranges, or electron density for interferometers).\n\ntofu is command-line oriented, for maximum flexibility and scriptability. The absence of a GUI is compensated by\nbuilt-in one-liners for interactive plots.\n\nA sphinx-generated documentation and the code itself is hosted on GitHub.\n",
   "dev_url": "https://github.com/ToFuProject/tofu",
   "doc_url": "https://tofuproject.github.io/tofu/",
   "home": "https://github.com/ToFuProject/tofu",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Project for an open-source python library for synthetic diagnostics and tomography for Fusion devices."
  },
  "build": {
   "number": "1",
   "script": " -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec"
   ]
  },
  "package": {
   "name": "tofu",
   "version": "1.4.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "openmp",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "openmp",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "openmp"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "openmp",
    "_openmp_mutex",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "openmp",
    "_openmp_mutex",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "openmp",
    "_openmp_mutex"
   ]
  },
  "source": {
   "patches": [
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch"
   ],
   "sha256": "273b416fe1ded6ba0f1a6cf43d9ebb1726492aa7b349ce4760876a920f051a4f",
   "url": "https://pypi.io/packages/source/t/tofu/tofu-1.4.7.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu"
   ],
   "imports": [
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom"
   ],
   "requires": [
    "nose",
    "nose",
    "nose"
   ],
   "source_files": [
    "tofu/tests",
    "tofu/tests",
    "tofu/tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "matplotlib-base",
    "numpy",
    "openmp",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "nose"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "tofu stands for Tomography for Fusion, it is an IMAS-compatible open-source\nmachine-independent python library with non-open source plugins containing all machine-dependent routines.\nIt aims at providing the fusion and plasma community with an object-oriented, transparent and documented tool\nfor designing tomography diagnostics, computing synthetic signal (direct problem) as well as tomographic\ninversions (inverse problem). It gives access to a full 3D description of the diagnostic geometry, thus reducing\nthe impact of geometrical approximations on the direct and, most importantly, on the inverse problem.\ntofu is relevant for all diagnostics integrating, in a finitie field of view or along a set of lines of sight,\na quantity (scalar or vector) for which the plasma can be considered transparent (e.g.: light in the visible, UV,\nsoft and hard X-ray ranges, or electron density for interferometers).\n\ntofu is command-line oriented, for maximum flexibility and scriptability. The absence of a GUI is compensated by\nbuilt-in one-liners for interactive plots.\n\nA sphinx-generated documentation and the code itself is hosted on GitHub.\n",
   "dev_url": "https://github.com/ToFuProject/tofu",
   "doc_url": "https://tofuproject.github.io/tofu/",
   "home": "https://github.com/ToFuProject/tofu",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Project for an open-source python library for synthetic diagnostics and tomography for Fusion devices."
  },
  "build": {
   "number": "1",
   "script": " -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec"
   ]
  },
  "package": {
   "name": "tofu",
   "version": "1.4.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "openmp",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "openmp",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "openmp",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "openmp",
    "_openmp_mutex",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "openmp",
    "_openmp_mutex",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "openmp",
    "_openmp_mutex",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch"
   ],
   "sha256": "273b416fe1ded6ba0f1a6cf43d9ebb1726492aa7b349ce4760876a920f051a4f",
   "url": "https://pypi.io/packages/source/t/tofu/tofu-1.4.7.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu"
   ],
   "imports": [
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom"
   ],
   "requires": [
    "nose",
    "nose",
    "nose",
    "nose",
    "nose",
    "nose",
    "nose",
    "nose",
    "nose"
   ],
   "source_files": [
    "tofu/tests",
    "tofu/tests",
    "tofu/tests",
    "tofu/tests",
    "tofu/tests",
    "tofu/tests",
    "tofu/tests",
    "tofu/tests",
    "tofu/tests"
   ]
  }
 },
 "name": "tofu",
 "new_version": "1.4.7",
 "osx_64_meta_yaml": {
  "about": {
   "description": "tofu stands for Tomography for Fusion, it is an IMAS-compatible open-source\nmachine-independent python library with non-open source plugins containing all machine-dependent routines.\nIt aims at providing the fusion and plasma community with an object-oriented, transparent and documented tool\nfor designing tomography diagnostics, computing synthetic signal (direct problem) as well as tomographic\ninversions (inverse problem). It gives access to a full 3D description of the diagnostic geometry, thus reducing\nthe impact of geometrical approximations on the direct and, most importantly, on the inverse problem.\ntofu is relevant for all diagnostics integrating, in a finitie field of view or along a set of lines of sight,\na quantity (scalar or vector) for which the plasma can be considered transparent (e.g.: light in the visible, UV,\nsoft and hard X-ray ranges, or electron density for interferometers).\n\ntofu is command-line oriented, for maximum flexibility and scriptability. The absence of a GUI is compensated by\nbuilt-in one-liners for interactive plots.\n\nA sphinx-generated documentation and the code itself is hosted on GitHub.\n",
   "dev_url": "https://github.com/ToFuProject/tofu",
   "doc_url": "https://tofuproject.github.io/tofu/",
   "home": "https://github.com/ToFuProject/tofu",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Project for an open-source python library for synthetic diagnostics and tomography for Fusion devices."
  },
  "build": {
   "number": "1",
   "script": " -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec"
   ]
  },
  "package": {
   "name": "tofu",
   "version": "1.4.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch"
   ],
   "sha256": "273b416fe1ded6ba0f1a6cf43d9ebb1726492aa7b349ce4760876a920f051a4f",
   "url": "https://pypi.io/packages/source/t/tofu/tofu-1.4.7.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu"
   ],
   "imports": [
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom"
   ],
   "requires": [
    "nose",
    "nose",
    "nose"
   ],
   "source_files": [
    "tofu/tests",
    "tofu/tests",
    "tofu/tests"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "nose"
   ]
  }
 },
 "pinning_version": "2020.10.16.18.51.08",
 "pre_pr_migrator_status": {
  "python39": "not solvable: ['win_64_numpy1.19python3.9.____cpython: Encountered problems while solving.\\nProblem: package scipy-0.19.1-py27h069396b_3 requires python >=2.7,<2.8.0a0, but none of the providers can be installed\\n']"
 },
 "raw_meta_yaml": "{% set name = \"tofu\" %}\n{% set version = \"1.4.7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 273b416fe1ded6ba0f1a6cf43d9ebb1726492aa7b349ce4760876a920f051a4f\n  patches:\n    - patches/0001_openmp_linux_only.patch\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n    - setuptools\n    - openmp  # [unix and not osx]\n  run:\n    - python\n    - numpy\n    - scipy\n    - matplotlib-base\n    - openmp  # [unix and not osx]\n    - _openmp_mutex  # [unix and not osx]\n\ntest:\n  imports:\n    - tofu\n    - tofu.geom\n  commands:\n    - nosetests tofu\n  requires:\n    - nose\n  source_files:\n    - tofu/tests\n\nabout:\n  home: https://github.com/ToFuProject/tofu\n  license: MIT\n  license_file: LICENSE.txt\n  summary: 'Project for an open-source python library for synthetic diagnostics and tomography for Fusion devices.'\n  description: |\n    tofu stands for Tomography for Fusion, it is an IMAS-compatible open-source\n    machine-independent python library with non-open source plugins containing all machine-dependent routines.\n    It aims at providing the fusion and plasma community with an object-oriented, transparent and documented tool\n    for designing tomography diagnostics, computing synthetic signal (direct problem) as well as tomographic\n    inversions (inverse problem). It gives access to a full 3D description of the diagnostic geometry, thus reducing\n    the impact of geometrical approximations on the direct and, most importantly, on the inverse problem.\n    tofu is relevant for all diagnostics integrating, in a finitie field of view or along a set of lines of sight,\n    a quantity (scalar or vector) for which the plasma can be considered transparent (e.g.: light in the visible, UV,\n    soft and hard X-ray ranges, or electron density for interferometers).\n\n    tofu is command-line oriented, for maximum flexibility and scriptability. The absence of a GUI is compensated by\n    built-in one-liners for interactive plots.\n\n    A sphinx-generated documentation and the code itself is hosted on GitHub.\n  doc_url: https://tofuproject.github.io/tofu/\n  dev_url: https://github.com/ToFuProject/tofu\n\nextra:\n  recipe-maintainers:\n    - flothesof\n    - Didou09\n    - lasofivec\n",
 "req": {
  "__set__": true,
  "elements": [
   "_openmp_mutex",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "matplotlib-base",
   "numpy",
   "openmp",
   "pip",
   "python",
   "scipy",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "matplotlib-base",
    "numpy",
    "openmp",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "nose"
   ]
  }
 },
 "smithy_version": "3.8.2",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "matplotlib-base",
    "numpy",
    "openmp",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "nose"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/t/tofu/tofu-1.4.7.tar.gz",
 "version": "1.4.7",
 "win_64_meta_yaml": {
  "about": {
   "description": "tofu stands for Tomography for Fusion, it is an IMAS-compatible open-source\nmachine-independent python library with non-open source plugins containing all machine-dependent routines.\nIt aims at providing the fusion and plasma community with an object-oriented, transparent and documented tool\nfor designing tomography diagnostics, computing synthetic signal (direct problem) as well as tomographic\ninversions (inverse problem). It gives access to a full 3D description of the diagnostic geometry, thus reducing\nthe impact of geometrical approximations on the direct and, most importantly, on the inverse problem.\ntofu is relevant for all diagnostics integrating, in a finitie field of view or along a set of lines of sight,\na quantity (scalar or vector) for which the plasma can be considered transparent (e.g.: light in the visible, UV,\nsoft and hard X-ray ranges, or electron density for interferometers).\n\ntofu is command-line oriented, for maximum flexibility and scriptability. The absence of a GUI is compensated by\nbuilt-in one-liners for interactive plots.\n\nA sphinx-generated documentation and the code itself is hosted on GitHub.\n",
   "dev_url": "https://github.com/ToFuProject/tofu",
   "doc_url": "https://tofuproject.github.io/tofu/",
   "home": "https://github.com/ToFuProject/tofu",
   "license": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Project for an open-source python library for synthetic diagnostics and tomography for Fusion devices."
  },
  "build": {
   "number": "1",
   "script": " -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec",
    "flothesof",
    "Didou09",
    "lasofivec"
   ]
  },
  "package": {
   "name": "tofu",
   "version": "1.4.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools",
    "python",
    "pip",
    "cython",
    "numpy",
    "setuptools"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base",
    "python",
    "numpy",
    "scipy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch",
    "patches/0001_openmp_linux_only.patch"
   ],
   "sha256": "273b416fe1ded6ba0f1a6cf43d9ebb1726492aa7b349ce4760876a920f051a4f",
   "url": "https://pypi.io/packages/source/t/tofu/tofu-1.4.7.tar.gz"
  },
  "test": {
   "commands": [
    "nosetests tofu",
    "nosetests tofu",
    "nosetests tofu"
   ],
   "imports": [
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom",
    "tofu",
    "tofu.geom"
   ],
   "requires": [
    "nose",
    "nose",
    "nose"
   ],
   "source_files": [
    "tofu/tests",
    "tofu/tests",
    "tofu/tests"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "nose"
   ]
  }
 }
}