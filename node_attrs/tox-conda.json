{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/317785166.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "0.2.1"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "conda-forge.yml": {},
 "feedstock_name": "tox-conda",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/tox-dev/tox-conda",
   "doc_url": "https://github.com/tox-dev/tox-conda",
   "home": "https://github.com/tox-dev/tox-conda",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Make tox cooperate with conda envs"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "njzjz"
   ]
  },
  "package": {
   "name": "tox-conda",
   "version": "0.2.1"
  },
  "requirements": {
   "host": [
    "python >3.3",
    "pip"
   ],
   "run": [
    "python >3.3",
    "tox >=3.8.1"
   ]
  },
  "source": {
   "sha256": "ee0a1c84aa2386ef92a85fba39b1578d0e464758b33becb2d1402b371a075c40",
   "url": "https://pypi.io/packages/source/t/tox-conda/tox-conda-0.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "tox_conda.plugin"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tox"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/tox-dev/tox-conda",
   "doc_url": "https://github.com/tox-dev/tox-conda",
   "home": "https://github.com/tox-dev/tox-conda",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Make tox cooperate with conda envs"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "njzjz"
   ]
  },
  "package": {
   "name": "tox-conda",
   "version": "0.2.1"
  },
  "requirements": {
   "host": [
    "python >3.3",
    "pip"
   ],
   "run": [
    "python >3.3",
    "tox >=3.8.1"
   ]
  },
  "source": {
   "sha256": "ee0a1c84aa2386ef92a85fba39b1578d0e464758b33becb2d1402b371a075c40",
   "url": "https://pypi.io/packages/source/t/tox-conda/tox-conda-0.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "tox_conda.plugin"
   ]
  }
 },
 "name": "tox-conda",
 "new_version": "0.4.1",
 "new_version_attempts": {
  "0.4.1": 25
 },
 "new_version_errors": {
  "0.4.1": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.4.1' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz'\n"
 },
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/tox-dev/tox-conda",
   "doc_url": "https://github.com/tox-dev/tox-conda",
   "home": "https://github.com/tox-dev/tox-conda",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Make tox cooperate with conda envs"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "njzjz"
   ]
  },
  "package": {
   "name": "tox-conda",
   "version": "0.2.1"
  },
  "requirements": {
   "host": [
    "python >3.3",
    "pip"
   ],
   "run": [
    "python >3.3",
    "tox >=3.8.1"
   ]
  },
  "source": {
   "sha256": "ee0a1c84aa2386ef92a85fba39b1578d0e464758b33becb2d1402b371a075c40",
   "url": "https://pypi.io/packages/source/t/tox-conda/tox-conda-0.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "tox_conda.plugin"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tox"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": [
  "tox-conda"
 ],
 "pinning_version": "2019.09.08",
 "pre_pr_migrator_status": {
  "version": "bot error: master: Traceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 426, in _make_request\n    six.raise_from(e, None)\n  File \"<string>\", line 3, in raise_from\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\n    httplib_response = conn.getresponse()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/http/client.py\", line 1347, in getresponse\n    response.begin()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/http/client.py\", line 307, in begin\n    version, status, reason = self._read_status()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/http/client.py\", line 268, in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/socket.py\", line 669, in readinto\n    return self._sock.recv_into(b)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/ssl.py\", line 1241, in recv_into\n    return self.read(nbytes, buffer)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/ssl.py\", line 1099, in read\n    return self._sslobj.read(len, buffer)\nsocket.timeout: The read operation timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 726, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/util/retry.py\", line 410, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/packages/six.py\", line 735, in reraise\n    raise value\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 670, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 428, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 335, in _raise_timeout\n    raise ReadTimeoutError(\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 196, in _request\n    return request_method(*args, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/github3/session.py\", line 169, in request\n    response = super(GitHubSession, self).request(*args, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/requests/adapters.py\", line 529, in send\n    raise ReadTimeout(e, request=request)\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1005, in main\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 162, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 197, in get_repo\n    repo = gh.repository(\"conda-forge\", feedstock_reponame)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/github3/github.py\", line 1981, in repository\n    json = self._json(self._get(url), 200)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 211, in _get\n    return self._request(\"get\", url, **kwargs)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.8/site-packages/github3/models.py\", line 201, in _request\n    raise exceptions.ConnectionError(exc)\ngithub3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)\n"
 },
 "raw_meta_yaml": "{% set name = \"tox-conda\" %}\n{% set version = \"0.2.1\" %}\n{% set sha256 = \"ee0a1c84aa2386ef92a85fba39b1578d0e464758b33becb2d1402b371a075c40\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - python >3.3\n    - pip\n  run:\n    - python >3.3\n    - tox >=3.8.1\n\ntest:\n  imports:\n    - tox_conda.plugin\n\nabout:\n  home: https://github.com/tox-dev/tox-conda\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Make tox cooperate with conda envs'\n  doc_url: https://github.com/tox-dev/tox-conda\n  dev_url: https://github.com/tox-dev/tox-conda\n\nextra:\n  recipe-maintainers:\n    - njzjz\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python",
   "tox"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tox"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "3.4.6",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >3.3"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >3.3",
    "tox >=3.8.1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/tox-conda/tox-conda-0.2.0.tar.gz",
 "version": "0.2.1",
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/tox-dev/tox-conda",
   "doc_url": "https://github.com/tox-dev/tox-conda",
   "home": "https://github.com/tox-dev/tox-conda",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Make tox cooperate with conda envs"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": " -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "njzjz"
   ]
  },
  "package": {
   "name": "tox-conda",
   "version": "0.2.1"
  },
  "requirements": {
   "host": [
    "python >3.3",
    "pip"
   ],
   "run": [
    "python >3.3",
    "tox >=3.8.1"
   ]
  },
  "source": {
   "sha256": "ee0a1c84aa2386ef92a85fba39b1578d0e464758b33becb2d1402b371a075c40",
   "url": "https://pypi.io/packages/source/t/tox-conda/tox-conda-0.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "tox_conda.plugin"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tox"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}