{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/220969344.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.6.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/234805116.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"CompilerRebuild",
    "migrator_version":1,
    "name":"Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/244234564.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/289924512.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"3.7.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":{
  "exception":"<class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
  "traceback":[
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request",
   "    six.raise_from(e, None)",
   "  File \"<string>\", line 3, in raise_from",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request",
   "    httplib_response = conn.getresponse()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 1321, in getresponse",
   "    response.begin()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 296, in begin",
   "    version, status, reason = self._read_status()",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/http/client.py\", line 257, in _read_status",
   "    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/socket.py\", line 589, in readinto",
   "    return self._sock.recv_into(b)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/contrib/pyopenssl.py\", line 326, in recv_into",
   "    raise timeout(\"The read operation timed out\")",
   "socket.timeout: The read operation timed out",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send",
   "    timeout=timeout",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen",
   "    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment",
   "    raise six.reraise(type(error), error, _stacktrace)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise",
   "    raise value",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen",
   "    chunked=chunked,",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request",
   "    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout",
   "    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value",
   "urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 196, in _request",
   "    return request_method(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 581, in post",
   "    return self.request('POST', url, data=data, json=json, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/session.py\", line 169, in request",
   "    response = super(GitHubSession, self).request(*args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request",
   "    resp = self.send(prep, **send_kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send",
   "    r = adapter.send(request, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send",
   "    raise ReadTimeout(e, request=request)",
   "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   "",
   "During handling of the above exception, another exception occurred:",
   "",
   "Traceback (most recent call last):",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 682, in main",
   "    hash_type=attrs.get('hash_type', 'sha256'))",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/auto_tick.xsh\", line 130, in run",
   "    migrator.remote_branch())",
   "  File \"/root/repo/cf-scripts/conda_forge_tick/git_utils.xsh\", line 230, in push_repo",
   "    pr = repo.create_pull(title, 'master', head, body=body)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/decorators.py\", line 31, in auth_wrapper",
   "    return func(self, *args, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/repos/repo.py\", line 1117, in create_pull",
   "    return self._create_pull(data)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/repos/repo.py\", line 120, in _create_pull",
   "    json = self._json(self._post(url, data=data), 201)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 221, in _post",
   "    return self._request(\"post\", url, data, **kwargs)",
   "  File \"/opt/conda/envs/run_env/lib/python3.7/site-packages/github3/models.py\", line 201, in _request",
   "    raise exceptions.ConnectionError(exc)",
   "github3.exceptions.ConnectionError: <class 'requests.exceptions.ReadTimeout'>: A connection-level exception occurred: HTTPSConnectionPool(host='api.github.com', port=443): Read timed out. (read timeout=10)",
   ""
  ]
 },
 "conda-forge.yml":{
  "compiler_stack":"comp7",
  "max_py_ver":"37",
  "max_r_ver":"35",
  "provider":{
   "win":"azure"
  }
 },
 "feedstock_name":"typing_extensions",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"The typing module was added to the standard library in Python 3.5 on a\nprovisional basis and will no longer be provisional in Python 3.7. However,\nthis means users of Python 3.5 - 3.6 who are unable to upgrade will not be\nable to take advantage of new types added to the typing module, such as\ntyping.Text or typing.Coroutine.\n\nThe typing_extensions module contains both backports of these changes\nas well as experimental types that will eventually be added to the typing\nmodule, such as Protocol.\n\nUsers of other Python versions should continue to install and use the\ntyping module from PyPi instead of using this one unless specifically\nwriting code that must be compatible with multiple Python versions or\nrequires experimental types.\n",
   "dev_url":"https://github.com/python/typing",
   "doc_url":"https://github.com/python/typing",
   "home":"https://github.com/python/typing/tree/master/typing_extensions",
   "license":"PSF",
   "license_family":"PSF",
   "license_file":"LICENSE",
   "summary":"Backported and Experimental Type Hints for Python"
  },
  "build":{
   "number":"0"
  },
  "extra":{
   "recipe-maintainers":[
    "dougalsutherland",
    "dougalsutherland",
    "dougalsutherland"
   ]
  },
  "outputs":[
   {
    "build":{
     "script":"python -m pip install --no-deps --ignore-installed ."
    },
    "name":"typing_extensions",
    "requirements":{
     "host":[
      "python",
      "pip"
     ],
     "run":[
      "python"
     ]
    },
    "test":{
     "imports":[
      "typing_extensions"
     ]
    }
   },
   {
    "name":"typing-extensions",
    "requirements":{
     "run":[
      "subpackage_stub",
      "python"
     ]
    },
    "test":{
     "imports":[
      "typing_extensions"
     ]
    }
   },
   {
    "build":{
     "script":"python -m pip install --no-deps --ignore-installed ."
    },
    "name":"typing_extensions",
    "requirements":{
     "host":[
      "python",
      "pip"
     ],
     "run":[
      "python"
     ]
    },
    "test":{
     "imports":[
      "typing_extensions"
     ]
    }
   },
   {
    "name":"typing-extensions",
    "requirements":{
     "run":[
      "subpackage_stub",
      "python"
     ]
    },
    "test":{
     "imports":[
      "typing_extensions"
     ]
    }
   },
   {
    "build":{
     "script":"python -m pip install --no-deps --ignore-installed ."
    },
    "name":"typing_extensions",
    "requirements":{
     "host":[
      "python",
      "pip"
     ],
     "run":[
      "python"
     ]
    },
    "test":{
     "imports":[
      "typing_extensions"
     ]
    }
   },
   {
    "name":"typing-extensions",
    "requirements":{
     "run":[
      "subpackage_stub",
      "python"
     ]
    },
    "test":{
     "imports":[
      "typing_extensions"
     ]
    }
   }
  ],
  "package":{
   "name":"typing_extensions",
   "version":"3.7.4"
  },
  "source":{
   "sha256":"2ed632b30bb54fc3941c382decfd0ee4148f5c591651c9272473fea2c6397d95",
   "url":"https://pypi.io/packages/source/t/typing_extensions/typing_extensions-3.7.4.tar.gz"
  }
 },
 "name":"typing_extensions",
 "new_version":"3.7.4.1",
 "outputs_names":[
  "typing-extensions",
  "typing_extensions"
 ],
 "pinning_version":"2019.06.18",
 "raw_meta_yaml":"{% set name = \"typing_extensions\" %}\n{% set version = \"3.7.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 2ed632b30bb54fc3941c382decfd0ee4148f5c591651c9272473fea2c6397d95\n\nbuild:\n  number: 0\n\noutputs:\n  - name: {{ name }}\n    build:\n      script: python -m pip install --no-deps --ignore-installed .\n    requirements:\n      host:\n        - python\n        - pip\n      run:\n        - python\n        - typing >=3.7.4  # [py<35]\n    test:\n      imports:\n        - typing_extensions\n\n  - name: typing-extensions\n    requirements:\n      run:\n        - {{ pin_subpackage(name, exact=True) }}\n        - python\n    test:\n      imports:\n        - typing_extensions\n\nabout:\n  home: https://github.com/python/typing/tree/master/typing_extensions\n  license: PSF\n  license_family: PSF\n  license_file: LICENSE\n  summary: 'Backported and Experimental Type Hints for Python'\n  description: |\n    The typing module was added to the standard library in Python 3.5 on a\n    provisional basis and will no longer be provisional in Python 3.7. However,\n    this means users of Python 3.5 - 3.6 who are unable to upgrade will not be\n    able to take advantage of new types added to the typing module, such as\n    typing.Text or typing.Coroutine.\n\n    The typing_extensions module contains both backports of these changes\n    as well as experimental types that will eventually be added to the typing\n    module, such as Protocol.\n\n    Users of other Python versions should continue to install and use the\n    typing module from PyPi instead of using this one unless specifically\n    writing code that must be compatible with multiple Python versions or\n    requires experimental types.\n  doc_url: https://github.com/python/typing\n  dev_url: https://github.com/python/typing\n\nextra:\n  recipe-maintainers:\n    - dougalsutherland\n",
 "req":{
  "__set__":true,
  "elements":[
   "pip",
   "python",
   "subpackage_stub"
  ]
 },
 "smithy_version":"3.3.7",
 "url":"https://pypi.io/packages/source/t/typing_extensions/typing_extensions-3.7.4.tar.gz",
 "version":"3.7.4"
}