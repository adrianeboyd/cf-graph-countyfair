{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/228853883.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/300418294.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"verde",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"Verde is a Python library for processing spatial data (bathymetry, geophysics\nsurveys, etc) and interpolating it on regular grids (i.e., *gridding*).\nMost gridding methods in Verde use a Green's functions approach.\nA linear model is estimated based on the input data and then used to predict\ndata on a regular grid (or in a scatter, a profile, as derivatives).\nThe models are Green's functions from (mostly) elastic deformation theory.\nThis approach is very similar to *machine learning* so we implement gridder\nclasses that are similar to scikit-learn regression classes.\nThe API is not 100% compatible but it should look familiar to those with some\nscikit-learn experience.\n",
   "dev_url":"https://github.com/fatiando/verde",
   "doc_url":"https://www.fatiando.org/verde",
   "home":"http://github.com/fatiando/verde",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.txt",
   "summary":"Processing and gridding spatial data using Green's functions"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "leouieda",
    "leouieda",
    "leouieda"
   ]
  },
  "package":{
   "name":"verde",
   "version":"1.2.0"
  },
  "requirements":{
   "host":[
    "python >=3.6",
    "pip",
    "python >=3.6",
    "pip",
    "python >=3.6",
    "pip"
   ],
   "run":[
    "python >=3.6",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "scikit-learn",
    "pooch",
    "python >=3.6",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "scikit-learn",
    "pooch",
    "python >=3.6",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "scikit-learn",
    "pooch"
   ]
  },
  "source":{
   "sha256":"5b0b70cbdcc83db6bbf13245f4427af62b1516721fce0d0cdd8b99afef6cb932",
   "url":"https://pypi.io/packages/source/v/verde/verde-1.2.0.tar.gz"
  },
  "test":{
   "commands":[
    "pytest --pyargs verde.tests.test_minimal",
    "pytest --pyargs verde.tests.test_minimal",
    "pytest --pyargs verde.tests.test_minimal"
   ],
   "imports":[
    "verde",
    "verde",
    "verde"
   ],
   "requires":[
    "pytest",
    "pyproj",
    "pytest",
    "pyproj",
    "pytest",
    "pyproj"
   ]
  }
 },
 "name":"verde",
 "new_version":"1.2.0",
 "pinning_version":"2019.07.23",
 "raw_meta_yaml":"{% set name = \"verde\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 5b0b70cbdcc83db6bbf13245f4427af62b1516721fce0d0cdd8b99afef6cb932\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n  run:\n    - python >=3.6\n    - numpy\n    - scipy\n    - pandas\n    - xarray\n    - scikit-learn\n    - pooch\n\ntest:\n  requires:\n    - pytest\n    - pyproj\n  imports:\n    - verde\n  commands:\n    - pytest --pyargs verde.tests.test_minimal\n\nabout:\n  home: http://github.com/fatiando/verde\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: \"Processing and gridding spatial data using Green's functions\"\n  description: |\n    Verde is a Python library for processing spatial data (bathymetry, geophysics\n    surveys, etc) and interpolating it on regular grids (i.e., *gridding*).\n    Most gridding methods in Verde use a Green's functions approach.\n    A linear model is estimated based on the input data and then used to predict\n    data on a regular grid (or in a scatter, a profile, as derivatives).\n    The models are Green's functions from (mostly) elastic deformation theory.\n    This approach is very similar to *machine learning* so we implement gridder\n    classes that are similar to scikit-learn regression classes.\n    The API is not 100% compatible but it should look familiar to those with some\n    scikit-learn experience.\n  doc_url: https://www.fatiando.org/verde\n  dev_url: https://github.com/fatiando/verde\n\nextra:\n  recipe-maintainers:\n    - leouieda\n",
 "req":{
  "__set__":true,
  "elements":[
   "numpy",
   "pandas",
   "pip",
   "pooch",
   "python",
   "scikit-learn",
   "scipy",
   "xarray"
  ]
 },
 "smithy_version":"3.4.1",
 "time":1568072510.1492887,
 "url":"https://pypi.io/packages/source/v/verde/verde-1.2.0.tar.gz",
 "version":"1.2.0"
}