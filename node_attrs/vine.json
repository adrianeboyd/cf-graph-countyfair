{
 "PRed": [
  {
   "PR": {
    "__lazy_json__": "pr_json/199906830.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Noarch",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/242499955.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.2.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/262372371.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "1.3.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "__lazy_json__": "pr_json/480818118.json"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "5.0.0"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived": false,
 "bad": false,
 "conda-forge.yml": {},
 "feedstock_name": "vine",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is a special implementation of promises in that it can be used both\nfor promise of a value and lazy evaluation. The biggest upside for this\nis that everything in a promise can also be a promise, e.g. filters,\ncallbacks and errbacks can all be promises.\n",
   "dev_url": "https://github.com/celery/vine",
   "doc_url": "http://vine.readthedocs.io/",
   "home": "http://github.com/celery/vine",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python promises"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "frol",
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "vine",
   "version": "5.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "vine-5.0.0.tar.gz",
   "sha256": "7d3b1624a953da82ef63462013bbd271d3eb75751489f9807598e8f340bd637e",
   "url": "https://pypi.io/packages/source/v/vine/vine-5.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "vine"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is a special implementation of promises in that it can be used both\nfor promise of a value and lazy evaluation. The biggest upside for this\nis that everything in a promise can also be a promise, e.g. filters,\ncallbacks and errbacks can all be promises.\n",
   "dev_url": "https://github.com/celery/vine",
   "doc_url": "http://vine.readthedocs.io/",
   "home": "http://github.com/celery/vine",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python promises"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "-m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "frol",
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "vine",
   "version": "5.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "vine-5.0.0.tar.gz",
   "sha256": "7d3b1624a953da82ef63462013bbd271d3eb75751489f9807598e8f340bd637e",
   "url": "https://pypi.io/packages/source/v/vine/vine-5.0.0.tar.gz"
  },
  "test": {
   "imports": [
    "vine"
   ]
  }
 },
 "name": "vine",
 "new_version": "5.0.0",
 "new_version_attempts": {
  "5.0.0": 1
 },
 "new_version_errors": {},
 "osx_64_meta_yaml": {
  "about": {
   "description": "This is a special implementation of promises in that it can be used both\nfor promise of a value and lazy evaluation. The biggest upside for this\nis that everything in a promise can also be a promise, e.g. filters,\ncallbacks and errbacks can all be promises.\n",
   "dev_url": "https://github.com/celery/vine",
   "doc_url": "http://vine.readthedocs.io/",
   "home": "http://github.com/celery/vine",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python promises"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "frol",
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "vine",
   "version": "1.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "vine-1.3.0.tar.gz",
   "sha256": "133ee6d7a9016f177ddeaf191c1f58421a1dcc6ee9a42c58b34bed40e1d2cd87",
   "url": "https://pypi.io/packages/source/v/vine/vine-1.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "vine"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "pinning_version": "2020.09.04.10.00.02",
 "raw_meta_yaml": "{% set name = \"vine\" %}\n{% set version = \"5.0.0\" %}\n{% set sha256 = \"7d3b1624a953da82ef63462013bbd271d3eb75751489f9807598e8f340bd637e\" %}\n{% set build = 0 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: {{ build }}\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - vine\n\nabout:\n  home: http://github.com/celery/vine\n  license: BSD 3-clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python promises\n\n  description: |\n    This is a special implementation of promises in that it can be used both\n    for promise of a value and lazy evaluation. The biggest upside for this\n    is that everything in a promise can also be a promise, e.g. filters,\n    callbacks and errbacks can all be promises.\n  doc_url: http://vine.readthedocs.io/\n  dev_url: https://github.com/celery/vine\n\nextra:\n  recipe-maintainers:\n    - frol\n    - pmlandwehr\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "smithy_version": "No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/v/vine/vine-1.3.0.tar.gz",
 "version": "5.0.0",
 "win_64_meta_yaml": {
  "about": {
   "description": "This is a special implementation of promises in that it can be used both\nfor promise of a value and lazy evaluation. The biggest upside for this\nis that everything in a promise can also be a promise, e.g. filters,\ncallbacks and errbacks can all be promises.\n",
   "dev_url": "https://github.com/celery/vine",
   "doc_url": "http://vine.readthedocs.io/",
   "home": "http://github.com/celery/vine",
   "license": "BSD 3-clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python promises"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "frol",
    "pmlandwehr"
   ]
  },
  "package": {
   "name": "vine",
   "version": "1.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "vine-1.3.0.tar.gz",
   "sha256": "133ee6d7a9016f177ddeaf191c1f58421a1dcc6ee9a42c58b34bed40e1d2cd87",
   "url": "https://pypi.io/packages/source/v/vine/vine-1.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "vine"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}