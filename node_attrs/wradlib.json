{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/212379971.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.1.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.2.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/265784916.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.3.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/281976842.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/288064707.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/288200028.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.4.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/303787362.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.5.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/306312044.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Rebuild",
    "migrator_version":0,
    "name":"gdal-3.0.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad":false,
 "conda-forge.yml":{},
 "feedstock_name":"wradlib",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"http://wradlib.org/",
   "license":"MIT",
   "license_file":"LICENSE.txt",
   "summary":"Open Source Library for Weather Radar Data Processing"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":" -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
  },
  "extra":{
   "recipe-maintainers":[
    "jjhelmus",
    "kmuehlbauer",
    "jjhelmus",
    "kmuehlbauer",
    "jjhelmus",
    "kmuehlbauer"
   ]
  },
  "package":{
   "name":"wradlib",
   "version":"1.5.0"
  },
  "requirements":{
   "host":[
    "python >=3",
    "pip",
    "semver",
    "python >=3",
    "pip",
    "semver",
    "python >=3",
    "pip",
    "semver"
   ],
   "run":[
    "python >=3",
    "deprecation",
    "numpy",
    "scipy",
    "matplotlib",
    "h5py",
    "netcdf4",
    "gdal",
    "xarray",
    "cartopy",
    "semver",
    "xmltodict",
    "python >=3",
    "deprecation",
    "numpy",
    "scipy",
    "matplotlib",
    "h5py",
    "netcdf4",
    "gdal",
    "xarray",
    "cartopy",
    "semver",
    "xmltodict",
    "python >=3",
    "deprecation",
    "numpy",
    "scipy",
    "matplotlib",
    "h5py",
    "netcdf4",
    "gdal",
    "xarray",
    "cartopy",
    "semver",
    "xmltodict"
   ]
  },
  "source":{
   "sha256":"9bf0742d7235ea830e83c2269f6b5d1afd83d92696efce0a7bcdb0c4f6604784",
   "url":"https://pypi.io/packages/source/w/wradlib/wradlib-1.5.0.tar.gz"
  },
  "test":{
   "commands":null,
   "imports":[
    "wradlib"
   ]
  }
 },
 "name":"wradlib",
 "new_version":"1.5.0",
 "pinning_version":"2019.08.11",
 "raw_meta_yaml":"{% set version = \"1.5.0\" %}\n\npackage:\n  name: wradlib\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/w/wradlib/wradlib-{{ version }}.tar.gz\n  sha256: 9bf0742d7235ea830e83c2269f6b5d1afd83d92696efce0a7bcdb0c4f6604784\n\nbuild:\n  number: 0\n  noarch: python\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - python >=3\n    - pip\n    - semver\n  run:\n    - python >=3\n    - deprecation\n    - numpy\n    - scipy\n    - matplotlib\n    - h5py\n    - netcdf4\n    - gdal\n    - xarray\n    - cartopy\n    - semver\n    - xmltodict\n\ntest:\n  imports:\n    - wradlib  # [not osx]\n  commands:\n    # hack to get macosx matplotlib running\n    # see https://github.com/conda-forge/wradlib-feedstock/pull/20\n    - python -c \"import matplotlib as mpl; mpl.use('Agg'); import wradlib\"  # [osx]\n\nabout:\n  home: http://wradlib.org/\n  license: MIT\n  license_file: LICENSE.txt\n  summary: \"Open Source Library for Weather Radar Data Processing\"\n\nextra:\n  recipe-maintainers:\n    - jjhelmus\n    - kmuehlbauer\n",
 "req":{
  "__set__":true,
  "elements":[
   "cartopy",
   "deprecation",
   "gdal",
   "h5py",
   "matplotlib",
   "netcdf4",
   "numpy",
   "pip",
   "python",
   "scipy",
   "semver",
   "xarray",
   "xmltodict"
  ]
 },
 "smithy_version":"3.4.1",
 "url":"https://pypi.io/packages/source/w/wradlib/wradlib-1.5.0.tar.gz",
 "version":"1.5.0"
}