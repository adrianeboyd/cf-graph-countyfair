{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/313993223.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.23.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/343251320.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/353674645.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/354191124.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/356500278.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/358238455.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.4"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/385208456.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.24.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/398120216.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.25.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/403372547.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.25.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/408999487.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.26.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/414213176.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.26.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/445452299.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.28.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/469082821.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.28.1"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/474918504.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"0.28.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived":false,
 "bad":false,
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  }
 },
 "feedstock_name":"zeroconf",
 "hash_type":"sha256",
 "linux_64_meta_yaml":{
  "about":{
   "home":"https://github.com/jstasiak/python-zeroconf",
   "license":"LGPL-2.1-only",
   "license_family":"LGPL",
   "license_file":"COPYING",
   "summary":"A pure python implementation of multicast DNS service discovery"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "abloemert",
    "niecore"
   ]
  },
  "package":{
   "name":"zeroconf",
   "version":"0.28.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "ifaddr >=0.1.7"
   ]
  },
  "source":{
   "sha256":"902e6c3ca4cc752577d650d05a3e7102a897b647fe76da7c0d322cd493cbd1a3",
   "url":"https://pypi.io/packages/source/z/zeroconf/zeroconf-0.28.1.tar.gz"
  },
  "test":{
   "imports":[
    "zeroconf"
   ]
  }
 },
 "linux_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ifaddr",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "meta_yaml":{
  "about":{
   "home":"https://github.com/jstasiak/python-zeroconf",
   "license":"LGPL-2.1-only",
   "license_family":"LGPL",
   "license_file":"COPYING",
   "summary":"A pure python implementation of multicast DNS service discovery"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "abloemert",
    "niecore"
   ]
  },
  "package":{
   "name":"zeroconf",
   "version":"0.28.1"
  },
  "requirements":{
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "ifaddr >=0.1.7"
   ]
  },
  "source":{
   "sha256":"902e6c3ca4cc752577d650d05a3e7102a897b647fe76da7c0d322cd493cbd1a3",
   "url":"https://pypi.io/packages/source/z/zeroconf/zeroconf-0.28.1.tar.gz"
  },
  "test":{
   "imports":[
    "zeroconf"
   ]
  }
 },
 "name":"zeroconf",
 "new_version":"0.28.2",
 "new_version_attempts":{
  "0.25.1":1,
  "0.26.0":1,
  "0.26.1":1,
  "0.28.0":1,
  "0.28.1":1,
  "0.28.2":1
 },
 "new_version_errors":{},
 "osx_64_meta_yaml":{
  "about":{
   "home":"https://github.com/jstasiak/python-zeroconf",
   "license":"LGPL-2.1-only",
   "license_family":"LGPL",
   "license_file":"COPYING",
   "summary":"A pure python implementation of multicast DNS service discovery"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "abloemert",
    "niecore"
   ]
  },
  "package":{
   "name":"zeroconf",
   "version":"0.28.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "ifaddr >=0.1.7"
   ]
  },
  "source":{
   "sha256":"881da2ed3d7c8e0ab59fb1cc8b02b53134351941c4d8d3f3553a96700f257a03",
   "url":"https://pypi.io/packages/source/z/zeroconf/zeroconf-0.28.0.tar.gz"
  },
  "test":{
   "imports":[
    "zeroconf"
   ]
  }
 },
 "osx_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ifaddr",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "pinning_version":"2020.08.27.12.52.30",
 "raw_meta_yaml":"{% set name = \"zeroconf\" %}\n{% set version = \"0.28.1\" %}\n{% set sha256 = \"902e6c3ca4cc752577d650d05a3e7102a897b647fe76da7c0d322cd493cbd1a3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - ifaddr >=0.1.7\n\ntest:\n  imports:\n    - zeroconf\n\nabout:\n  home: https://github.com/jstasiak/python-zeroconf\n  license: LGPL-2.1-only\n  license_family: LGPL\n  license_file: COPYING\n  summary: A pure python implementation of multicast DNS service discovery\n\nextra:\n  recipe-maintainers:\n    - abloemert\n    - niecore\n",
 "req":{
  "__set__":true,
  "elements":[
   "ifaddr",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ifaddr",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.10",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ifaddr >=0.1.7",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://pypi.io/packages/source/z/zeroconf/zeroconf-0.23.0.tar.gz",
 "version":"0.28.1",
 "win_64_meta_yaml":{
  "about":{
   "home":"https://github.com/jstasiak/python-zeroconf",
   "license":"LGPL-2.1-only",
   "license_family":"LGPL",
   "license_file":"COPYING",
   "summary":"A pure python implementation of multicast DNS service discovery"
  },
  "build":{
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "abloemert",
    "niecore"
   ]
  },
  "package":{
   "name":"zeroconf",
   "version":"0.28.0"
  },
  "requirements":{
   "host":[
    "python",
    "pip"
   ],
   "run":[
    "python",
    "ifaddr >=0.1.7"
   ]
  },
  "source":{
   "sha256":"881da2ed3d7c8e0ab59fb1cc8b02b53134351941c4d8d3f3553a96700f257a03",
   "url":"https://pypi.io/packages/source/z/zeroconf/zeroconf-0.28.0.tar.gz"
  },
  "test":{
   "imports":[
    "zeroconf"
   ]
  }
 },
 "win_64_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "ifaddr",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 }
}